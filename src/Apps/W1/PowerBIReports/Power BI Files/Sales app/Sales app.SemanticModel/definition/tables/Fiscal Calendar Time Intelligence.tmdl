table 'Fiscal Calendar Time Intelligence'
	lineageTag: a5b0348a-e1fa-4173-8b14-f011a570c172

	measure 'Sales Amount YTD (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates],
			    VAR LastDayAvailable = MAX ( 'Date'[Fiscal DayOfYearNumber] )
			    VAR LastFiscalYearAvailable = MAX ( 'Date'[Fiscal YearNumber] )
			    VAR Result =
			        CALCULATE (
			            [Sales (LCY)],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[WeekDayNumber] ),
			            'Date'[Fiscal DayOfYearNumber] <= LastDayAvailable,
			            'Date'[Fiscal YearNumber] = LastFiscalYearAvailable
			        )
			    RETURN
			        Result
			)
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Amount\Period-to-date total
		lineageTag: 31908a5c-a131-4b40-b78d-2739c497c866

		changedProperty = FormatString

	measure 'Sales Amount PY (Fiscal)' = ```
			
			VAR MonthsOffset = 12
			RETURN IF (
			    [ShowValueForDates],
			    SUMX (
			        SUMMARIZE ( 'Date', 'Date'[Fiscal YearMonthNumber] ),
			        VAR CurrentYearMonthNumber = 'Date'[Fiscal YearMonthNumber]
			        VAR PreviousYearMonthNumber = CurrentYearMonthNumber - MonthsOffset
			        VAR DaysOnMonth = 
			            CALCULATE (
			                COUNTROWS ( 'Date' ),
			                ALLEXCEPT ( 
			                    'Date', 
			                    'Date'[Fiscal YearMonthNumber],  -- Year Month granularity
			                    'Date'[Day Type],        -- Filter-safe Date column
			                    'Date'[WeekDayNumber]         -- Filter-safe Date column
			                )
			            )
			        VAR DaysSelected = 
			            CALCULATE ( 
			                COUNTROWS ( 'Date' ), 
			                'Date'[DateWithSales] = TRUE 
			            )
			        RETURN IF (
			            DaysOnMonth = DaysSelected,
			
			            -- Selection of all days in the month
			            CALCULATE (
			                [Sales (LCY)],
			                ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[WeekDayNumber] ),
			                'Date'[Fiscal YearMonthNumber] = PreviousYearMonthNumber
			            ),
			            
			            -- Partial selection of days in a month
			            CALCULATE (
			                [Sales (LCY)],
			                ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[WeekDayNumber] ),
			                'Date'[Fiscal YearMonthNumber] = PreviousYearMonthNumber,
			                CALCULATETABLE ( 
			                    VALUES ( 'Date'[Fiscal DayOfMonthNumber] ),
			                    ALLEXCEPT ( 'Date', 'Date'[Fiscal DayOfMonthNumber], 'Date'[Date] ),
			                    'Date'[Fiscal YearMonthNumber] = CurrentYearMonthNumber,
			                    'Date'[DateWithSales] = TRUE 
			                )
			            )
			        )
			    )
			)
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Amount\Period-over-period growth
		lineageTag: 70f79800-2833-4b1e-885f-289ca546187d

		changedProperty = FormatString

	measure 'Sales Amount PYTD (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates],
			    VAR PreviousFiscalYear = MAX ( 'Date'[Fiscal YearNumber] ) - 1
			    VAR LastDayOfFiscalYearAvailable = 
			        CALCULATE ( 
			            MAX ( 'Date'[Fiscal DayOfYearNumber] ),
			            REMOVEFILTERS (                -- Remove filters from
			                'Date'[Day Type],       -- filter-safe columns
			                'Date'[Week Day],       -- to get the last day with data
			                'Date'[WeekDayNumber] -- selected in the report
			            ),
			            'Date'[DateWithSales] = TRUE 
			        )
			    VAR Result =
			        CALCULATE (
			            [Sales (LCY)],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearNumber] = PreviousFiscalYear,
			            'Date'[Fiscal DayOfYearNumber] <= LastDayOfFiscalYearAvailable,
			            'Date'[DateWithSales] = TRUE 
			        )
			    RETURN
			        Result
			)
			
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Amount\Period-to-date growth
		lineageTag: 17f5cbf7-a553-42f1-aec0-2c377d5ae683

	measure 'Sales Amount PQTD (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates],
			    VAR LastMonthSelected = 
			        MAX ( 'Date'[Fiscal YearMonthNumber] )
			    VAR DaysOnLastMonth = 
			        CALCULATE (
			            COUNTROWS ( 'Date' ),
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearMonthNumber] = LastMonthSelected
			        )
			    VAR DaysLastMonthSelected = 
			        CALCULATE ( 
			            COUNTROWS ( 'Date' ), 
			            'Date'[DateWithSales] = TRUE,
			            'Date'[Fiscal YearMonthNumber] = LastMonthSelected
			        )
			    VAR LastDayOfMonthWithSales =  
			        MAX ( 
			            -- End of month of any month
			            31 * (DaysOnLastMonth = DaysLastMonthSelected),  
			            -- or last day selected with data 
			            CALCULATE ( 
			                MAX ( 'Date'[Fiscal DayOfMonthNumber] ),
			                REMOVEFILTERS (                -- Remove filters from all of the
			                    'Date'[Day Type],       -- filter-safe columns
			                    'Date'[Week Day],       -- to get the last day with data
			                    'Date'[WeekDayNumber] -- selected in the report
			                ),
			                'Date'[Fiscal YearMonthNumber] = LastMonthSelected,
			                'Date'[DateWithSales] = TRUE 
			            )
			        )
			    VAR LastMonthInQuarterWithSales = 
			        CALCULATE ( 
			            MAX ( 'Date'[Fiscal MonthInQuarterNumber] ),
			            REMOVEFILTERS (                -- Remove filters from all of the
			                'Date'[Day Type],       -- filter-safe columns
			                'Date'[Week Day],       -- to get the last day with data
			                'Date'[WeekDayNumber] -- selected in the report
			            ),
			            'Date'[DateWithSales] = TRUE 
			        )
			    VAR PreviousFiscalYearQuarter = 
			        MAX ( 'Date'[Fiscal YearQuarterNumber] ) - 1
			    VAR FilterQTD = 
			        FILTER (
			            ALL ( 'Date'[Fiscal MonthInQuarterNumber], 'Date'[Fiscal DayOfMonthNumber] ),
			            ISONORAFTER ( 
			                'Date'[Fiscal MonthInQuarterNumber], LastMonthInQuarterWithSales, DESC,
			                'Date'[Fiscal DayOfMonthNumber], LastDayOfMonthWithSales, DESC
			            )
			        )
			    VAR Result =
			        CALCULATE (
			            [Sales (LCY)],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearQuarterNumber] = PreviousFiscalYearQuarter,
			            FilterQTD
			        )
			    RETURN
			        Result
			)
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Amount\Period-to-date growth
		lineageTag: 3c9b45f5-94c8-4c3e-9660-c737a6ba2548

	measure 'Sales Amount QTD (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates],
			    VAR LastDayAvailable =  MAX ( 'Date'[Fiscal DayOfYearNumber] )
			    VAR LastFiscalYearQuarterAvailable = MAX ( 'Date'[Fiscal YearQuarterNumber] )
			    VAR Result =
			        CALCULATE (
			            [Sales (LCY)],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal DayOfYearNumber] <= LastDayAvailable,
			            'Date'[Fiscal YearQuarterNumber] = LastFiscalYearQuarterAvailable
			        )
			    RETURN
			        Result
			)
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Amount\Period-to-date total
		lineageTag: bb5d5f3b-5a86-44c3-a360-2d5a065e7bf3

		changedProperty = FormatString

	/// This measure calculates the month-to-date sales amount using the fiscal calendar. It considers sales up to the last available fiscal day of the current month and year.
	measure 'Sales Amount MTD (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates],
			    VAR LastDayAvailable =  MAX ( 'Date'[Fiscal DayOfMonthNumber] )
			    VAR LastFiscalYearMonthAvailable = MAX ( 'Date'[Fiscal YearMonthNumber] )
			    VAR Result =
			        CALCULATE (
			            [Sales (LCY)],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal DayOfMonthNumber] <= LastDayAvailable,
			            'Date'[Fiscal YearMonthNumber] = LastFiscalYearMonthAvailable
			        )
			    RETURN
			        Result
			)
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Amount\Period-to-date total
		lineageTag: 02285440-6577-4f5e-a3eb-68ffaeb7417a

		changedProperty = FormatString

	measure 'Sales Amount YOY % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Sales Amount YOY (Fiscal)],
			    [Sales Amount PY (Fiscal)]
			)
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Sales\Sales Amount\Period-over-period growth
		lineageTag: 2dbdd701-f0a6-48c5-9061-acf2e326d390

	measure 'Sales Amount YOY (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Sales (LCY)]
			VAR ValuePreviousPeriod = [Sales Amount PY (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Amount\Period-over-period growth
		lineageTag: 80f0d2c9-ed87-462b-a228-3d0fc9b4646a

		changedProperty = FormatString

	measure 'Sales Amount PQ (Fiscal)' = ```
			
			VAR MonthsOffset = 3
			RETURN IF (
			    [ShowValueForDates],
			    SUMX (
			        SUMMARIZE ( 'Date', 'Date'[Fiscal YearMonthNumber] ),
			        VAR CurrentYearMonthNumber = 'Date'[Fiscal YearMonthNumber]
			        VAR PreviousYearMonthNumber = CurrentYearMonthNumber - MonthsOffset
			        VAR DaysOnMonth = 
			            CALCULATE (
			                COUNTROWS ( 'Date' ),
			                ALLEXCEPT ( 'Date', 'Date'[Fiscal YearMonthNumber], 'Date'[Day Type], 'Date'[Week Day] )
			            )
			        VAR DaysSelected = 
			            CALCULATE ( 
			                COUNTROWS ( 'Date' ), 
			                'Date'[DateWithSales] = TRUE 
			            )
			        RETURN IF (
			            DaysOnMonth = DaysSelected,
			
			            -- Selection of all days in the month
			            CALCULATE (
			                [Sales (LCY)],
			                ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			                'Date'[Fiscal YearMonthNumber] = PreviousYearMonthNumber
			            ),
			            
			            -- Partial selection of days in a month
			            CALCULATE (
			                [Sales (LCY)],
			                ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			                'Date'[Fiscal YearMonthNumber] = PreviousYearMonthNumber,
			                CALCULATETABLE ( 
			                    VALUES ( 'Date'[Fiscal DayOfMonthNumber] ),
			                    ALLEXCEPT ( 'Date', 'Date'[Fiscal DayOfMonthNumber], 'Date'[Date] ),
			                    'Date'[Fiscal YearMonthNumber] = CurrentYearMonthNumber,
			                    'Date'[DateWithSales] = TRUE 
			                )
			            )
			        )
			    )
			)
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Amount\Period-over-period growth
		lineageTag: 485d61c4-76d2-47a7-927e-18b9bdcedcfd

		changedProperty = FormatString

	measure 'Sales Amount QOQ (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Sales (LCY)]
			VAR ValuePreviousPeriod = [Sales Amount PQ (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Amount\Period-over-period growth
		lineageTag: 20cdb205-4403-48fc-8672-afbd8fc0d046

		changedProperty = FormatString

	measure 'Sales Amount QOQ % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Sales Amount QOQ (Fiscal)],
			    [Sales Amount PQ (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Sales\Sales Amount\Period-over-period growth
		lineageTag: 40010c8b-f05b-4177-a280-a11a95ec098c

	measure 'Sales Amount PM (Fiscal)' = ```
			
			VAR MonthsOffset = 1
			RETURN IF (
			    [ShowValueForDates],
			    SUMX (
			        SUMMARIZE ( 'Date', 'Date'[Fiscal YearMonthNumber] ),
			        VAR CurrentYearMonthNumber = 'Date'[Fiscal YearMonthNumber]
			        VAR PreviousYearMonthNumber = CurrentYearMonthNumber - MonthsOffset
			        VAR DaysOnMonth = 
			            CALCULATE (
			                COUNTROWS ( 'Date' ),
			                ALLEXCEPT ( 'Date', 'Date'[Fiscal YearMonthNumber], 'Date'[Day Type], 'Date'[Week Day] )
			            )
			        VAR DaysSelected = 
			            CALCULATE ( 
			                COUNTROWS ( 'Date' ), 
			                'Date'[DateWithSales] = TRUE 
			            )
			        RETURN IF (
			            DaysOnMonth = DaysSelected,
			
			            -- Selection of all days in the month
			            CALCULATE (
			                [Sales (LCY)],
			                ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			                'Date'[Fiscal YearMonthNumber] = PreviousYearMonthNumber
			            ),
			            
			            -- Partial selection of days in a month
			            CALCULATE (
			                [Sales (LCY)],
			                ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			                'Date'[Fiscal YearMonthNumber] = PreviousYearMonthNumber,
			                CALCULATETABLE ( 
			                    VALUES ( 'Date'[Fiscal DayOfMonthNumber] ),
			                    ALLEXCEPT ( 'Date', 'Date'[Fiscal DayOfMonthNumber], 'Date'[Date] ),
			                    'Date'[Fiscal YearMonthNumber] = CurrentYearMonthNumber,
			                    'Date'[DateWithSales] = TRUE 
			                )
			            )
			        )
			    )
			)
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Amount\Period-over-period growth
		lineageTag: 3f19fb2f-eab7-4448-8b21-de757611b0b7

		changedProperty = FormatString

	measure 'Sales Amount MOM (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Sales (LCY)]
			VAR ValuePreviousPeriod = [Sales Amount PM (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Amount\Period-over-period growth
		lineageTag: f5bdf479-2ffb-4be4-9d2f-f5f38c6516e4

		changedProperty = FormatString

	measure 'Sales Amount MOM % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Sales Amount MOM (Fiscal)],
			    [Sales Amount PM (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Sales\Sales Amount\Period-over-period growth
		lineageTag: 5d9523c0-8af4-4310-8eed-83c2b122abb6

	/// This measure calculates the sales for the last 12 months (moving annual total). It uses the fiscal calendar and sums the sales between the calculated first and last days of the 365-day period.
	measure 'Sales Amount MAT (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates], 
			    VAR LastDayMAT =  MAX ( 'Date'[Sequential365DayNumber] )
			    VAR FirstDayMAT = INT ( EDATE ( LastDayMAT + 1, -12 ) )
			    VAR Result = 
			        CALCULATE ( 
			            [Sales (LCY)], 
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Sequential365DayNumber] >= FirstDayMAT 
			                && 'Date'[Sequential365DayNumber] <= LastDayMAT
			        ) 
			    RETURN
			        Result
			)
			
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Amount\Moving annual total growth
		lineageTag: 3ebd885d-e831-42b7-9974-f0ba47339dd6

		changedProperty = FormatString

	/// This measure calculates the total sales for the prior 12 months based on the fiscal calendar. It then determines the maximum available date and calculates the range from the previous 24 months to the last available day to 12 months before. It uses these dates to sum the sales amount for this period while maintaining filters for the day type and weekday
	measure 'Sales Amount PYMAT (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates], 
			    VAR LastDayAvailable = MAX ( 'Date'[Sequential365DayNumber] )
			    VAR LastDayMAT =  INT ( EDATE ( LastDayAvailable, -12 ) )
			    VAR FirstDayMAT = INT ( EDATE ( LastDayAvailable + 1, -24 ) )
			    VAR Result = 
			        CALCULATE ( 
			            [Sales (LCY)], 
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Sequential365DayNumber] >= FirstDayMAT 
			                && 'Date'[Sequential365DayNumber] <= LastDayMAT
			        ) 
			    RETURN 
			        Result
			)
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Amount\Moving annual total growth
		lineageTag: d2b5c75f-307a-41ff-9a4c-7242dfa46e01

		changedProperty = FormatString

	measure 'Sales Amount YOYTD (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Sales Amount YTD (Fiscal)]
			VAR ValuePreviousPeriod = [Sales Amount PYTD (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Amount\Period-to-date growth
		lineageTag: 1947cd95-0ba2-461d-babf-1f4ad34785aa

	measure 'Sales Amount YOYTD % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Sales Amount YOYTD (Fiscal)],
			    [Sales Amount PYTD (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Sales\Sales Amount\Period-to-date growth
		lineageTag: 30804502-022b-46bc-912c-960b03bcf57c

	measure 'Sales Amount PYC (Fiscal)' = ```
			
			IF (
			    [ShowValueForDates] && HASONEVALUE ( 'Date'[Fiscal YearNumber] ),
			    VAR PreviousFiscalYear = MAX ( 'Date'[Fiscal YearNumber] ) - 1
			    VAR Result =
			        CALCULATE (
			            [Sales (LCY)],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearNumber] = PreviousFiscalYear
			        )
			    RETURN
			        Result
			)
			
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Amount\Period-to-date over full previous period
		lineageTag: 73325c62-84b5-4d3b-89bc-62f89dbee359

	measure 'Sales Amount YTDOPY (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Sales Amount YTD (Fiscal)]
			VAR ValuePreviousPeriod = [Sales Amount PYC (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Amount\Period-to-date over full previous period
		lineageTag: 92dd052e-693e-4009-a964-2622a0e7baa7

	measure 'Sales Amount YTDOPY % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Sales Amount YTDOPY (Fiscal)],
			    [Sales Amount PYC (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Sales\Sales Amount\Period-to-date over full previous period
		lineageTag: 02fbd05c-b12a-48a5-8780-a7b4f677ca44

	measure 'Sales Amount QOQTD (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Sales Amount QTD (Fiscal)]
			VAR ValuePreviousPeriod = [Sales Amount PQTD (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Amount\Period-to-date growth
		lineageTag: 9fe2dbd0-9af5-4901-be8b-40dff707e466

	measure 'Sales Amount QOQTD % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Sales Amount QOQTD (Fiscal)],
			    [Sales Amount PQTD (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Sales\Sales Amount\Period-to-date growth
		lineageTag: d0e941cb-a662-448c-9c25-407f16a6fc28

	measure 'Sales Amount PQC (Fiscal)' =
			
			IF (
			    [ShowValueForDates] && HASONEVALUE ( 'Date'[Fiscal YearQuarterNumber] ),
			    VAR PreviousFiscalYearQuarter = MAX ( 'Date'[Fiscal YearQuarterNumber] ) - 1
			    VAR Result =
			        CALCULATE (
			            [Sales (LCY)],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearQuarterNumber] = PreviousFiscalYearQuarter
			        )
			    RETURN
			        Result
			)
		formatString: #,0.00
		displayFolder: Sales\Sales Amount\Period-to-date over full previous period
		lineageTag: 173e4491-3538-47d2-a7d5-316d3313d283

	measure 'Sales Amount QTDOPQ (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Sales Amount QTD (Fiscal)]
			VAR ValuePreviousPeriod = [Sales Amount PQC (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Amount\Period-to-date over full previous period
		lineageTag: e763749d-76f1-40f5-8d66-02fb23763be7

	measure 'Sales Amount QTDOPQ % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Sales Amount QTDOPQ (Fiscal)],
			    [Sales Amount PQC (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Sales\Sales Amount\Period-to-date over full previous period
		lineageTag: 22df6e40-b536-46af-9a3f-c678c2607a31

	measure 'Sales Amount PMTD (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates],
			    VAR LastMonthSelected = 
			        MAX ( 'Date'[Fiscal YearMonthNumber] )
			    VAR DaysOnLastMonth = 
			        CALCULATE (
			            COUNTROWS ( 'Date' ),
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearMonthNumber] = LastMonthSelected
			        )
			    VAR DaysLastMonthSelected = 
			        CALCULATE ( 
			            COUNTROWS ( 'Date' ), 
			            'Date'[DateWithSales] = TRUE,
			            'Date'[Fiscal YearMonthNumber] = LastMonthSelected
			        )
			    VAR LastDayOfMonthWithSales =  
			        MAX ( 
			            -- End of month of any month
			            31 * (DaysOnLastMonth = DaysLastMonthSelected),  
			            -- or last day selected with data 
			            CALCULATE ( 
			                MAX ( 'Date'[Fiscal DayOfMonthNumber] ),
			                REMOVEFILTERS (                -- Remove filters from all of the
			                    'Date'[Day Type],       -- filter-safe columns
			                    'Date'[Week Day],       -- to get the last day with data
			                    'Date'[WeekDayNumber] -- selected in the report
			                ),
			                'Date'[Fiscal YearMonthNumber] = LastMonthSelected,
			                'Date'[DateWithSales] = TRUE 
			            )
			        )
			    VAR PreviousYearMonth = 
			        LastMonthSelected - 1
			    VAR Result = 
			        CALCULATE (
			            [Sales (LCY)],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearMonthNumber] = PreviousYearMonth,
			            'Date'[Fiscal DayOfMonthNumber] <= LastDayOfMonthWithSales
			        )
			    RETURN 
			        Result
			)
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Amount\Period-to-date growth
		lineageTag: 9890d779-2b45-4b3f-b74a-61383fe619a5

	measure 'Sales Amount MOMTD % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Sales Amount MOMTD (Fiscal)],
			    [Sales Amount PMTD (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Sales\Sales Amount\Period-to-date growth
		lineageTag: ecb21d8e-0068-4699-8939-d0ed7252eff5

	measure 'Sales Amount MOMTD (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Sales Amount MTD (Fiscal)]
			VAR ValuePreviousPeriod = [Sales Amount PMTD (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Amount\Period-to-date growth
		lineageTag: 73335b44-5322-4cd9-b91c-d305968e8f08

	measure 'Sales Amount PMC (Fiscal)' = ```
			
			IF (
			    [ShowValueForDates] && HASONEVALUE ( 'Date'[Fiscal YearMonthNumber] ),
			    VAR PreviousFiscalYearMonth = MAX ( 'Date'[Fiscal YearMonthNumber] ) - 1
			    VAR Result =
			        CALCULATE (
			            [Sales (LCY)],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearMonthNumber] = PreviousFiscalYearMonth
			        )
			    RETURN
			        Result
			)
			
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Amount\Period-to-date over full previous period
		lineageTag: c8e6cef1-5049-4b65-8e44-ab0d81f08d56

	measure 'Sales Amount MTDOPM (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Sales Amount MTD (Fiscal)]
			VAR ValuePreviousPeriod = [Sales Amount PMC (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Amount\Period-to-date over full previous period
		lineageTag: 0d375c7e-e0be-49e5-b28f-4ae8d565743e

	measure 'Sales Amount MTDOPM % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Sales Amount MTDOPM (Fiscal)],
			    [Sales Amount PMC (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Sales\Sales Amount\Period-to-date over full previous period
		lineageTag: 55456323-d588-4bd3-9497-41bdc7144857

	/// This measure calculates the average sales over the last 30 days based on the fiscal calendar. The measure determines the maximum day in the dataset and defines the 30-day period ending on that day. It gets the days within this range while maintaining filters for day type and weekday. It also identifies the first day with sales data to ensure valid calculations. If the first day with data is within the 30-day period, it calculates the average sales amount over those days and returns the result.
	measure 'Sales Amount AVG 30D (Fiscal)' = ```
			
			IF (
			    [ShowValueForDates],
			    VAR LastDayMAT =
			        MAX ( 'Date'[Sequential365DayNumber] )
			    VAR FirstDayMAT = LastDayMAT - 29
			    VAR Period30D =
			        CALCULATETABLE (
			            VALUES ( 'Date'[Sequential365DayNumber] ),
			            ALLEXCEPT (
			                'Date',
			                'Date'[Day Type],
			                'Date'[Week Day]
			            ),
			            'Date'[Sequential365DayNumber] >= FirstDayMAT
			                && 'Date'[Sequential365DayNumber] <= LastDayMAT,
			            'Date'[DateWithSales] = TRUE
			        )
			 VAR FirstDayWithData =
			        CALCULATE (
			            INT (
			                MINX (
			                    {
			                        MIN ( 'Sales Value Entries'[postingDate] ),
			                        MIN ( 'Sales Invoice Lines'[postingDate] ),
			                        MIN ( 'Sales Credit Lines'[postingDate] ),
			                        MIN ( 'Project Ledger Entries'[postingDate] )
			                    },
			                    [Value]
			                )
			            ),
			            REMOVEFILTERS ()
			        )
			    VAR FirstDayInPeriod =
			        MINX (
			            Period30D,
			            'Date'[Sequential365DayNumber]
			        )
			    VAR Result =
			        IF (
			            FirstDayWithData <= FirstDayInPeriod,
			            CALCULATE (
			                AVERAGEX ( Period30D, [Sales (LCY)] ),
			                REMOVEFILTERS ( 'Date' )
			            )
			        )
			    RETURN
			        Result
			)
			
			
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Amount\Moving averages
		lineageTag: a8d193f1-68e1-47b3-943c-5a394a51fd51

	measure 'Sales Amount AVG 3M (Fiscal)' =
			
			IF (
			    [ShowValueForDates],
			    VAR LastDayMAT =
			        MAX ( 'Date'[Sequential365DayNumber] )
			    VAR FirstDayMAT =
			        INT ( EDATE ( LastDayMAT + 1, -3 ) )
			    VAR Period3M =
			       CALCULATETABLE (
			            VALUES ( 'Date'[Sequential365DayNumber] ),
			            ALLEXCEPT (
			                'Date',
			                'Date'[Day Type],
			                'Date'[Week Day]
			            ),
			            'Date'[Sequential365DayNumber] >= FirstDayMAT
			                && 'Date'[Sequential365DayNumber] <= LastDayMAT,
			            'Date'[DateWithSales] = TRUE
			        )
			    VAR FirstDayWithData =
			            CALCULATE (
			                INT (
			                    MINX (
			                        {
			                            MIN ( 'Sales Value Entries'[postingDate] ),
			                            MIN ( 'Sales Invoice Lines'[postingDate] ),
			                            MIN ( 'Sales Credit Lines'[postingDate] ),
			                            MIN ( 'Project Ledger Entries'[postingDate] )
			                        },
			                        [Value]
			                    )
			                ),
			                REMOVEFILTERS ()
			            )
			    VAR FirstDayInPeriod =
			        MINX (
			            Period3M,
			            'Date'[Sequential365DayNumber]
			        )
			    VAR Result =
			        IF (
			            FirstDayWithData <= FirstDayInPeriod,
			            CALCULATE (
			                AVERAGEX ( Period3M, [Sales (LCY)] ),
			                REMOVEFILTERS ( 'Date' )
			            )
			        )
			    RETURN
			        Result
			)
		formatString: #,0.00
		displayFolder: Sales\Sales Amount\Moving averages
		lineageTag: 0c45545f-f7c0-40a4-92ff-1c4957772281

	measure 'Sales Amount AVG 1Y (Fiscal)' =
			
			IF (
			    [ShowValueForDates],
			    VAR LastDayMAT =
			        MAX ( 'Date'[Sequential365DayNumber] )
			    VAR FirstDayMAT =
			        INT ( EDATE ( LastDayMAT + 1, -12 ) )
			    VAR Period1Y =
			        CALCULATETABLE (
			            VALUES ( 'Date'[Sequential365DayNumber] ),
			            ALLEXCEPT (
			                'Date',
			                'Date'[Day Type],
			                'Date'[Week Day]
			            ),
			            'Date'[Sequential365DayNumber] >= FirstDayMAT
			                && 'Date'[Sequential365DayNumber] <= LastDayMAT,
			            'Date'[DateWithSales] = TRUE
			        )
			 VAR FirstDayWithData =
			        CALCULATE (
			            INT (
			                MINX (
			                    {
			                        MIN ( 'Sales Value Entries'[postingDate] ),
			                        MIN ( 'Sales Invoice Lines'[postingDate] ),
			                        MIN ( 'Sales Credit Lines'[postingDate] ),
			                        MIN ( 'Project Ledger Entries'[postingDate] )
			                    },
			                    [Value]
			                )
			            ),
			            REMOVEFILTERS ()
			        )
			    VAR FirstDayInPeriod =
			        MINX (
			            Period1Y,
			            'Date'[Sequential365DayNumber]
			        )
			    VAR Result =
			        IF (
			            FirstDayWithData <= FirstDayInPeriod,
			            CALCULATE (
			                AVERAGEX ( Period1Y, [Sales (LCY)] ),
			                REMOVEFILTERS ( 'Date' )
			            )
			        )
			    RETURN
			        Result
			)
		formatString: #,0.00
		displayFolder: Sales\Sales Amount\Moving averages
		lineageTag: 4cd71425-12d2-4af5-94da-af3fd0695594

	/// This measure calculates the year-over-year growth in sales by comparing the current period's moving annual total sales to the previous period's moving annual total sales. If both values aren't blank, it subtracts the previous period's sales from the current period's sales to determine the growth. The result is the change in sales between the two periods.
	measure 'Sales Amount MATG (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Sales Amount MAT (Fiscal)]
			VAR ValuePreviousPeriod = [Sales Amount PYMAT (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Amount\Moving annual total growth
		lineageTag: dbbc6bbc-17bd-442b-b56d-b5eebdc7948a

		changedProperty = FormatString

	/// This measure calculates the percentage growth in sales by dividing the year-over-year growth in sales (Sales Amount MATG (Fiscal)) by the previous period's moving annual total sales (Sales Amount PYMAT (Fiscal)).
	measure 'Sales Amount MATG % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Sales Amount MATG (Fiscal)],
			    [Sales Amount PYMAT (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Sales\Sales Amount\Moving annual total growth
		lineageTag: b27e52aa-f241-4daa-9e17-7bbf11ee6056

	/// This measure determines the appropriate sales amount based on the current context of the date hierarchy in the fiscal calendar. It uses the SWITCH function to evaluate whether the context is at the fiscal month, fiscal quarter, or fiscal year level.
	measure 'Sales Amount PP (Fiscal)' = ```
			
			SWITCH ( 
			    TRUE,
			    ISINSCOPE ( 'Date'[Fiscal Month Year] ), [Sales Amount PM (Fiscal)],
			    ISINSCOPE ( 'Date'[Fiscal Quarter Year] ), [Sales Amount PQ (Fiscal)],
			    ISINSCOPE ( 'Date'[Fiscal Year] ), [Sales Amount PY (Fiscal)]
			)
			
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Amount\Period-over-period growth
		lineageTag: 505ad1d6-4aad-4313-a956-760ff22cbd85

		changedProperty = FormatString

	/// This measure calculates the change in sales between the current period and the previous period based on the context of the fiscal calendar. It uses the SWITCH function to determine the appropriate previous period calculation depending on whether the current context is at the fiscal month, quarter, or year level. When at the fiscal month level, it references the month-over-month change from the Sales Amount MOM (Fiscal) measure, which computes the difference between the current month's sales and the previous month's sales. Similarly, for fiscal quarters and years, it uses quarter-over-quarter and year-over-year calculations, respectively.
	measure 'Sales Amount POP (Fiscal)' = ```
			
			SWITCH ( 
			    TRUE,
			    ISINSCOPE ( 'Date'[Fiscal Month Year] ), [Sales Amount MOM (Fiscal)],
			    ISINSCOPE ( 'Date'[Fiscal Quarter Year] ), [Sales Amount QOQ (Fiscal)],
			    ISINSCOPE ( 'Date'[Fiscal Year] ), [Sales Amount YOY (Fiscal)]
			)
			
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Amount\Period-over-period growth
		lineageTag: ce68e3d0-864e-41d5-b21f-89c8193a4879

		changedProperty = FormatString

	/// This measure calculates the percentage growth in sales between the current and previous period based on the context of the fiscal calendar. It uses the SWITCH function to determine the appropriate previous period calculation depending on whether the current context is at the fiscal month, quarter, or year level. When at the fiscal month level, it references the month-over-month change from the Sales Amount MOM % (Fiscal) measure, which determines the percentage growth between the current month's sales and the previous month's sales. Similarly, for fiscal quarters and years, it uses quarter-over-quarter and year-over-year calculations, respectively.
	measure 'Sales Amount POP % (Fiscal)' = ```
			
			SWITCH ( 
			    TRUE,
			    ISINSCOPE ( 'Date'[Fiscal Month Year] ), [Sales Amount MOM % (Fiscal)],
			    ISINSCOPE ( 'Date'[Fiscal Quarter Year] ), [Sales Amount QOQ % (Fiscal)],
			    ISINSCOPE ( 'Date'[Fiscal Year] ), [Sales Amount YOY % (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Sales\Sales Amount\Period-over-period growth
		lineageTag: 0544a395-ecfa-4a6b-a504-aefc124d125c

	measure 'Sales Amount MAT (364) (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates], 
			    VAR LastDayMAT =  MAX ( 'Date'[Sequential365DayNumber] )
			    VAR FirstDayMAT = LastDayMAT - 363
			    VAR Result = 
			        CALCULATE ( 
			            [Sales (LCY)], 
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Sequential365DayNumber] >= FirstDayMAT 
			                && 'Date'[Sequential365DayNumber] <= LastDayMAT
			        ) 
			    RETURN
			        Result
			)
			
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Amount\Moving annual total growth
		lineageTag: 22e1d8df-477d-488f-8ab7-aeccf916724e

		changedProperty = FormatString

	measure 'Sales PYMAT (364) (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates], 
			    VAR LastDayAvailable = MAX ( 'Date'[Sequential365DayNumber] )
			    VAR LastDayMAT = LastDayAvailable - 364
			    VAR FirstDayMAT = LastDayMAT - 363
			    VAR Result = 
			        CALCULATE ( 
			            [Sales (LCY)], 
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Sequential365DayNumber] >= FirstDayMAT 
			                && 'Date'[Sequential365DayNumber] <= LastDayMAT
			        ) 
			    RETURN
			        Result
			)
			
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Amount\Moving annual total growth
		lineageTag: 38cd1dc3-135b-4114-8ac6-f2ff82d271f5

		changedProperty = FormatString

	measure 'Sales Quantity YTD (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates],
			    VAR LastDayAvailable = MAX ( 'Date'[Fiscal DayOfYearNumber] )
			    VAR LastFiscalYearAvailable = MAX ( 'Date'[Fiscal YearNumber] )
			    VAR Result =
			        CALCULATE (
			            [Sales Quantity],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[WeekDayNumber] ),
			            'Date'[Fiscal DayOfYearNumber] <= LastDayAvailable,
			            'Date'[Fiscal YearNumber] = LastFiscalYearAvailable
			        )
			    RETURN
			        Result
			)
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Quantity\Period-to-date total
		lineageTag: ef42ed86-0848-4afb-88df-bc28e284a4dc

	measure 'Sales Quantity PY (Fiscal)' = ```
			
			VAR MonthsOffset = 12
			RETURN IF (
			    [ShowValueForDates],
			    SUMX (
			        SUMMARIZE ( 'Date', 'Date'[Fiscal YearMonthNumber] ),
			        VAR CurrentYearMonthNumber = 'Date'[Fiscal YearMonthNumber]
			        VAR PreviousYearMonthNumber = CurrentYearMonthNumber - MonthsOffset
			        VAR DaysOnMonth = 
			            CALCULATE (
			                COUNTROWS ( 'Date' ),
			                ALLEXCEPT ( 
			                    'Date', 
			                    'Date'[Fiscal YearMonthNumber],  -- Year Month granularity
			                    'Date'[Day Type],        -- Filter-safe Date column
			                    'Date'[WeekDayNumber]         -- Filter-safe Date column
			                )
			            )
			        VAR DaysSelected = 
			            CALCULATE ( 
			                COUNTROWS ( 'Date' ), 
			                'Date'[DateWithSales] = TRUE 
			            )
			        RETURN IF (
			            DaysOnMonth = DaysSelected,
			
			            -- Selection of all days in the month
			            CALCULATE (
			                [Sales Quantity],
			                ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[WeekDayNumber] ),
			                'Date'[Fiscal YearMonthNumber] = PreviousYearMonthNumber
			            ),
			            
			            -- Partial selection of days in a month
			            CALCULATE (
			                [Sales Quantity],
			                ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[WeekDayNumber] ),
			                'Date'[Fiscal YearMonthNumber] = PreviousYearMonthNumber,
			                CALCULATETABLE ( 
			                    VALUES ( 'Date'[Fiscal DayOfMonthNumber] ),
			                    ALLEXCEPT ( 'Date', 'Date'[Fiscal DayOfMonthNumber], 'Date'[Date] ),
			                    'Date'[Fiscal YearMonthNumber] = CurrentYearMonthNumber,
			                    'Date'[DateWithSales] = TRUE 
			                )
			            )
			        )
			    )
			)
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Quantity\Period-over-period growth
		lineageTag: dce3e7b1-a072-41b7-b91d-c7bb8f90f4f6

	measure 'Sales Quantity PYTD (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates],
			    VAR PreviousFiscalYear = MAX ( 'Date'[Fiscal YearNumber] ) - 1
			    VAR LastDayOfFiscalYearAvailable = 
			        CALCULATE ( 
			            MAX ( 'Date'[Fiscal DayOfYearNumber] ),
			            REMOVEFILTERS (                -- Remove filters from
			                'Date'[Day Type],       -- filter-safe columns
			                'Date'[Week Day],       -- to get the last day with data
			                'Date'[WeekDayNumber] -- selected in the report
			            ),
			            'Date'[DateWithSales] = TRUE 
			        )
			    VAR Result =
			        CALCULATE (
			            [Sales Quantity],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearNumber] = PreviousFiscalYear,
			            'Date'[Fiscal DayOfYearNumber] <= LastDayOfFiscalYearAvailable,
			            'Date'[DateWithSales] = TRUE 
			        )
			    RETURN
			        Result
			)
			
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Quantity\Period-to-date growth
		lineageTag: 77cb5048-17b0-488b-b913-51342a42202c

	measure 'Sales Quantity PQTD (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates],
			    VAR LastMonthSelected = 
			        MAX ( 'Date'[Fiscal YearMonthNumber] )
			    VAR DaysOnLastMonth = 
			        CALCULATE (
			            COUNTROWS ( 'Date' ),
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearMonthNumber] = LastMonthSelected
			        )
			    VAR DaysLastMonthSelected = 
			        CALCULATE ( 
			            COUNTROWS ( 'Date' ), 
			            'Date'[DateWithSales] = TRUE,
			            'Date'[Fiscal YearMonthNumber] = LastMonthSelected
			        )
			    VAR LastDayOfMonthWithSales =  
			        MAX ( 
			            -- End of month of any month
			            31 * (DaysOnLastMonth = DaysLastMonthSelected),  
			            -- or last day selected with data 
			            CALCULATE ( 
			                MAX ( 'Date'[Fiscal DayOfMonthNumber] ),
			                REMOVEFILTERS (                -- Remove filters from all of the
			                    'Date'[Day Type],       -- filter-safe columns
			                    'Date'[Week Day],       -- to get the last day with data
			                    'Date'[WeekDayNumber] -- selected in the report
			                ),
			                'Date'[Fiscal YearMonthNumber] = LastMonthSelected,
			                'Date'[DateWithSales] = TRUE 
			            )
			        )
			    VAR LastMonthInQuarterWithSales = 
			        CALCULATE ( 
			            MAX ( 'Date'[Fiscal MonthInQuarterNumber] ),
			            REMOVEFILTERS (                -- Remove filters from all of the
			                'Date'[Day Type],       -- filter-safe columns
			                'Date'[Week Day],       -- to get the last day with data
			                'Date'[WeekDayNumber] -- selected in the report
			            ),
			            'Date'[DateWithSales] = TRUE 
			        )
			    VAR PreviousFiscalYearQuarter = 
			        MAX ( 'Date'[Fiscal YearQuarterNumber] ) - 1
			    VAR FilterQTD = 
			        FILTER (
			            ALL ( 'Date'[Fiscal MonthInQuarterNumber], 'Date'[Fiscal DayOfMonthNumber] ),
			            ISONORAFTER ( 
			                'Date'[Fiscal MonthInQuarterNumber], LastMonthInQuarterWithSales, DESC,
			                'Date'[Fiscal DayOfMonthNumber], LastDayOfMonthWithSales, DESC
			            )
			        )
			    VAR Result =
			        CALCULATE (
			            [Sales Quantity],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearQuarterNumber] = PreviousFiscalYearQuarter,
			            FilterQTD
			        )
			    RETURN
			        Result
			)
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Quantity\Period-to-date growth
		lineageTag: 0ae5e911-25c9-49ef-a9cd-db86f96c4a27

	measure 'Sales Quantity QTD (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates],
			    VAR LastDayAvailable =  MAX ( 'Date'[Fiscal DayOfYearNumber] )
			    VAR LastFiscalYearQuarterAvailable = MAX ( 'Date'[Fiscal YearQuarterNumber] )
			    VAR Result =
			        CALCULATE (
			            [Sales Quantity],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal DayOfYearNumber] <= LastDayAvailable,
			            'Date'[Fiscal YearQuarterNumber] = LastFiscalYearQuarterAvailable
			        )
			    RETURN
			        Result
			)
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Quantity\Period-to-date total
		lineageTag: a39fc947-ef19-4e75-b828-aec533f343fc

	measure 'Sales Quantity MTD (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates],
			    VAR LastDayAvailable =  MAX ( 'Date'[Fiscal DayOfMonthNumber] )
			    VAR LastFiscalYearMonthAvailable = MAX ( 'Date'[Fiscal YearMonthNumber] )
			    VAR Result =
			        CALCULATE (
			            [Sales Quantity],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal DayOfMonthNumber] <= LastDayAvailable,
			            'Date'[Fiscal YearMonthNumber] = LastFiscalYearMonthAvailable
			        )
			    RETURN
			        Result
			)
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Quantity\Period-to-date total
		lineageTag: 14aac3eb-0623-49bd-8d86-852241218c90

	measure 'Sales Quantity YOY % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Sales Quantity YOY (Fiscal)],
			    [Sales Quantity PY (Fiscal)]
			)
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Sales\Sales Quantity\Period-over-period growth
		lineageTag: 71da04a1-6a4b-4d59-a6b6-fc08ab2d1089

	measure 'Sales Quantity YOY (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Sales Quantity]
			VAR ValuePreviousPeriod = [Sales Quantity PY (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Quantity\Period-over-period growth
		lineageTag: 941e469b-b4e7-4015-aaba-ac4cd5fca9d7

	measure 'Sales Quantity PQ (Fiscal)' = ```
			
			VAR MonthsOffset = 3
			RETURN IF (
			    [ShowValueForDates],
			    SUMX (
			        SUMMARIZE ( 'Date', 'Date'[Fiscal YearMonthNumber] ),
			        VAR CurrentYearMonthNumber = 'Date'[Fiscal YearMonthNumber]
			        VAR PreviousYearMonthNumber = CurrentYearMonthNumber - MonthsOffset
			        VAR DaysOnMonth = 
			            CALCULATE (
			                COUNTROWS ( 'Date' ),
			                ALLEXCEPT ( 'Date', 'Date'[Fiscal YearMonthNumber], 'Date'[Day Type], 'Date'[Week Day] )
			            )
			        VAR DaysSelected = 
			            CALCULATE ( 
			                COUNTROWS ( 'Date' ), 
			                'Date'[DateWithSales] = TRUE 
			            )
			        RETURN IF (
			            DaysOnMonth = DaysSelected,
			
			            -- Selection of all days in the month
			            CALCULATE (
			                [Sales Quantity],
			                ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			                'Date'[Fiscal YearMonthNumber] = PreviousYearMonthNumber
			            ),
			            
			            -- Partial selection of days in a month
			            CALCULATE (
			                [Sales Quantity],
			                ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			                'Date'[Fiscal YearMonthNumber] = PreviousYearMonthNumber,
			                CALCULATETABLE ( 
			                    VALUES ( 'Date'[Fiscal DayOfMonthNumber] ),
			                    ALLEXCEPT ( 'Date', 'Date'[Fiscal DayOfMonthNumber], 'Date'[Date] ),
			                    'Date'[Fiscal YearMonthNumber] = CurrentYearMonthNumber,
			                    'Date'[DateWithSales] = TRUE 
			                )
			            )
			        )
			    )
			)
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Quantity\Period-over-period growth
		lineageTag: c47fb12f-8525-49b1-9570-cfaa42655f49

	measure 'Sales Quantity QOQ (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Sales Quantity]
			VAR ValuePreviousPeriod = [Sales Quantity PQ (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Quantity\Period-over-period growth
		lineageTag: 580b3aef-5195-4a0a-8e76-34dac3b85333

	measure 'Sales Quantity QOQ % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Sales Quantity QOQ (Fiscal)],
			    [Sales Quantity PQ (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Sales\Sales Quantity\Period-over-period growth
		lineageTag: 3f6c3987-2cd7-4992-be61-c8bed9398f7c

	measure 'Sales Quantity PM (Fiscal)' = ```
			
			VAR MonthsOffset = 1
			RETURN IF (
			    [ShowValueForDates],
			    SUMX (
			        SUMMARIZE ( 'Date', 'Date'[Fiscal YearMonthNumber] ),
			        VAR CurrentYearMonthNumber = 'Date'[Fiscal YearMonthNumber]
			        VAR PreviousYearMonthNumber = CurrentYearMonthNumber - MonthsOffset
			        VAR DaysOnMonth = 
			            CALCULATE (
			                COUNTROWS ( 'Date' ),
			                ALLEXCEPT ( 'Date', 'Date'[Fiscal YearMonthNumber], 'Date'[Day Type], 'Date'[Week Day] )
			            )
			        VAR DaysSelected = 
			            CALCULATE ( 
			                COUNTROWS ( 'Date' ), 
			                'Date'[DateWithSales] = TRUE 
			            )
			        RETURN IF (
			            DaysOnMonth = DaysSelected,
			
			            -- Selection of all days in the month
			            CALCULATE (
			                [Sales Quantity],
			                ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			                'Date'[Fiscal YearMonthNumber] = PreviousYearMonthNumber
			            ),
			            
			            -- Partial selection of days in a month
			            CALCULATE (
			                [Sales Quantity],
			                ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			                'Date'[Fiscal YearMonthNumber] = PreviousYearMonthNumber,
			                CALCULATETABLE ( 
			                    VALUES ( 'Date'[Fiscal DayOfMonthNumber] ),
			                    ALLEXCEPT ( 'Date', 'Date'[Fiscal DayOfMonthNumber], 'Date'[Date] ),
			                    'Date'[Fiscal YearMonthNumber] = CurrentYearMonthNumber,
			                    'Date'[DateWithSales] = TRUE 
			                )
			            )
			        )
			    )
			)
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Quantity\Period-over-period growth
		lineageTag: 230a928c-2a1c-47a2-b917-185a2aa3e3e7

	measure 'Sales Quantity MOM (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Sales Quantity]
			VAR ValuePreviousPeriod = [Sales Quantity PM (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Quantity\Period-over-period growth
		lineageTag: 8c64bced-f308-4d2b-a211-f7fcd3027738

	measure 'Sales Quantity MOM % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Sales Quantity MOM (Fiscal)],
			    [Sales Quantity PM (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Sales\Sales Quantity\Period-over-period growth
		lineageTag: fa40bbad-3c80-4672-a960-d2d14adf21ba

	measure 'Sales Quantity MAT (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates], 
			    VAR LastDayMAT =  MAX ( 'Date'[Sequential365DayNumber] )
			    VAR FirstDayMAT = INT ( EDATE ( LastDayMAT + 1, -12 ) )
			    VAR Result = 
			        CALCULATE ( 
			            [Sales Quantity], 
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Sequential365DayNumber] >= FirstDayMAT 
			                && 'Date'[Sequential365DayNumber] <= LastDayMAT
			        ) 
			    RETURN
			        Result
			)
			
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Quantity\Moving annual total growth
		lineageTag: 5d3e36a9-e82a-4718-b59d-3172feb7e10b

	measure 'Sales Quantity PYMAT (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates], 
			    VAR LastDayAvailable = MAX ( 'Date'[Sequential365DayNumber] )
			    VAR LastDayMAT =  INT ( EDATE ( LastDayAvailable, -12 ) )
			    VAR FirstDayMAT = INT ( EDATE ( LastDayAvailable + 1, -24 ) )
			    VAR Result = 
			        CALCULATE ( 
			            [Sales Quantity], 
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Sequential365DayNumber] >= FirstDayMAT 
			                && 'Date'[Sequential365DayNumber] <= LastDayMAT
			        ) 
			    RETURN 
			        Result
			)
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Quantity\Moving annual total growth
		lineageTag: 58dc1b60-3f5a-41ad-9267-14cad9f28ae1

	measure 'Sales Quantity YOYTD (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Sales Quantity YTD (Fiscal)]
			VAR ValuePreviousPeriod = [Sales Quantity PYTD (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Quantity\Period-to-date growth
		lineageTag: 58fadd10-7942-455b-b814-73466a0584df

	measure 'Sales Quantity YOYTD % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Sales Quantity YOYTD (Fiscal)],
			    [Sales Quantity PYTD (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Sales\Sales Quantity\Period-to-date growth
		lineageTag: ea19a79f-968a-4520-a20e-1caf7840f1dd

	measure 'Sales Quantity PYC (Fiscal)' = ```
			
			IF (
			    [ShowValueForDates] && HASONEVALUE ( 'Date'[Fiscal YearNumber] ),
			    VAR PreviousFiscalYear = MAX ( 'Date'[Fiscal YearNumber] ) - 1
			    VAR Result =
			        CALCULATE (
			            [Sales Quantity],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearNumber] = PreviousFiscalYear
			        )
			    RETURN
			        Result
			)
			
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Quantity\Period-to-date over full previous period
		lineageTag: 5cdf0e26-8b69-49ae-a56a-081a5fdbf82e

	measure 'Sales Quantity YTDOPY (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Sales Quantity YTD (Fiscal)]
			VAR ValuePreviousPeriod = [Sales Quantity PYC (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Quantity\Period-to-date over full previous period
		lineageTag: 4ed2aedc-06b4-4ce1-9f90-7dcfd537b793

	measure 'Sales Quantity YTDOPY % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Sales Quantity YTDOPY (Fiscal)],
			    [Sales Quantity PYC (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Sales\Sales Quantity\Period-to-date over full previous period
		lineageTag: c3113c27-39a8-40f0-aad4-ae0549df606d

	measure 'Sales Quantity QOQTD (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Sales Quantity QTD (Fiscal)]
			VAR ValuePreviousPeriod = [Sales Quantity PQTD (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Quantity\Period-to-date growth
		lineageTag: 5dd54357-17b4-4f9f-bbf9-bb77902413d4

	measure 'Sales Quantity QOQTD % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Sales Quantity QOQTD (Fiscal)],
			    [Sales Quantity PQTD (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Sales\Sales Quantity\Period-to-date growth
		lineageTag: 170cb906-d837-4216-bb08-bd92a18f87ac

	measure 'Sales Quantity PQC (Fiscal)' =
			
			IF (
			    [ShowValueForDates] && HASONEVALUE ( 'Date'[Fiscal YearQuarterNumber] ),
			    VAR PreviousFiscalYearQuarter = MAX ( 'Date'[Fiscal YearQuarterNumber] ) - 1
			    VAR Result =
			        CALCULATE (
			            [Sales Quantity],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearQuarterNumber] = PreviousFiscalYearQuarter
			        )
			    RETURN
			        Result
			)
		formatString: #,0.00
		displayFolder: Sales\Sales Quantity\Period-to-date over full previous period
		lineageTag: 54748173-4df6-47bc-ba7b-beed65d18c1a

	measure 'Sales Quantity QTDOPQ (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Sales Quantity QTD (Fiscal)]
			VAR ValuePreviousPeriod = [Sales Quantity PQC (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Quantity\Period-to-date over full previous period
		lineageTag: 140bd5f0-b4ee-4bbe-b2b1-612b1b89f91f

	measure 'Sales Quantity QTDOPQ % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Sales Quantity QTDOPQ (Fiscal)],
			    [Sales Quantity PQC (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Sales\Sales Quantity\Period-to-date over full previous period
		lineageTag: 8cd748b4-a641-4003-ae4d-278baf38f6d3

	measure 'Sales Quantity PMTD (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates],
			    VAR LastMonthSelected = 
			        MAX ( 'Date'[Fiscal YearMonthNumber] )
			    VAR DaysOnLastMonth = 
			        CALCULATE (
			            COUNTROWS ( 'Date' ),
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearMonthNumber] = LastMonthSelected
			        )
			    VAR DaysLastMonthSelected = 
			        CALCULATE ( 
			            COUNTROWS ( 'Date' ), 
			            'Date'[DateWithSales] = TRUE,
			            'Date'[Fiscal YearMonthNumber] = LastMonthSelected
			        )
			    VAR LastDayOfMonthWithSales =  
			        MAX ( 
			            -- End of month of any month
			            31 * (DaysOnLastMonth = DaysLastMonthSelected),  
			            -- or last day selected with data 
			            CALCULATE ( 
			                MAX ( 'Date'[Fiscal DayOfMonthNumber] ),
			                REMOVEFILTERS (                -- Remove filters from all of the
			                    'Date'[Day Type],       -- filter-safe columns
			                    'Date'[Week Day],       -- to get the last day with data
			                    'Date'[WeekDayNumber] -- selected in the report
			                ),
			                'Date'[Fiscal YearMonthNumber] = LastMonthSelected,
			                'Date'[DateWithSales] = TRUE 
			            )
			        )
			    VAR PreviousYearMonth = 
			        LastMonthSelected - 1
			    VAR Result = 
			        CALCULATE (
			            [Sales Quantity],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearMonthNumber] = PreviousYearMonth,
			            'Date'[Fiscal DayOfMonthNumber] <= LastDayOfMonthWithSales
			        )
			    RETURN 
			        Result
			)
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Quantity\Period-to-date growth
		lineageTag: f8b80dfb-6fd7-4e71-b6cd-3b06016f2b53

	measure 'Sales Quantity MOMTD % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Sales Quantity MOMTD (Fiscal)],
			    [Sales Quantity PMTD (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Sales\Sales Quantity\Period-to-date growth
		lineageTag: 402ae817-db22-412f-8300-e117c08c9469

	measure 'Sales Quantity MOMTD (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Sales Quantity MTD (Fiscal)]
			VAR ValuePreviousPeriod = [Sales Quantity PMTD (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Quantity\Period-to-date growth
		lineageTag: a0657e4e-19ca-45d0-b2ba-716ddddbd330

	measure 'Sales Quantity PMC (Fiscal)' = ```
			
			IF (
			    [ShowValueForDates] && HASONEVALUE ( 'Date'[Fiscal YearMonthNumber] ),
			    VAR PreviousFiscalYearMonth = MAX ( 'Date'[Fiscal YearMonthNumber] ) - 1
			    VAR Result =
			        CALCULATE (
			            [Sales Quantity],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearMonthNumber] = PreviousFiscalYearMonth
			        )
			    RETURN
			        Result
			)
			
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Quantity\Period-to-date over full previous period
		lineageTag: 1aa2a390-acd0-42d0-ace8-04a534a77105

	measure 'Sales Quantity MTDOPM (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Sales Quantity MTD (Fiscal)]
			VAR ValuePreviousPeriod = [Sales Quantity PMC (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Quantity\Period-to-date over full previous period
		lineageTag: 397f453f-5657-44cd-8aab-127b7ef33154

	measure 'Sales Quantity MTDOPM % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Sales Quantity MTDOPM (Fiscal)],
			    [Sales Quantity PMC (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Sales\Sales Quantity\Period-to-date over full previous period
		lineageTag: a25ac1e9-be46-4ad3-a3b8-393b5e765940

	measure 'Sales Quantity AVG 30D (Fiscal)' = ```
			
			IF (
			    [ShowValueForDates],
			    VAR LastDayMAT =
			        MAX ( 'Date'[Sequential365DayNumber] )
			    VAR FirstDayMAT = LastDayMAT - 29
			    VAR Period30D =
			        CALCULATETABLE (
			            VALUES ( 'Date'[Sequential365DayNumber] ),
			            ALLEXCEPT (
			                'Date',
			                'Date'[Day Type],
			                'Date'[Week Day]
			            ),
			            'Date'[Sequential365DayNumber] >= FirstDayMAT
			                && 'Date'[Sequential365DayNumber] <= LastDayMAT,
			            'Date'[DateWithSales] = TRUE
			        )
			    VAR FirstDayWithData =
			            CALCULATE (
			                INT (
			                    MINX (
			                        {
			                            MIN ( 'Sales Value Entries'[postingDate] ),
			                            MIN ( 'Sales Invoice Lines'[postingDate] ),
			                            MIN ( 'Sales Credit Lines'[postingDate] ),
			                            MIN ( 'Project Ledger Entries'[postingDate] )
			                        },
			                        [Value]
			                    )
			                ),
			                REMOVEFILTERS ()
			            )
			    VAR FirstDayInPeriod =
			        MINX (
			            Period30D,
			            'Date'[Sequential365DayNumber]
			        )
			    VAR Result =
			        IF (
			            FirstDayWithData <= FirstDayInPeriod,
			            CALCULATE (
			                AVERAGEX ( Period30D, [Sales Quantity] ),
			                REMOVEFILTERS ( 'Date' )
			            )
			        )
			    RETURN
			        Result
			)
			
			
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Quantity\Moving averages
		lineageTag: 0a358c73-3ffa-4a1d-a0ee-0a0a983cef65

	measure 'Sales Quantity AVG 3M (Fiscal)' =
			
			IF (
			    [ShowValueForDates],
			    VAR LastDayMAT =
			        MAX ( 'Date'[Sequential365DayNumber] )
			    VAR FirstDayMAT =
			        INT ( EDATE ( LastDayMAT + 1, -3 ) )
			    VAR Period3M =
			       CALCULATETABLE (
			            VALUES ( 'Date'[Sequential365DayNumber] ),
			            ALLEXCEPT (
			                'Date',
			                'Date'[Day Type],
			                'Date'[Week Day]
			            ),
			            'Date'[Sequential365DayNumber] >= FirstDayMAT
			                && 'Date'[Sequential365DayNumber] <= LastDayMAT,
			            'Date'[DateWithSales] = TRUE
			        )
			    VAR FirstDayWithData =
			            CALCULATE (
			                INT (
			                    MINX (
			                        {
			                            MIN ( 'Sales Value Entries'[postingDate] ),
			                            MIN ( 'Sales Invoice Lines'[postingDate] ),
			                            MIN ( 'Sales Credit Lines'[postingDate] ),
			                            MIN ( 'Project Ledger Entries'[postingDate] )
			                        },
			                        [Value]
			                    )
			                ),
			                REMOVEFILTERS ()
			            )
			    VAR FirstDayInPeriod =
			        MINX (
			            Period3M,
			            'Date'[Sequential365DayNumber]
			        )
			    VAR Result =
			        IF (
			            FirstDayWithData <= FirstDayInPeriod,
			            CALCULATE (
			                AVERAGEX ( Period3M, [Sales Quantity] ),
			                REMOVEFILTERS ( 'Date' )
			            )
			        )
			    RETURN
			        Result
			)
		formatString: #,0.00
		displayFolder: Sales\Sales Quantity\Moving averages
		lineageTag: ca16f6e9-43fb-403d-a358-7b7dc2b06831

	measure 'Sales Quantity AVG 1Y (Fiscal)' =
			
			IF (
			    [ShowValueForDates],
			    VAR LastDayMAT =
			        MAX ( 'Date'[Sequential365DayNumber] )
			    VAR FirstDayMAT =
			        INT ( EDATE ( LastDayMAT + 1, -12 ) )
			    VAR Period1Y =
			        CALCULATETABLE (
			            VALUES ( 'Date'[Sequential365DayNumber] ),
			            ALLEXCEPT (
			                'Date',
			                'Date'[Day Type],
			                'Date'[Week Day]
			            ),
			            'Date'[Sequential365DayNumber] >= FirstDayMAT
			                && 'Date'[Sequential365DayNumber] <= LastDayMAT,
			            'Date'[DateWithSales] = TRUE
			        )
			    VAR FirstDayWithData =
			            CALCULATE (
			                INT (
			                    MINX (
			                        {
			                            MIN ( 'Sales Value Entries'[postingDate] ),
			                            MIN ( 'Sales Invoice Lines'[postingDate] ),
			                            MIN ( 'Sales Credit Lines'[postingDate] ),
			                            MIN ( 'Project Ledger Entries'[postingDate] )
			                        },
			                        [Value]
			                    )
			                ),
			                REMOVEFILTERS ()
			            )
			    VAR FirstDayInPeriod =
			        MINX (
			            Period1Y,
			            'Date'[Sequential365DayNumber]
			        )
			    VAR Result =
			        IF (
			            FirstDayWithData <= FirstDayInPeriod,
			            CALCULATE (
			                AVERAGEX ( Period1Y, [Sales Quantity] ),
			                REMOVEFILTERS ( 'Date' )
			            )
			        )
			    RETURN
			        Result
			)
		formatString: #,0.00
		displayFolder: Sales\Sales Quantity\Moving averages
		lineageTag: 503cb55b-92ef-4bdc-960f-f8a29400e473

	measure 'Sales Quantity MATG (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Sales Quantity MAT (Fiscal)]
			VAR ValuePreviousPeriod = [Sales Quantity PYMAT (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Quantity\Moving annual total growth
		lineageTag: 3dea8b36-7b72-440e-8b8e-fd7fca6c673a

	measure 'Sales Quantity MATG % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Sales Quantity MATG (Fiscal)],
			    [Sales Quantity PYMAT (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Sales\Sales Quantity\Moving annual total growth
		lineageTag: 7a99967f-809a-42ed-acec-348b60e5039c

	measure 'Sales Quantity PP (Fiscal)' = ```
			
			SWITCH ( 
			    TRUE,
			    ISINSCOPE ( 'Date'[Fiscal Month Year] ), [Sales Quantity PM (Fiscal)],
			    ISINSCOPE ( 'Date'[Fiscal Quarter Year] ), [Sales Quantity PQ (Fiscal)],
			    ISINSCOPE ( 'Date'[Fiscal Year] ), [Sales Quantity PY (Fiscal)]
			)
			
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Quantity\Period-over-period growth
		lineageTag: e8e244e5-5cba-4be5-a460-4e458070f8dd

	measure 'Sales Quantity POP (Fiscal)' = ```
			
			SWITCH ( 
			    TRUE,
			    ISINSCOPE ( 'Date'[Fiscal Month Year] ), [Sales Quantity MOM (Fiscal)],
			    ISINSCOPE ( 'Date'[Fiscal Quarter Year] ), [Sales Quantity QOQ (Fiscal)],
			    ISINSCOPE ( 'Date'[Fiscal Year] ), [Sales Quantity YOY (Fiscal)]
			)
			
			```
		formatString: #,0.00
		displayFolder: Sales\Sales Quantity\Period-over-period growth
		lineageTag: 5d3cf17f-8ac4-45f7-9b4d-8b9a8128a9a0

	measure 'Sales Quantity POP % (Fiscal)' = ```
			
			SWITCH ( 
			    TRUE,
			    ISINSCOPE ( 'Date'[Fiscal Month Year] ), [Sales Quantity MOM % (Fiscal)],
			    ISINSCOPE ( 'Date'[Fiscal Quarter Year] ), [Sales Quantity QOQ % (Fiscal)],
			    ISINSCOPE ( 'Date'[Fiscal Year] ), [Sales Quantity YOY % (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Sales\Sales Quantity\Period-over-period growth
		lineageTag: f37cb811-79a4-498a-9ede-2c594c375a68

	measure 'Cost Amount YTD (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates],
			    VAR LastDayAvailable = MAX ( 'Date'[Fiscal DayOfYearNumber] )
			    VAR LastFiscalYearAvailable = MAX ( 'Date'[Fiscal YearNumber] )
			    VAR Result =
			        CALCULATE (
			            [Adjusted Cost (LCY)],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[WeekDayNumber] ),
			            'Date'[Fiscal DayOfYearNumber] <= LastDayAvailable,
			            'Date'[Fiscal YearNumber] = LastFiscalYearAvailable
			        )
			    RETURN
			        Result
			)
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount\Period-to-date total
		lineageTag: fa452f51-b4b6-4880-aca4-b7966ffd94c3

	measure 'Cost Amount PY (Fiscal)' = ```
			
			VAR MonthsOffset = 12
			RETURN IF (
			    [ShowValueForDates],
			    SUMX (
			        SUMMARIZE ( 'Date', 'Date'[Fiscal YearMonthNumber] ),
			        VAR CurrentYearMonthNumber = 'Date'[Fiscal YearMonthNumber]
			        VAR PreviousYearMonthNumber = CurrentYearMonthNumber - MonthsOffset
			        VAR DaysOnMonth = 
			            CALCULATE (
			                COUNTROWS ( 'Date' ),
			                ALLEXCEPT ( 
			                    'Date', 
			                    'Date'[Fiscal YearMonthNumber],  -- Year Month granularity
			                    'Date'[Day Type],        -- Filter-safe Date column
			                    'Date'[WeekDayNumber]         -- Filter-safe Date column
			                )
			            )
			        VAR DaysSelected = 
			            CALCULATE ( 
			                COUNTROWS ( 'Date' ), 
			                'Date'[DateWithSales] = TRUE 
			            )
			        RETURN IF (
			            DaysOnMonth = DaysSelected,
			
			            -- Selection of all days in the month
			            CALCULATE (
			                [Adjusted Cost (LCY)],
			                ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[WeekDayNumber] ),
			                'Date'[Fiscal YearMonthNumber] = PreviousYearMonthNumber
			            ),
			            
			            -- Partial selection of days in a month
			            CALCULATE (
			                [Adjusted Cost (LCY)],
			                ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[WeekDayNumber] ),
			                'Date'[Fiscal YearMonthNumber] = PreviousYearMonthNumber,
			                CALCULATETABLE ( 
			                    VALUES ( 'Date'[Fiscal DayOfMonthNumber] ),
			                    ALLEXCEPT ( 'Date', 'Date'[Fiscal DayOfMonthNumber], 'Date'[Date] ),
			                    'Date'[Fiscal YearMonthNumber] = CurrentYearMonthNumber,
			                    'Date'[DateWithSales] = TRUE 
			                )
			            )
			        )
			    )
			)
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount\Period-over-period growth
		lineageTag: 6f38d0bf-d2c3-4412-a276-1521cae5a0a2

	measure 'Cost Amount QTD (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates],
			    VAR LastDayAvailable =  MAX ( 'Date'[Fiscal DayOfYearNumber] )
			    VAR LastFiscalYearQuarterAvailable = MAX ( 'Date'[Fiscal YearQuarterNumber] )
			    VAR Result =
			        CALCULATE (
			            [Adjusted Cost (LCY)],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal DayOfYearNumber] <= LastDayAvailable,
			            'Date'[Fiscal YearQuarterNumber] = LastFiscalYearQuarterAvailable
			        )
			    RETURN
			        Result
			)
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount\Period-to-date total
		lineageTag: 0e578f05-a77a-47ce-8d03-41c737a6b081

	measure 'Cost Amount MTD (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates],
			    VAR LastDayAvailable =  MAX ( 'Date'[Fiscal DayOfMonthNumber] )
			    VAR LastFiscalYearMonthAvailable = MAX ( 'Date'[Fiscal YearMonthNumber] )
			    VAR Result =
			        CALCULATE (
			            [Adjusted Cost (LCY)],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal DayOfMonthNumber] <= LastDayAvailable,
			            'Date'[Fiscal YearMonthNumber] = LastFiscalYearMonthAvailable
			        )
			    RETURN
			        Result
			)
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount\Period-to-date total
		lineageTag: 2ff3641c-cb05-42ae-b176-0e1be7ba3bc7

	measure 'Cost Amount YOY % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Cost Amount YOY (Fiscal)],
			    [Cost Amount PY (Fiscal)]
			)
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Cost\Cost Amount\Period-over-period growth
		lineageTag: f5bb26c7-18a2-4e04-9847-51318d229ac0

	measure 'Cost Amount YOY (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Adjusted Cost (LCY)]
			VAR ValuePreviousPeriod = [Cost Amount PY (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount\Period-over-period growth
		lineageTag: 24b11719-b1e9-40f2-b55c-e97d418d3da6

	measure 'Cost Amount PQ (Fiscal)' = ```
			
			VAR MonthsOffset = 3
			RETURN IF (
			    [ShowValueForDates],
			    SUMX (
			        SUMMARIZE ( 'Date', 'Date'[Fiscal YearMonthNumber] ),
			        VAR CurrentYearMonthNumber = 'Date'[Fiscal YearMonthNumber]
			        VAR PreviousYearMonthNumber = CurrentYearMonthNumber - MonthsOffset
			        VAR DaysOnMonth = 
			            CALCULATE (
			                COUNTROWS ( 'Date' ),
			                ALLEXCEPT ( 'Date', 'Date'[Fiscal YearMonthNumber], 'Date'[Day Type], 'Date'[Week Day] )
			            )
			        VAR DaysSelected = 
			            CALCULATE ( 
			                COUNTROWS ( 'Date' ), 
			                'Date'[DateWithSales] = TRUE 
			            )
			        RETURN IF (
			            DaysOnMonth = DaysSelected,
			
			            -- Selection of all days in the month
			            CALCULATE (
			                [Adjusted Cost (LCY)],
			                ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			                'Date'[Fiscal YearMonthNumber] = PreviousYearMonthNumber
			            ),
			            
			            -- Partial selection of days in a month
			            CALCULATE (
			                [Adjusted Cost (LCY)],
			                ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			                'Date'[Fiscal YearMonthNumber] = PreviousYearMonthNumber,
			                CALCULATETABLE ( 
			                    VALUES ( 'Date'[Fiscal DayOfMonthNumber] ),
			                    ALLEXCEPT ( 'Date', 'Date'[Fiscal DayOfMonthNumber], 'Date'[Date] ),
			                    'Date'[Fiscal YearMonthNumber] = CurrentYearMonthNumber,
			                    'Date'[DateWithSales] = TRUE 
			                )
			            )
			        )
			    )
			)
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount\Period-over-period growth
		lineageTag: 1ece4e96-d7ab-4762-9a44-d2b0b1166899

	measure 'Cost Amount QOQ (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Adjusted Cost (LCY)]
			VAR ValuePreviousPeriod = [Cost Amount PQ (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount\Period-over-period growth
		lineageTag: f347ef95-71b7-4fa6-8207-55a7b02401b7

	measure 'Cost Amount QOQ % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Cost Amount QOQ (Fiscal)],
			    [Cost Amount PQ (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Cost\Cost Amount\Period-over-period growth
		lineageTag: 3c9f4124-eb20-49c8-adf4-563ef25aaf20

	measure 'Cost Amount PM (Fiscal)' = ```
			
			VAR MonthsOffset = 1
			RETURN IF (
			    [ShowValueForDates],
			    SUMX (
			        SUMMARIZE ( 'Date', 'Date'[Fiscal YearMonthNumber] ),
			        VAR CurrentYearMonthNumber = 'Date'[Fiscal YearMonthNumber]
			        VAR PreviousYearMonthNumber = CurrentYearMonthNumber - MonthsOffset
			        VAR DaysOnMonth = 
			            CALCULATE (
			                COUNTROWS ( 'Date' ),
			                ALLEXCEPT ( 'Date', 'Date'[Fiscal YearMonthNumber], 'Date'[Day Type], 'Date'[Week Day] )
			            )
			        VAR DaysSelected = 
			            CALCULATE ( 
			                COUNTROWS ( 'Date' ), 
			                'Date'[DateWithSales] = TRUE 
			            )
			        RETURN IF (
			            DaysOnMonth = DaysSelected,
			
			            -- Selection of all days in the month
			            CALCULATE (
			                [Adjusted Cost (LCY)],
			                ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			                'Date'[Fiscal YearMonthNumber] = PreviousYearMonthNumber
			            ),
			            
			            -- Partial selection of days in a month
			            CALCULATE (
			                [Adjusted Cost (LCY)],
			                ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			                'Date'[Fiscal YearMonthNumber] = PreviousYearMonthNumber,
			                CALCULATETABLE ( 
			                    VALUES ( 'Date'[Fiscal DayOfMonthNumber] ),
			                    ALLEXCEPT ( 'Date', 'Date'[Fiscal DayOfMonthNumber], 'Date'[Date] ),
			                    'Date'[Fiscal YearMonthNumber] = CurrentYearMonthNumber,
			                    'Date'[DateWithSales] = TRUE 
			                )
			            )
			        )
			    )
			)
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount\Period-over-period growth
		lineageTag: e6f5da48-3f67-403b-88c7-2b57731e514b

	measure 'Cost Amount MOM (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Adjusted Cost (LCY)]
			VAR ValuePreviousPeriod = [Cost Amount PM (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount\Period-over-period growth
		lineageTag: 7483bffc-e4da-4553-bbb8-30582404da30

	measure 'Cost Amount MOM % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Cost Amount MOM (Fiscal)],
			    [Cost Amount PM (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Cost\Cost Amount\Period-over-period growth
		lineageTag: 62c86d41-db4f-4c9b-b292-ba23cd7122c6

	measure 'Cost Amount PP (Fiscal)' = ```
			
			SWITCH ( 
			    TRUE,
			    ISINSCOPE ( 'Date'[Fiscal Month Year] ), [Cost Amount PM (Fiscal)],
			    ISINSCOPE ( 'Date'[Fiscal Quarter Year] ), [Cost Amount PQ (Fiscal)],
			    ISINSCOPE ( 'Date'[Fiscal Year] ), [Cost Amount PY (Fiscal)]
			)
			
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount\Period-over-period growth
		lineageTag: 3d7ea603-2fad-4f14-8f46-f2269077d2fc

	measure 'Cost Amount POP (Fiscal)' = ```
			
			SWITCH ( 
			    TRUE,
			    ISINSCOPE ( 'Date'[Fiscal Month Year] ), [Cost Amount MOM (Fiscal)],
			    ISINSCOPE ( 'Date'[Fiscal Quarter Year] ), [Cost Amount QOQ (Fiscal)],
			    ISINSCOPE ( 'Date'[Fiscal Year] ), [Cost Amount YOY (Fiscal)]
			)
			
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount\Period-over-period growth
		lineageTag: e23057eb-49d4-4248-bfcd-13de2834a0e3

	measure 'Cost Amount POP % (Fiscal)' = ```
			
			SWITCH ( 
			    TRUE,
			    ISINSCOPE ( 'Date'[Fiscal Month Year] ), [Cost Amount MOM % (Fiscal)],
			    ISINSCOPE ( 'Date'[Fiscal Quarter Year] ), [Cost Amount QOQ % (Fiscal)],
			    ISINSCOPE ( 'Date'[Fiscal Year] ), [Cost Amount YOY % (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Cost\Cost Amount\Period-over-period growth
		lineageTag: 2538e96e-b16c-4942-bf99-63759133c52c

	measure 'Cost Amount PYTD (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates],
			    VAR PreviousFiscalYear = MAX ( 'Date'[Fiscal YearNumber] ) - 1
			    VAR LastDayOfFiscalYearAvailable = 
			        CALCULATE ( 
			            MAX ( 'Date'[Fiscal DayOfYearNumber] ),
			            REMOVEFILTERS (                -- Remove filters from
			                'Date'[Day Type],       -- filter-safe columns
			                'Date'[Week Day],       -- to get the last day with data
			                'Date'[WeekDayNumber] -- selected in the report
			            ),
			            'Date'[DateWithSales] = TRUE 
			        )
			    VAR Result =
			        CALCULATE (
			            [Adjusted Cost (LCY)],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearNumber] = PreviousFiscalYear,
			            'Date'[Fiscal DayOfYearNumber] <= LastDayOfFiscalYearAvailable,
			            'Date'[DateWithSales] = TRUE 
			        )
			    RETURN
			        Result
			)
			
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount\Period-to-date growth
		lineageTag: 42be5a75-b147-468e-851b-327e2466d188

	measure 'Cost Amount PQTD (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates],
			    VAR LastMonthSelected = 
			        MAX ( 'Date'[Fiscal YearMonthNumber] )
			    VAR DaysOnLastMonth = 
			        CALCULATE (
			            COUNTROWS ( 'Date' ),
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearMonthNumber] = LastMonthSelected
			        )
			    VAR DaysLastMonthSelected = 
			        CALCULATE ( 
			            COUNTROWS ( 'Date' ), 
			            'Date'[DateWithSales] = TRUE,
			            'Date'[Fiscal YearMonthNumber] = LastMonthSelected
			        )
			    VAR LastDayOfMonthWithSales =  
			        MAX ( 
			            -- End of month of any month
			            31 * (DaysOnLastMonth = DaysLastMonthSelected),  
			            -- or last day selected with data 
			            CALCULATE ( 
			                MAX ( 'Date'[Fiscal DayOfMonthNumber] ),
			                REMOVEFILTERS (                -- Remove filters from all of the
			                    'Date'[Day Type],       -- filter-safe columns
			                    'Date'[Week Day],       -- to get the last day with data
			                    'Date'[WeekDayNumber] -- selected in the report
			                ),
			                'Date'[Fiscal YearMonthNumber] = LastMonthSelected,
			                'Date'[DateWithSales] = TRUE 
			            )
			        )
			    VAR LastMonthInQuarterWithSales = 
			        CALCULATE ( 
			            MAX ( 'Date'[Fiscal MonthInQuarterNumber] ),
			            REMOVEFILTERS (                -- Remove filters from all of the
			                'Date'[Day Type],       -- filter-safe columns
			                'Date'[Week Day],       -- to get the last day with data
			                'Date'[WeekDayNumber] -- selected in the report
			            ),
			            'Date'[DateWithSales] = TRUE 
			        )
			    VAR PreviousFiscalYearQuarter = 
			        MAX ( 'Date'[Fiscal YearQuarterNumber] ) - 1
			    VAR FilterQTD = 
			        FILTER (
			            ALL ( 'Date'[Fiscal MonthInQuarterNumber], 'Date'[Fiscal DayOfMonthNumber] ),
			            ISONORAFTER ( 
			                'Date'[Fiscal MonthInQuarterNumber], LastMonthInQuarterWithSales, DESC,
			                'Date'[Fiscal DayOfMonthNumber], LastDayOfMonthWithSales, DESC
			            )
			        )
			    VAR Result =
			        CALCULATE (
			            [Adjusted Cost (LCY)],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearQuarterNumber] = PreviousFiscalYearQuarter,
			            FilterQTD
			        )
			    RETURN
			        Result
			)
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount\Period-to-date growth
		lineageTag: 92e53bdc-a4b6-4f77-8e05-2fc91664eda5

	measure 'Cost Amount YOYTD (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Cost Amount YTD (Fiscal)]
			VAR ValuePreviousPeriod = [Cost Amount PYTD (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount\Period-to-date growth
		lineageTag: 274b91c1-b9e5-4cdf-8763-57d97b1467f1

	measure 'Cost Amount YOYTD % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Cost Amount YOYTD (Fiscal)],
			    [Cost Amount PYTD (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Cost\Cost Amount\Period-to-date growth
		lineageTag: ebed8d58-b592-4032-a392-a27639e85933

	measure 'Cost Amount QOQTD (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Cost Amount QTD (Fiscal)]
			VAR ValuePreviousPeriod = [Cost Amount PQTD (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount\Period-to-date growth
		lineageTag: 0ec3c49e-0d9d-44a9-b906-d7072d54db17

	measure 'Cost Amount QOQTD % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Cost Amount QOQTD (Fiscal)],
			    [Cost Amount PQTD (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Cost\Cost Amount\Period-to-date growth
		lineageTag: 05f7670a-da50-4eb6-9100-a770c7a85912

	measure 'Cost Amount PMTD (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates],
			    VAR LastMonthSelected = 
			        MAX ( 'Date'[Fiscal YearMonthNumber] )
			    VAR DaysOnLastMonth = 
			        CALCULATE (
			            COUNTROWS ( 'Date' ),
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearMonthNumber] = LastMonthSelected
			        )
			    VAR DaysLastMonthSelected = 
			        CALCULATE ( 
			            COUNTROWS ( 'Date' ), 
			            'Date'[DateWithSales] = TRUE,
			            'Date'[Fiscal YearMonthNumber] = LastMonthSelected
			        )
			    VAR LastDayOfMonthWithSales =  
			        MAX ( 
			            -- End of month of any month
			            31 * (DaysOnLastMonth = DaysLastMonthSelected),  
			            -- or last day selected with data 
			            CALCULATE ( 
			                MAX ( 'Date'[Fiscal DayOfMonthNumber] ),
			                REMOVEFILTERS (                -- Remove filters from all of the
			                    'Date'[Day Type],       -- filter-safe columns
			                    'Date'[Week Day],       -- to get the last day with data
			                    'Date'[WeekDayNumber] -- selected in the report
			                ),
			                'Date'[Fiscal YearMonthNumber] = LastMonthSelected,
			                'Date'[DateWithSales] = TRUE 
			            )
			        )
			    VAR PreviousYearMonth = 
			        LastMonthSelected - 1
			    VAR Result = 
			        CALCULATE (
			            [Adjusted Cost (LCY)],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearMonthNumber] = PreviousYearMonth,
			            'Date'[Fiscal DayOfMonthNumber] <= LastDayOfMonthWithSales
			        )
			    RETURN 
			        Result
			)
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount\Period-to-date growth
		lineageTag: cb31efd7-6a3d-46c4-8512-aa1a29376640

	measure 'Cost Amount MOMTD % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Cost Amount MOMTD (Fiscal)],
			    [Cost Amount PMTD (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Cost\Cost Amount\Period-to-date growth
		lineageTag: d35c7538-f795-4971-af77-ce8781b87cbd

	measure 'Cost Amount MOMTD (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Cost Amount MTD (Fiscal)]
			VAR ValuePreviousPeriod = [Cost Amount PMTD (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount\Period-to-date growth
		lineageTag: 1e55c4e0-13db-4d9b-a1f3-e57afecea5a7

	measure 'Cost Amount MAT (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates], 
			    VAR LastDayMAT =  MAX ( 'Date'[Sequential365DayNumber] )
			    VAR FirstDayMAT = INT ( EDATE ( LastDayMAT + 1, -12 ) )
			    VAR Result = 
			        CALCULATE ( 
			            [Adjusted Cost (LCY)], 
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Sequential365DayNumber] >= FirstDayMAT 
			                && 'Date'[Sequential365DayNumber] <= LastDayMAT
			        ) 
			    RETURN
			        Result
			)
			
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount\Moving annual total growth
		lineageTag: 4bfd299e-7ef5-473e-906f-44781c9c8407

	measure 'Cost Amount PYMAT (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates], 
			    VAR LastDayAvailable = MAX ( 'Date'[Sequential365DayNumber] )
			    VAR LastDayMAT =  INT ( EDATE ( LastDayAvailable, -12 ) )
			    VAR FirstDayMAT = INT ( EDATE ( LastDayAvailable + 1, -24 ) )
			    VAR Result = 
			        CALCULATE ( 
			            [Adjusted Cost (LCY)], 
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Sequential365DayNumber] >= FirstDayMAT 
			                && 'Date'[Sequential365DayNumber] <= LastDayMAT
			        ) 
			    RETURN 
			        Result
			)
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount\Moving annual total growth
		lineageTag: db3c99a9-c557-437e-8981-b56480137616

	measure 'Cost Amount MATG (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Cost Amount MAT (Fiscal)]
			VAR ValuePreviousPeriod = [Cost Amount PYMAT (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount\Moving annual total growth
		lineageTag: 931fd8d5-0917-4406-987c-9a73974f9c6e

	measure 'Cost Amount MATG % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Cost Amount MATG (Fiscal)],
			    [Cost Amount PYMAT (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Cost\Cost Amount\Moving annual total growth
		lineageTag: 2c3ad85f-0f39-4f4b-a669-455d4bc07c06

	measure 'Cost Amount MAT (364) (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates], 
			    VAR LastDayMAT =  MAX ( 'Date'[Sequential365DayNumber] )
			    VAR FirstDayMAT = LastDayMAT - 363
			    VAR Result = 
			        CALCULATE ( 
			            [Adjusted Cost (LCY)], 
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Sequential365DayNumber] >= FirstDayMAT 
			                && 'Date'[Sequential365DayNumber] <= LastDayMAT
			        ) 
			    RETURN
			        Result
			)
			
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount\Moving annual total growth
		lineageTag: c45ea682-7191-4ed2-bea6-55c7936d97e2

	measure 'Cost PYMAT (364) (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates], 
			    VAR LastDayAvailable = MAX ( 'Date'[Sequential365DayNumber] )
			    VAR LastDayMAT = LastDayAvailable - 364
			    VAR FirstDayMAT = LastDayMAT - 363
			    VAR Result = 
			        CALCULATE ( 
			            [Adjusted Cost (LCY)], 
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Sequential365DayNumber] >= FirstDayMAT 
			                && 'Date'[Sequential365DayNumber] <= LastDayMAT
			        ) 
			    RETURN
			        Result
			)
			
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount\Moving annual total growth
		lineageTag: 7ded00af-e0df-40c9-aa87-b5a66aca61fd

	measure 'Cost Amount PYC (Fiscal)' = ```
			
			IF (
			    [ShowValueForDates] && HASONEVALUE ( 'Date'[Fiscal YearNumber] ),
			    VAR PreviousFiscalYear = MAX ( 'Date'[Fiscal YearNumber] ) - 1
			    VAR Result =
			        CALCULATE (
			            [Adjusted Cost (LCY)],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearNumber] = PreviousFiscalYear
			        )
			    RETURN
			        Result
			)
			
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount\Period-to-date over full previous period
		lineageTag: d1480082-f754-496f-bb9a-963ceefda510

	measure 'Cost Amount YTDOPY (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Cost Amount YTD (Fiscal)]
			VAR ValuePreviousPeriod = [Cost Amount PYC (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount\Period-to-date over full previous period
		lineageTag: f0f5bc44-23a4-4a3b-a269-91af34518ebf

	measure 'Cost Amount YTDOPY % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Cost Amount YTDOPY (Fiscal)],
			    [Cost Amount PYC (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Cost\Cost Amount\Period-to-date over full previous period
		lineageTag: 71c5365c-74de-40c5-be1d-ec433c798bbf

	measure 'Cost Amount PQC (Fiscal)' =
			
			IF (
			    [ShowValueForDates] && HASONEVALUE ( 'Date'[Fiscal YearQuarterNumber] ),
			    VAR PreviousFiscalYearQuarter = MAX ( 'Date'[Fiscal YearQuarterNumber] ) - 1
			    VAR Result =
			        CALCULATE (
			            [Adjusted Cost (LCY)],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearQuarterNumber] = PreviousFiscalYearQuarter
			        )
			    RETURN
			        Result
			)
		formatString: #,0.00
		displayFolder: Cost\Cost Amount\Period-to-date over full previous period
		lineageTag: 31dc943e-4e3f-4f55-991e-c22eb57db7a7

	measure 'Cost Amount QTDOPQ (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Cost Amount QTD (Fiscal)]
			VAR ValuePreviousPeriod = [Cost Amount PQC (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount\Period-to-date over full previous period
		lineageTag: 4f7b7c06-655d-4a32-b097-d8dff171847c

	measure 'Cost Amount QTDOPQ % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Cost Amount QTDOPQ (Fiscal)],
			    [Cost Amount PQC (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Cost\Cost Amount\Period-to-date over full previous period
		lineageTag: 20f39763-0f97-402e-b3bf-887d6a7441da

	measure 'Cost Amount PMC (Fiscal)' = ```
			
			IF (
			    [ShowValueForDates] && HASONEVALUE ( 'Date'[Fiscal YearMonthNumber] ),
			    VAR PreviousFiscalYearMonth = MAX ( 'Date'[Fiscal YearMonthNumber] ) - 1
			    VAR Result =
			        CALCULATE (
			            [Adjusted Cost (LCY)],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearMonthNumber] = PreviousFiscalYearMonth
			        )
			    RETURN
			        Result
			)
			
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount\Period-to-date over full previous period
		lineageTag: e41ce6ac-10f7-4e7f-a0e6-fd25cb803eeb

	measure 'Cost Amount MTDOPM (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Cost Amount MTD (Fiscal)]
			VAR ValuePreviousPeriod = [Cost Amount PMC (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount\Period-to-date over full previous period
		lineageTag: 319ad4a4-1afe-430c-a3ee-881a05f28460

	measure 'Cost Amount MTDOPM % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Cost Amount MTDOPM (Fiscal)],
			    [Cost Amount PMC (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Cost\Cost Amount\Period-to-date over full previous period
		lineageTag: c95883c6-41f5-4e02-ba37-062c3d782dea

	measure 'Cost Amount AVG 30D (Fiscal)' = ```
			
			IF (
			    [ShowValueForDates],
			    VAR LastDayMAT =
			        MAX ( 'Date'[Sequential365DayNumber] )
			    VAR FirstDayMAT = LastDayMAT - 29
			    VAR Period30D =
			        CALCULATETABLE (
			            VALUES ( 'Date'[Sequential365DayNumber] ),
			            ALLEXCEPT (
			                'Date',
			                'Date'[Day Type],
			                'Date'[Week Day]
			            ),
			            'Date'[Sequential365DayNumber] >= FirstDayMAT
			                && 'Date'[Sequential365DayNumber] <= LastDayMAT,
			            'Date'[DateWithSales] = TRUE
			        )
			    VAR FirstDayWithData =
			        CALCULATE (
			            INT (
			                MINX (
			                    {
			                        MIN ( 'Sales Value Entries'[postingDate] ),
			                        MIN ( 'Sales Invoice Lines'[postingDate] ),
			                        MIN ( 'Sales Credit Lines'[postingDate] ),
			                        MIN ( 'Project Ledger Entries'[postingDate] )
			                    },
			                    [Value]
			                )
			            ),
			            REMOVEFILTERS ()
			        )
			    VAR FirstDayInPeriod =
			        MINX (
			            Period30D,
			            'Date'[Sequential365DayNumber]
			        )
			    VAR Result =
			        IF (
			            FirstDayWithData <= FirstDayInPeriod,
			            CALCULATE (
			                AVERAGEX ( Period30D, [Adjusted Cost (LCY)] ),
			                REMOVEFILTERS ( 'Date' )
			            )
			        )
			    RETURN
			        Result
			)
			
			
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount\Moving averages
		lineageTag: 76938b86-f505-4a7f-9b59-de27f7d3e6e4

	measure 'Cost Amount AVG 3M (Fiscal)' =
			
			IF (
			    [ShowValueForDates],
			    VAR LastDayMAT =
			        MAX ( 'Date'[Sequential365DayNumber] )
			    VAR FirstDayMAT =
			        INT ( EDATE ( LastDayMAT + 1, -3 ) )
			    VAR Period3M =
			       CALCULATETABLE (
			            VALUES ( 'Date'[Sequential365DayNumber] ),
			            ALLEXCEPT (
			                'Date',
			                'Date'[Day Type],
			                'Date'[Week Day]
			            ),
			            'Date'[Sequential365DayNumber] >= FirstDayMAT
			                && 'Date'[Sequential365DayNumber] <= LastDayMAT,
			            'Date'[DateWithSales] = TRUE
			        )
			    VAR FirstDayWithData =
			        CALCULATE (
			            INT (
			                MINX (
			                    {
			                        MIN ( 'Sales Value Entries'[postingDate] ),
			                        MIN ( 'Sales Invoice Lines'[postingDate] ),
			                        MIN ( 'Sales Credit Lines'[postingDate] ),
			                        MIN ( 'Project Ledger Entries'[postingDate] )
			                    },
			                    [Value]
			                )
			            ),
			            REMOVEFILTERS ()
			        )
			    VAR FirstDayInPeriod =
			        MINX (
			            Period3M,
			            'Date'[Sequential365DayNumber]
			        )
			    VAR Result =
			        IF (
			            FirstDayWithData <= FirstDayInPeriod,
			            CALCULATE (
			                AVERAGEX ( Period3M, [Adjusted Cost (LCY)] ),
			                REMOVEFILTERS ( 'Date' )
			            )
			        )
			    RETURN
			        Result
			)
		formatString: #,0.00
		displayFolder: Cost\Cost Amount\Moving averages
		lineageTag: 6397ab35-7aea-4794-a086-7cb241d53ac1

	measure 'Cost Amount AVG 1Y (Fiscal)' = ```
			
			IF (
			    [ShowValueForDates],
			    VAR LastDayMAT =
			        MAX ( 'Date'[Sequential365DayNumber] )
			    VAR FirstDayMAT =
			        INT (
			            EDATE (
			                LastDayMAT + 1,
			                -12
			            )
			        )
			    VAR Period1Y =
			        CALCULATETABLE (
			            VALUES ( 'Date'[Sequential365DayNumber] ),
			            ALLEXCEPT (
			                'Date',
			                'Date'[Day Type],
			                'Date'[Week Day]
			            ),
			            'Date'[Sequential365DayNumber] >= FirstDayMAT
			                && 'Date'[Sequential365DayNumber] <= LastDayMAT,
			            'Date'[DateWithSales] = TRUE
			        )
			    VAR FirstDayWithData =
			        CALCULATE (
			            INT (
			                MINX (
			                    {
			                        MIN ( 'Sales Value Entries'[postingDate] ),
			                        MIN ( 'Sales Invoice Lines'[postingDate] ),
			                        MIN ( 'Sales Credit Lines'[postingDate] ),
			                        MIN ( 'Project Ledger Entries'[postingDate] )
			                    },
			                    [Value]
			                )
			            ),
			            REMOVEFILTERS ()
			        )
			    VAR FirstDayInPeriod =
			        MINX (
			            Period1Y,
			            'Date'[Sequential365DayNumber]
			        )
			    VAR Result =
			        IF (
			            FirstDayWithData <= FirstDayInPeriod,
			            CALCULATE (
			                AVERAGEX (
			                    Period1Y,
			                    [Adjusted Cost (LCY)]
			                ),
			                REMOVEFILTERS ( 'Date' )
			            )
			        )
			    RETURN
			        Result
			)
			
			```
		displayFolder: Cost\Cost Amount\Moving averages
		lineageTag: 1a7b106c-4a34-4b09-b925-6884eb88543c

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Cost Amount Non-Inv YTD (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates],
			    VAR LastDayAvailable = MAX ( 'Date'[Fiscal DayOfYearNumber] )
			    VAR LastFiscalYearAvailable = MAX ( 'Date'[Fiscal YearNumber] )
			    VAR Result =
			        CALCULATE (
			            [Cost Amount Non-Inv],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[WeekDayNumber] ),
			            'Date'[Fiscal DayOfYearNumber] <= LastDayAvailable,
			            'Date'[Fiscal YearNumber] = LastFiscalYearAvailable
			        )
			    RETURN
			        Result
			)
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount Non-Inv\Period-to-date total
		lineageTag: ba7d864f-4c42-4993-a089-94c71b163144

	measure 'Cost Amount Non-Inv QTD (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates],
			    VAR LastDayAvailable =  MAX ( 'Date'[Fiscal DayOfYearNumber] )
			    VAR LastFiscalYearQuarterAvailable = MAX ( 'Date'[Fiscal YearQuarterNumber] )
			    VAR Result =
			        CALCULATE (
			            [Cost Amount Non-Inv],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal DayOfYearNumber] <= LastDayAvailable,
			            'Date'[Fiscal YearQuarterNumber] = LastFiscalYearQuarterAvailable
			        )
			    RETURN
			        Result
			)
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount Non-Inv\Period-to-date total
		lineageTag: 8df2882a-61b9-48c8-b623-64176e9ab0f7

	measure 'Cost Amount Non-Inv MTD (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates],
			    VAR LastDayAvailable =  MAX ( 'Date'[Fiscal DayOfMonthNumber] )
			    VAR LastFiscalYearMonthAvailable = MAX ( 'Date'[Fiscal YearMonthNumber] )
			    VAR Result =
			        CALCULATE (
			            [Cost Amount Non-Inv],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal DayOfMonthNumber] <= LastDayAvailable,
			            'Date'[Fiscal YearMonthNumber] = LastFiscalYearMonthAvailable
			        )
			    RETURN
			        Result
			)
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount Non-Inv\Period-to-date total
		lineageTag: 9890d55e-da9c-41eb-b3e4-cc2ff9b7ad59

	measure 'Cost Amount Non-Inv PY (Fiscal)' = ```
			
			VAR MonthsOffset = 12
			RETURN IF (
			    [ShowValueForDates],
			    SUMX (
			        SUMMARIZE ( 'Date', 'Date'[Fiscal YearMonthNumber] ),
			        VAR CurrentYearMonthNumber = 'Date'[Fiscal YearMonthNumber]
			        VAR PreviousYearMonthNumber = CurrentYearMonthNumber - MonthsOffset
			        VAR DaysOnMonth = 
			            CALCULATE (
			                COUNTROWS ( 'Date' ),
			                ALLEXCEPT ( 
			                    'Date', 
			                    'Date'[Fiscal YearMonthNumber],  -- Year Month granularity
			                    'Date'[Day Type],        -- Filter-safe Date column
			                    'Date'[WeekDayNumber]         -- Filter-safe Date column
			                )
			            )
			        VAR DaysSelected = 
			            CALCULATE ( 
			                COUNTROWS ( 'Date' ), 
			                'Date'[DateWithSales] = TRUE 
			            )
			        RETURN IF (
			            DaysOnMonth = DaysSelected,
			
			            -- Selection of all days in the month
			            CALCULATE (
			                [Cost Amount Non-Inv],
			                ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[WeekDayNumber] ),
			                'Date'[Fiscal YearMonthNumber] = PreviousYearMonthNumber
			            ),
			            
			            -- Partial selection of days in a month
			            CALCULATE (
			                [Cost Amount Non-Inv],
			                ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[WeekDayNumber] ),
			                'Date'[Fiscal YearMonthNumber] = PreviousYearMonthNumber,
			                CALCULATETABLE ( 
			                    VALUES ( 'Date'[Fiscal DayOfMonthNumber] ),
			                    ALLEXCEPT ( 'Date', 'Date'[Fiscal DayOfMonthNumber], 'Date'[Date] ),
			                    'Date'[Fiscal YearMonthNumber] = CurrentYearMonthNumber,
			                    'Date'[DateWithSales] = TRUE 
			                )
			            )
			        )
			    )
			)
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount Non-Inv\Period-over-period growth
		lineageTag: c904e702-b8b9-4dc7-8378-c849f914e97b

	measure 'Cost Amount Non-Inv YOY % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Cost Amount Non-Inv YOY (Fiscal)],
			    [Cost Amount Non-Inv PY (Fiscal)]
			)
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Cost\Cost Amount Non-Inv\Period-over-period growth
		lineageTag: cf60184e-f175-4c6a-8862-4b07983b32d5

	measure 'Cost Amount Non-Inv YOY (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Cost Amount Non-Inv]
			VAR ValuePreviousPeriod = [Cost Amount Non-Inv PY (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount Non-Inv\Period-over-period growth
		lineageTag: c7669127-d3eb-46de-830e-7963cf4b42d8

	measure 'Cost Amount Non-Inv PQ (Fiscal)' = ```
			
			VAR MonthsOffset = 3
			RETURN IF (
			    [ShowValueForDates],
			    SUMX (
			        SUMMARIZE ( 'Date', 'Date'[Fiscal YearMonthNumber] ),
			        VAR CurrentYearMonthNumber = 'Date'[Fiscal YearMonthNumber]
			        VAR PreviousYearMonthNumber = CurrentYearMonthNumber - MonthsOffset
			        VAR DaysOnMonth = 
			            CALCULATE (
			                COUNTROWS ( 'Date' ),
			                ALLEXCEPT ( 'Date', 'Date'[Fiscal YearMonthNumber], 'Date'[Day Type], 'Date'[Week Day] )
			            )
			        VAR DaysSelected = 
			            CALCULATE ( 
			                COUNTROWS ( 'Date' ), 
			                'Date'[DateWithSales] = TRUE 
			            )
			        RETURN IF (
			            DaysOnMonth = DaysSelected,
			
			            -- Selection of all days in the month
			            CALCULATE (
			                [Cost Amount Non-Inv],
			                ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			                'Date'[Fiscal YearMonthNumber] = PreviousYearMonthNumber
			            ),
			            
			            -- Partial selection of days in a month
			            CALCULATE (
			                [Cost Amount Non-Inv],
			                ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			                'Date'[Fiscal YearMonthNumber] = PreviousYearMonthNumber,
			                CALCULATETABLE ( 
			                    VALUES ( 'Date'[Fiscal DayOfMonthNumber] ),
			                    ALLEXCEPT ( 'Date', 'Date'[Fiscal DayOfMonthNumber], 'Date'[Date] ),
			                    'Date'[Fiscal YearMonthNumber] = CurrentYearMonthNumber,
			                    'Date'[DateWithSales] = TRUE 
			                )
			            )
			        )
			    )
			)
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount Non-Inv\Period-over-period growth
		lineageTag: 1419edba-7607-4090-9932-6cca1e452087

	measure 'Cost Amount Non-Inv QOQ (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Cost Amount Non-Inv]
			VAR ValuePreviousPeriod = [Cost Amount Non-Inv PQ (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount Non-Inv\Period-over-period growth
		lineageTag: 015d9973-4f51-4b16-8193-7797e65d17fd

	measure 'Cost Amount Non-Inv QOQ % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Cost Amount Non-Inv QOQ (Fiscal)],
			    [Cost Amount Non-Inv PQ (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Cost\Cost Amount Non-Inv\Period-over-period growth
		lineageTag: dc790f35-4b8c-4742-9e49-272caea008cd

	measure 'Cost Amount Non-Inv PM (Fiscal)' = ```
			
			VAR MonthsOffset = 1
			RETURN IF (
			    [ShowValueForDates],
			    SUMX (
			        SUMMARIZE ( 'Date', 'Date'[Fiscal YearMonthNumber] ),
			        VAR CurrentYearMonthNumber = 'Date'[Fiscal YearMonthNumber]
			        VAR PreviousYearMonthNumber = CurrentYearMonthNumber - MonthsOffset
			        VAR DaysOnMonth = 
			            CALCULATE (
			                COUNTROWS ( 'Date' ),
			                ALLEXCEPT ( 'Date', 'Date'[Fiscal YearMonthNumber], 'Date'[Day Type], 'Date'[Week Day] )
			            )
			        VAR DaysSelected = 
			            CALCULATE ( 
			                COUNTROWS ( 'Date' ), 
			                'Date'[DateWithSales] = TRUE 
			            )
			        RETURN IF (
			            DaysOnMonth = DaysSelected,
			
			            -- Selection of all days in the month
			            CALCULATE (
			                [Cost Amount Non-Inv],
			                ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			                'Date'[Fiscal YearMonthNumber] = PreviousYearMonthNumber
			            ),
			            
			            -- Partial selection of days in a month
			            CALCULATE (
			                [Cost Amount Non-Inv],
			                ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			                'Date'[Fiscal YearMonthNumber] = PreviousYearMonthNumber,
			                CALCULATETABLE ( 
			                    VALUES ( 'Date'[Fiscal DayOfMonthNumber] ),
			                    ALLEXCEPT ( 'Date', 'Date'[Fiscal DayOfMonthNumber], 'Date'[Date] ),
			                    'Date'[Fiscal YearMonthNumber] = CurrentYearMonthNumber,
			                    'Date'[DateWithSales] = TRUE 
			                )
			            )
			        )
			    )
			)
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount Non-Inv\Period-over-period growth
		lineageTag: 6ac3e6cb-befb-4ef1-974b-870f5110c550

	measure 'Cost Amount Non-Inv MOM (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Cost Amount Non-Inv]
			VAR ValuePreviousPeriod = [Cost Amount Non-Inv PM (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount Non-Inv\Period-over-period growth
		lineageTag: f480194f-2fb9-4a91-99c5-c383b6fe00a7

	measure 'Cost Amount Non-Inv MOM % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Cost Amount Non-Inv MOM (Fiscal)],
			    [Cost Amount Non-Inv PM (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Cost\Cost Amount Non-Inv\Period-over-period growth
		lineageTag: a7cf4a1f-a23c-4737-8cb3-661ddc812b3c

	measure 'Cost Amount Non-Inv PP (Fiscal)' = ```
			
			SWITCH ( 
			    TRUE,
			    ISINSCOPE ( 'Date'[Fiscal Month Year] ), [Cost Amount Non-Inv PM (Fiscal)],
			    ISINSCOPE ( 'Date'[Fiscal Quarter Year] ), [Cost Amount Non-Inv PQ (Fiscal)],
			    ISINSCOPE ( 'Date'[Fiscal Year] ), [Cost Amount Non-Inv PY (Fiscal)]
			)
			
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount Non-Inv\Period-over-period growth
		lineageTag: 3cb6dc70-d3bb-4de6-8f26-8c3a51e94b33

	measure 'Cost Amount Non-Inv POP (Fiscal)' = ```
			
			SWITCH ( 
			    TRUE,
			    ISINSCOPE ( 'Date'[Fiscal Month Year] ), [Cost Amount Non-Inv MOM (Fiscal)],
			    ISINSCOPE ( 'Date'[Fiscal Quarter Year] ), [Cost Amount Non-Inv QOQ (Fiscal)],
			    ISINSCOPE ( 'Date'[Fiscal Year] ), [Cost Amount Non-Inv YOY (Fiscal)]
			)
			
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount Non-Inv\Period-over-period growth
		lineageTag: 0364ca37-c724-4352-9e20-73e83b92e73b

	measure 'Cost Amount Non-Inv POP % (Fiscal)' = ```
			
			SWITCH ( 
			    TRUE,
			    ISINSCOPE ( 'Date'[Fiscal Month Year] ), [Cost Amount Non-Inv MOM % (Fiscal)],
			    ISINSCOPE ( 'Date'[Fiscal Quarter Year] ), [Cost Amount Non-Inv QOQ % (Fiscal)],
			    ISINSCOPE ( 'Date'[Fiscal Year] ), [Cost Amount Non-Inv YOY % (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Cost\Cost Amount Non-Inv\Period-over-period growth
		lineageTag: 835dd362-d825-4907-a5ef-e788c2b968a9

	measure 'Cost Amount Non-Inv PYTD (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates],
			    VAR PreviousFiscalYear = MAX ( 'Date'[Fiscal YearNumber] ) - 1
			    VAR LastDayOfFiscalYearAvailable = 
			        CALCULATE ( 
			            MAX ( 'Date'[Fiscal DayOfYearNumber] ),
			            REMOVEFILTERS (                -- Remove filters from
			                'Date'[Day Type],       -- filter-safe columns
			                'Date'[Week Day],       -- to get the last day with data
			                'Date'[WeekDayNumber] -- selected in the report
			            ),
			            'Date'[DateWithSales] = TRUE 
			        )
			    VAR Result =
			        CALCULATE (
			            [Cost Amount Non-Inv],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearNumber] = PreviousFiscalYear,
			            'Date'[Fiscal DayOfYearNumber] <= LastDayOfFiscalYearAvailable,
			            'Date'[DateWithSales] = TRUE 
			        )
			    RETURN
			        Result
			)
			
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount Non-Inv\Period-to-date growth
		lineageTag: a527da50-b8a3-4655-8700-16e87807fb80

	measure 'Cost Amount Non-Inv PQTD (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates],
			    VAR LastMonthSelected = 
			        MAX ( 'Date'[Fiscal YearMonthNumber] )
			    VAR DaysOnLastMonth = 
			        CALCULATE (
			            COUNTROWS ( 'Date' ),
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearMonthNumber] = LastMonthSelected
			        )
			    VAR DaysLastMonthSelected = 
			        CALCULATE ( 
			            COUNTROWS ( 'Date' ), 
			            'Date'[DateWithSales] = TRUE,
			            'Date'[Fiscal YearMonthNumber] = LastMonthSelected
			        )
			    VAR LastDayOfMonthWithSales =  
			        MAX ( 
			            -- End of month of any month
			            31 * (DaysOnLastMonth = DaysLastMonthSelected),  
			            -- or last day selected with data 
			            CALCULATE ( 
			                MAX ( 'Date'[Fiscal DayOfMonthNumber] ),
			                REMOVEFILTERS (                -- Remove filters from all of the
			                    'Date'[Day Type],       -- filter-safe columns
			                    'Date'[Week Day],       -- to get the last day with data
			                    'Date'[WeekDayNumber] -- selected in the report
			                ),
			                'Date'[Fiscal YearMonthNumber] = LastMonthSelected,
			                'Date'[DateWithSales] = TRUE 
			            )
			        )
			    VAR LastMonthInQuarterWithSales = 
			        CALCULATE ( 
			            MAX ( 'Date'[Fiscal MonthInQuarterNumber] ),
			            REMOVEFILTERS (                -- Remove filters from all of the
			                'Date'[Day Type],       -- filter-safe columns
			                'Date'[Week Day],       -- to get the last day with data
			                'Date'[WeekDayNumber] -- selected in the report
			            ),
			            'Date'[DateWithSales] = TRUE 
			        )
			    VAR PreviousFiscalYearQuarter = 
			        MAX ( 'Date'[Fiscal YearQuarterNumber] ) - 1
			    VAR FilterQTD = 
			        FILTER (
			            ALL ( 'Date'[Fiscal MonthInQuarterNumber], 'Date'[Fiscal DayOfMonthNumber] ),
			            ISONORAFTER ( 
			                'Date'[Fiscal MonthInQuarterNumber], LastMonthInQuarterWithSales, DESC,
			                'Date'[Fiscal DayOfMonthNumber], LastDayOfMonthWithSales, DESC
			            )
			        )
			    VAR Result =
			        CALCULATE (
			            [Cost Amount Non-Inv],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearQuarterNumber] = PreviousFiscalYearQuarter,
			            FilterQTD
			        )
			    RETURN
			        Result
			)
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount Non-Inv\Period-to-date growth
		lineageTag: 0902059d-24b8-4821-b401-8a40729cb848

	measure 'Cost Amount Non-Inv YOYTD (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Cost Amount Non-Inv YTD (Fiscal)]
			VAR ValuePreviousPeriod = [Cost Amount Non-Inv PYTD (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount Non-Inv\Period-to-date growth
		lineageTag: 55ed10fb-617e-465e-b131-91d4fb6a9aaa

	measure 'Cost Amount Non-Inv YOYTD % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Cost Amount Non-Inv YOYTD (Fiscal)],
			    [Cost Amount Non-Inv PYTD (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Cost\Cost Amount Non-Inv\Period-to-date growth
		lineageTag: db25288b-ffe2-4bec-86b0-30de3e594676

	measure 'Cost Amount Non-Inv QOQTD (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Cost Amount Non-Inv QTD (Fiscal)]
			VAR ValuePreviousPeriod = [Cost Amount Non-Inv PQTD (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount Non-Inv\Period-to-date growth
		lineageTag: c556c511-f2c2-463f-a0be-46e38562f869

	measure 'Cost Amount Non-Inv QOQTD % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Cost Amount Non-Inv QOQTD (Fiscal)],
			    [Cost Amount Non-Inv PQTD (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Cost\Cost Amount Non-Inv\Period-to-date growth
		lineageTag: 2cb355cd-febe-4e3e-9c54-974121877652

	measure 'Cost Amount Non-Inv PMTD (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates],
			    VAR LastMonthSelected = 
			        MAX ( 'Date'[Fiscal YearMonthNumber] )
			    VAR DaysOnLastMonth = 
			        CALCULATE (
			            COUNTROWS ( 'Date' ),
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearMonthNumber] = LastMonthSelected
			        )
			    VAR DaysLastMonthSelected = 
			        CALCULATE ( 
			            COUNTROWS ( 'Date' ), 
			            'Date'[DateWithSales] = TRUE,
			            'Date'[Fiscal YearMonthNumber] = LastMonthSelected
			        )
			    VAR LastDayOfMonthWithSales =  
			        MAX ( 
			            -- End of month of any month
			            31 * (DaysOnLastMonth = DaysLastMonthSelected),  
			            -- or last day selected with data 
			            CALCULATE ( 
			                MAX ( 'Date'[Fiscal DayOfMonthNumber] ),
			                REMOVEFILTERS (                -- Remove filters from all of the
			                    'Date'[Day Type],       -- filter-safe columns
			                    'Date'[Week Day],       -- to get the last day with data
			                    'Date'[WeekDayNumber] -- selected in the report
			                ),
			                'Date'[Fiscal YearMonthNumber] = LastMonthSelected,
			                'Date'[DateWithSales] = TRUE 
			            )
			        )
			    VAR PreviousYearMonth = 
			        LastMonthSelected - 1
			    VAR Result = 
			        CALCULATE (
			            [Cost Amount Non-Inv],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearMonthNumber] = PreviousYearMonth,
			            'Date'[Fiscal DayOfMonthNumber] <= LastDayOfMonthWithSales
			        )
			    RETURN 
			        Result
			)
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount Non-Inv\Period-to-date growth
		lineageTag: d446567c-4650-4865-aa41-576f0ea48478

	measure 'Cost Amount Non-Inv MOMTD % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Cost Amount Non-Inv MOMTD (Fiscal)],
			    [Cost Amount Non-Inv PMTD (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Cost\Cost Amount Non-Inv\Period-to-date growth
		lineageTag: 870e9448-41c8-43c7-8694-6f17ff85ddef

	measure 'Cost Amount Non-Inv MOMTD (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Cost Amount Non-Inv MTD (Fiscal)]
			VAR ValuePreviousPeriod = [Cost Amount Non-Inv PMTD (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount Non-Inv\Period-to-date growth
		lineageTag: 278180e9-21a5-4757-9ee2-638dd67e4762

	measure 'Cost Amount Non-Inv MAT (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates], 
			    VAR LastDayMAT =  MAX ( 'Date'[Sequential365DayNumber] )
			    VAR FirstDayMAT = INT ( EDATE ( LastDayMAT + 1, -12 ) )
			    VAR Result = 
			        CALCULATE ( 
			            [Cost Amount Non-Inv], 
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Sequential365DayNumber] >= FirstDayMAT 
			                && 'Date'[Sequential365DayNumber] <= LastDayMAT
			        ) 
			    RETURN
			        Result
			)
			
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount Non-Inv\Moving annual total growth
		lineageTag: 71a4067a-89df-4c2f-ad21-7605eabf288b

	measure 'Cost Amount Non-Inv PYMAT (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates], 
			    VAR LastDayAvailable = MAX ( 'Date'[Sequential365DayNumber] )
			    VAR LastDayMAT =  INT ( EDATE ( LastDayAvailable, -12 ) )
			    VAR FirstDayMAT = INT ( EDATE ( LastDayAvailable + 1, -24 ) )
			    VAR Result = 
			        CALCULATE ( 
			            [Cost Amount Non-Inv], 
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Sequential365DayNumber] >= FirstDayMAT 
			                && 'Date'[Sequential365DayNumber] <= LastDayMAT
			        ) 
			    RETURN 
			        Result
			)
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount Non-Inv\Moving annual total growth
		lineageTag: 68323ca1-25d6-4563-8829-3f00f317d77e

	measure 'Cost Amount Non-Inv MATG (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Cost Amount Non-Inv MAT (Fiscal)]
			VAR ValuePreviousPeriod = [Cost Amount Non-Inv PYMAT (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount Non-Inv\Moving annual total growth
		lineageTag: 9bc09d78-af74-4c0c-b511-3a04ef1954d1

	measure 'Cost Amount Non-Inv MATG % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Cost Amount Non-Inv MATG (Fiscal)],
			    [Cost Amount Non-Inv PYMAT (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Cost\Cost Amount Non-Inv\Moving annual total growth
		lineageTag: e3eef0a9-34f6-4195-b1cd-3c7721726ce0

	measure 'Cost Amount Non-Inv PYC (Fiscal)' = ```
			
			IF (
			    [ShowValueForDates] && HASONEVALUE ( 'Date'[Fiscal YearNumber] ),
			    VAR PreviousFiscalYear = MAX ( 'Date'[Fiscal YearNumber] ) - 1
			    VAR Result =
			        CALCULATE (
			            [Cost Amount Non-Inv],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearNumber] = PreviousFiscalYear
			        )
			    RETURN
			        Result
			)
			
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount Non-Inv\Period-to-date over full previous period
		lineageTag: f131b78c-f140-4258-9233-b31f540bb46c

	measure 'Cost Amount Non-Inv YTDOPY (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Cost Amount Non-Inv YTD (Fiscal)]
			VAR ValuePreviousPeriod = [Cost Amount Non-Inv PYC (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount Non-Inv\Period-to-date over full previous period
		lineageTag: c8d7205e-7e4d-447d-bacb-8b69a0e6877a

	measure 'Cost Amount Non-Inv YTDOPY % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Cost Amount Non-Inv YTDOPY (Fiscal)],
			    [Cost Amount Non-Inv PYC (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Cost\Cost Amount Non-Inv\Period-to-date over full previous period
		lineageTag: 01d52999-50c5-4a7b-9f94-c70efd0ae7bd

	measure 'Cost Amount Non-Inv PQC (Fiscal)' =
			
			IF (
			    [ShowValueForDates] && HASONEVALUE ( 'Date'[Fiscal YearQuarterNumber] ),
			    VAR PreviousFiscalYearQuarter = MAX ( 'Date'[Fiscal YearQuarterNumber] ) - 1
			    VAR Result =
			        CALCULATE (
			            [Cost Amount Non-Inv],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearQuarterNumber] = PreviousFiscalYearQuarter
			        )
			    RETURN
			        Result
			)
		formatString: #,0.00
		displayFolder: Cost\Cost Amount Non-Inv\Period-to-date over full previous period
		lineageTag: c8b8dd56-b72c-4222-922d-b5519dda5c98

	measure 'Cost Amount Non-Inv QTDOPQ (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Cost Amount Non-Inv QTD (Fiscal)]
			VAR ValuePreviousPeriod = [Cost Amount Non-Inv PQC (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount Non-Inv\Period-to-date over full previous period
		lineageTag: 8fcabec2-6549-4a8e-82b3-4cae79be22d7

	measure 'Cost Amount Non-Inv QTDOPQ % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Cost Amount Non-Inv QTDOPQ (Fiscal)],
			    [Cost Amount Non-Inv PQC (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Cost\Cost Amount Non-Inv\Period-to-date over full previous period
		lineageTag: 38a03565-b959-454a-8861-07ee32ae9171

	measure 'Cost Amount Non-Inv PMC (Fiscal)' = ```
			
			IF (
			    [ShowValueForDates] && HASONEVALUE ( 'Date'[Fiscal YearMonthNumber] ),
			    VAR PreviousFiscalYearMonth = MAX ( 'Date'[Fiscal YearMonthNumber] ) - 1
			    VAR Result =
			        CALCULATE (
			            [Cost Amount Non-Inv],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearMonthNumber] = PreviousFiscalYearMonth
			        )
			    RETURN
			        Result
			)
			
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount Non-Inv\Period-to-date over full previous period
		lineageTag: 2e5191fc-dfc0-4110-94c9-6189b1e888da

	measure 'Cost Amount Non-Inv MTDOPM (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Cost Amount Non-Inv MTD (Fiscal)]
			VAR ValuePreviousPeriod = [Cost Amount Non-Inv PMC (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount Non-Inv\Period-to-date over full previous period
		lineageTag: 729a5aea-206e-48bf-aaff-33cce2f306a6

	measure 'Cost Amount Non-Inv MTDOPM % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Cost Amount Non-Inv MTDOPM (Fiscal)],
			    [Cost Amount Non-Inv PMC (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Cost\Cost Amount Non-Inv\Period-to-date over full previous period
		lineageTag: 19c97224-08cb-49bd-a241-1abb5bb5f29a

	measure 'Cost Amount Non-Inv AVG 30D (Fiscal)' = ```
			
			IF (
			    [ShowValueForDates],
			    VAR LastDayMAT =
			        MAX ( 'Date'[Sequential365DayNumber] )
			    VAR FirstDayMAT = LastDayMAT - 29
			    VAR Period30D =
			        CALCULATETABLE (
			            VALUES ( 'Date'[Sequential365DayNumber] ),
			            ALLEXCEPT (
			                'Date',
			                'Date'[Day Type],
			                'Date'[Week Day]
			            ),
			            'Date'[Sequential365DayNumber] >= FirstDayMAT
			                && 'Date'[Sequential365DayNumber] <= LastDayMAT,
			            'Date'[DateWithSales] = TRUE
			        )
			    VAR FirstDayWithData =
			            CALCULATE (
			                INT (
			                    MINX (
			                        {
			                            MIN ( 'Sales Value Entries'[postingDate] ),
			                            MIN ( 'Sales Invoice Lines'[postingDate] ),
			                            MIN ( 'Sales Credit Lines'[postingDate] ),
			                            MIN ( 'Project Ledger Entries'[postingDate] )
			                        },
			                        [Value]
			                    )
			                ),
			                REMOVEFILTERS ()
			            )
			    VAR FirstDayInPeriod =
			        MINX (
			            Period30D,
			            'Date'[Sequential365DayNumber]
			        )
			    VAR Result =
			        IF (
			            FirstDayWithData <= FirstDayInPeriod,
			            CALCULATE (
			                AVERAGEX ( Period30D, [Cost Amount Non-Inv] ),
			                REMOVEFILTERS ( 'Date' )
			            )
			        )
			    RETURN
			        Result
			)
			
			
			```
		formatString: #,0.00
		displayFolder: Cost\Cost Amount Non-Inv\Moving averages
		lineageTag: cdb04e48-c1d9-479a-8daf-e4952434e427

	measure 'Cost Amount Non-Inv AVG 3M (Fiscal)' =
			
			IF (
			    [ShowValueForDates],
			    VAR LastDayMAT =
			        MAX ( 'Date'[Sequential365DayNumber] )
			    VAR FirstDayMAT =
			        INT ( EDATE ( LastDayMAT + 1, -3 ) )
			    VAR Period3M =
			       CALCULATETABLE (
			            VALUES ( 'Date'[Sequential365DayNumber] ),
			            ALLEXCEPT (
			                'Date',
			                'Date'[Day Type],
			                'Date'[Week Day]
			            ),
			            'Date'[Sequential365DayNumber] >= FirstDayMAT
			                && 'Date'[Sequential365DayNumber] <= LastDayMAT,
			            'Date'[DateWithSales] = TRUE
			        )
			    VAR FirstDayWithData =
			            CALCULATE (
			                INT (
			                    MINX (
			                        {
			                            MIN ( 'Sales Value Entries'[postingDate] ),
			                            MIN ( 'Sales Invoice Lines'[postingDate] ),
			                            MIN ( 'Sales Credit Lines'[postingDate] ),
			                            MIN ( 'Project Ledger Entries'[postingDate] )
			                        },
			                        [Value]
			                    )
			                ),
			                REMOVEFILTERS ()
			            )
			    VAR FirstDayInPeriod =
			        MINX (
			            Period3M,
			            'Date'[Sequential365DayNumber]
			        )
			    VAR Result =
			        IF (
			            FirstDayWithData <= FirstDayInPeriod,
			            CALCULATE (
			                AVERAGEX ( Period3M, [Cost Amount Non-Inv] ),
			                REMOVEFILTERS ( 'Date' )
			            )
			        )
			    RETURN
			        Result
			)
		formatString: #,0.00
		displayFolder: Cost\Cost Amount Non-Inv\Moving averages
		lineageTag: 155521e8-7954-49fe-ac9b-ca72a27d1884

	measure 'Cost Amount Non-Inv AVG 1Y (Fiscal)' =
			
			IF (
			    [ShowValueForDates],
			    VAR LastDayMAT =
			        MAX ( 'Date'[Sequential365DayNumber] )
			    VAR FirstDayMAT =
			        INT ( EDATE ( LastDayMAT + 1, -12 ) )
			    VAR Period1Y =
			        CALCULATETABLE (
			            VALUES ( 'Date'[Sequential365DayNumber] ),
			            ALLEXCEPT (
			                'Date',
			                'Date'[Day Type],
			                'Date'[Week Day]
			            ),
			            'Date'[Sequential365DayNumber] >= FirstDayMAT
			                && 'Date'[Sequential365DayNumber] <= LastDayMAT,
			            'Date'[DateWithSales] = TRUE
			        )
			    VAR FirstDayWithData =
			            CALCULATE (
			                INT (
			                    MINX (
			                        {
			                            MIN ( 'Sales Value Entries'[postingDate] ),
			                            MIN ( 'Sales Invoice Lines'[postingDate] ),
			                            MIN ( 'Sales Credit Lines'[postingDate] ),
			                            MIN ( 'Project Ledger Entries'[postingDate] )
			                        },
			                        [Value]
			                    )
			                ),
			                REMOVEFILTERS ()
			            )
			    VAR FirstDayInPeriod =
			        MINX (
			            Period1Y,
			            'Date'[Sequential365DayNumber]
			        )
			    VAR Result =
			        IF (
			            FirstDayWithData <= FirstDayInPeriod,
			            CALCULATE (
			                AVERAGEX ( Period1Y, [Cost Amount Non-Inv] ),
			                REMOVEFILTERS ( 'Date' )
			            )
			        )
			    RETURN
			        Result
			)
		formatString: #,0.00
		displayFolder: Cost\Cost Amount Non-Inv\Moving averages
		lineageTag: 85c5c89f-6670-439c-a496-5b28dec9fed8

	measure 'Gross Profit YTD (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates],
			    VAR LastDayAvailable = MAX ( 'Date'[Fiscal DayOfYearNumber] )
			    VAR LastFiscalYearAvailable = MAX ( 'Date'[Fiscal YearNumber] )
			    VAR Result =
			        CALCULATE (
			            [Adjusted Profit (LCY)],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[WeekDayNumber] ),
			            'Date'[Fiscal DayOfYearNumber] <= LastDayAvailable,
			            'Date'[Fiscal YearNumber] = LastFiscalYearAvailable
			        )
			    RETURN
			        Result
			)
			```
		formatString: #,0.00
		displayFolder: Profit\Gross Profit\Period-to-date total
		lineageTag: d44f8366-9f39-4ff9-9a3e-dd314eb40db1

		changedProperty = FormatString

	measure 'Gross Profit QTD (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates],
			    VAR LastDayAvailable =  MAX ( 'Date'[Fiscal DayOfYearNumber] )
			    VAR LastFiscalYearQuarterAvailable = MAX ( 'Date'[Fiscal YearQuarterNumber] )
			    VAR Result =
			        CALCULATE (
			            [Adjusted Profit (LCY)],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal DayOfYearNumber] <= LastDayAvailable,
			            'Date'[Fiscal YearQuarterNumber] = LastFiscalYearQuarterAvailable
			        )
			    RETURN
			        Result
			)
			```
		formatString: #,0.00
		displayFolder: Profit\Gross Profit\Period-to-date total
		lineageTag: 4bea34ae-3aec-4a93-b60e-5d1f49ceb037

		changedProperty = FormatString

	/// This measure calculates month-to-date gross profit using the fiscal calendar, considering only the sales up to the last available fiscal day of the current month and year.
	measure 'Gross Profit MTD (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates],
			    VAR LastDayAvailable =  MAX ( 'Date'[Fiscal DayOfMonthNumber] )
			    VAR LastFiscalYearMonthAvailable = MAX ( 'Date'[Fiscal YearMonthNumber] )
			    VAR Result =
			        CALCULATE (
			            [Adjusted Profit (LCY)],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal DayOfMonthNumber] <= LastDayAvailable,
			            'Date'[Fiscal YearMonthNumber] = LastFiscalYearMonthAvailable
			        )
			    RETURN
			        Result
			)
			```
		formatString: #,0.00
		displayFolder: Profit\Gross Profit\Period-to-date total
		lineageTag: 5d256a41-1c57-4819-8d60-468c3883ed2b

		changedProperty = FormatString

	measure 'Gross Profit PY (Fiscal)' = ```
			
			VAR MonthsOffset = 12
			RETURN IF (
			    [ShowValueForDates],
			    SUMX (
			        SUMMARIZE ( 'Date', 'Date'[Fiscal YearMonthNumber] ),
			        VAR CurrentYearMonthNumber = 'Date'[Fiscal YearMonthNumber]
			        VAR PreviousYearMonthNumber = CurrentYearMonthNumber - MonthsOffset
			        VAR DaysOnMonth = 
			            CALCULATE (
			                COUNTROWS ( 'Date' ),
			                ALLEXCEPT ( 
			                    'Date', 
			                    'Date'[Fiscal YearMonthNumber],  -- Year Month granularity
			                    'Date'[Day Type],        -- Filter-safe Date column
			                    'Date'[WeekDayNumber]         -- Filter-safe Date column
			                )
			            )
			        VAR DaysSelected = 
			            CALCULATE ( 
			                COUNTROWS ( 'Date' ), 
			                'Date'[DateWithSales] = TRUE 
			            )
			        RETURN IF (
			            DaysOnMonth = DaysSelected,
			
			            -- Selection of all days in the month
			            CALCULATE (
			                [Adjusted Profit (LCY)],
			                ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[WeekDayNumber] ),
			                'Date'[Fiscal YearMonthNumber] = PreviousYearMonthNumber
			            ),
			            
			            -- Partial selection of days in a month
			            CALCULATE (
			                [Adjusted Profit (LCY)],
			                ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[WeekDayNumber] ),
			                'Date'[Fiscal YearMonthNumber] = PreviousYearMonthNumber,
			                CALCULATETABLE ( 
			                    VALUES ( 'Date'[Fiscal DayOfMonthNumber] ),
			                    ALLEXCEPT ( 'Date', 'Date'[Fiscal DayOfMonthNumber], 'Date'[Date] ),
			                    'Date'[Fiscal YearMonthNumber] = CurrentYearMonthNumber,
			                    'Date'[DateWithSales] = TRUE 
			                )
			            )
			        )
			    )
			)
			```
		formatString: #,0.00
		displayFolder: Profit\Gross Profit\Period-over-period growth
		lineageTag: 552a46dd-8f67-4638-a9d5-92c146acb7fa

	measure 'Gross Profit YOY % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Gross Profit YOY (Fiscal)],
			    [Gross Profit PY (Fiscal)]
			)
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit\Period-over-period growth
		lineageTag: 427ecba8-271c-49b4-906e-0e42e4c593ee

	measure 'Gross Profit YOY (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Adjusted Profit (LCY)]
			VAR ValuePreviousPeriod = [Gross Profit PY (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Profit\Gross Profit\Period-over-period growth
		lineageTag: b8c145ea-8c95-4a81-9aeb-adaeed7c7acb

	measure 'Gross Profit PQ (Fiscal)' = ```
			
			VAR MonthsOffset = 3
			RETURN IF (
			    [ShowValueForDates],
			    SUMX (
			        SUMMARIZE ( 'Date', 'Date'[Fiscal YearMonthNumber] ),
			        VAR CurrentYearMonthNumber = 'Date'[Fiscal YearMonthNumber]
			        VAR PreviousYearMonthNumber = CurrentYearMonthNumber - MonthsOffset
			        VAR DaysOnMonth = 
			            CALCULATE (
			                COUNTROWS ( 'Date' ),
			                ALLEXCEPT ( 'Date', 'Date'[Fiscal YearMonthNumber], 'Date'[Day Type], 'Date'[Week Day] )
			            )
			        VAR DaysSelected = 
			            CALCULATE ( 
			                COUNTROWS ( 'Date' ), 
			                'Date'[DateWithSales] = TRUE 
			            )
			        RETURN IF (
			            DaysOnMonth = DaysSelected,
			
			            -- Selection of all days in the month
			            CALCULATE (
			                [Adjusted Profit (LCY)],
			                ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			                'Date'[Fiscal YearMonthNumber] = PreviousYearMonthNumber
			            ),
			            
			            -- Partial selection of days in a month
			            CALCULATE (
			                [Adjusted Profit (LCY)],
			                ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			                'Date'[Fiscal YearMonthNumber] = PreviousYearMonthNumber,
			                CALCULATETABLE ( 
			                    VALUES ( 'Date'[Fiscal DayOfMonthNumber] ),
			                    ALLEXCEPT ( 'Date', 'Date'[Fiscal DayOfMonthNumber], 'Date'[Date] ),
			                    'Date'[Fiscal YearMonthNumber] = CurrentYearMonthNumber,
			                    'Date'[DateWithSales] = TRUE 
			                )
			            )
			        )
			    )
			)
			```
		formatString: #,0.00
		displayFolder: Profit\Gross Profit\Period-over-period growth
		lineageTag: 816b4a79-ff3b-430e-a22a-1b6ef73a8a9a

	measure 'Gross Profit QOQ (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Adjusted Profit (LCY)]
			VAR ValuePreviousPeriod = [Gross Profit PQ (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Profit\Gross Profit\Period-over-period growth
		lineageTag: cb502626-77f6-4363-877b-ee944464ab0f

	measure 'Gross Profit QOQ % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Gross Profit QOQ (Fiscal)],
			    [Gross Profit PQ (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit\Period-over-period growth
		lineageTag: a0021535-baef-497a-b0dc-47d58da17de0

	measure 'Gross Profit PM (Fiscal)' = ```
			
			VAR MonthsOffset = 1
			RETURN IF (
			    [ShowValueForDates],
			    SUMX (
			        SUMMARIZE ( 'Date', 'Date'[Fiscal YearMonthNumber] ),
			        VAR CurrentYearMonthNumber = 'Date'[Fiscal YearMonthNumber]
			        VAR PreviousYearMonthNumber = CurrentYearMonthNumber - MonthsOffset
			        VAR DaysOnMonth = 
			            CALCULATE (
			                COUNTROWS ( 'Date' ),
			                ALLEXCEPT ( 'Date', 'Date'[Fiscal YearMonthNumber], 'Date'[Day Type], 'Date'[Week Day] )
			            )
			        VAR DaysSelected = 
			            CALCULATE ( 
			                COUNTROWS ( 'Date' ), 
			                'Date'[DateWithSales] = TRUE 
			            )
			        RETURN IF (
			            DaysOnMonth = DaysSelected,
			
			            -- Selection of all days in the month
			            CALCULATE (
			                [Adjusted Profit (LCY)],
			                ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			                'Date'[Fiscal YearMonthNumber] = PreviousYearMonthNumber
			            ),
			            
			            -- Partial selection of days in a month
			            CALCULATE (
			                [Adjusted Profit (LCY)],
			                ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			                'Date'[Fiscal YearMonthNumber] = PreviousYearMonthNumber,
			                CALCULATETABLE ( 
			                    VALUES ( 'Date'[Fiscal DayOfMonthNumber] ),
			                    ALLEXCEPT ( 'Date', 'Date'[Fiscal DayOfMonthNumber], 'Date'[Date] ),
			                    'Date'[Fiscal YearMonthNumber] = CurrentYearMonthNumber,
			                    'Date'[DateWithSales] = TRUE 
			                )
			            )
			        )
			    )
			)
			```
		formatString: #,0.00
		displayFolder: Profit\Gross Profit\Period-over-period growth
		lineageTag: 0169d611-4cea-4ed5-9324-3b3ed651cd4b

	measure 'Gross Profit MOM (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Adjusted Profit (LCY)]
			VAR ValuePreviousPeriod = [Gross Profit PM (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Profit\Gross Profit\Period-over-period growth
		lineageTag: 8e17fff7-a7cc-4299-9de4-1bb4eed16cd8

	measure 'Gross Profit MOM % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Gross Profit MOM (Fiscal)],
			    [Gross Profit PM (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit\Period-over-period growth
		lineageTag: 9daef1a1-fdcf-4adf-a2ea-0394ae38d693

	measure 'Gross Profit PP (Fiscal)' = ```
			
			SWITCH ( 
			    TRUE,
			    ISINSCOPE ( 'Date'[Fiscal Month Year] ), [Gross Profit PM (Fiscal)],
			    ISINSCOPE ( 'Date'[Fiscal Quarter Year] ), [Gross Profit PQ (Fiscal)],
			    ISINSCOPE ( 'Date'[Fiscal Year] ), [Gross Profit PY (Fiscal)]
			)
			
			```
		formatString: #,0.00
		displayFolder: Profit\Gross Profit\Period-over-period growth
		lineageTag: 8227f79a-43c2-4752-9c0a-d2fe7bedb639

	measure 'Gross Profit POP (Fiscal)' = ```
			
			SWITCH ( 
			    TRUE,
			    ISINSCOPE ( 'Date'[Fiscal Month Year] ), [Gross Profit MOM (Fiscal)],
			    ISINSCOPE ( 'Date'[Fiscal Quarter Year] ), [Gross Profit QOQ (Fiscal)],
			    ISINSCOPE ( 'Date'[Fiscal Year] ), [Gross Profit YOY (Fiscal)]
			)
			
			```
		formatString: #,0.00
		displayFolder: Profit\Gross Profit\Period-over-period growth
		lineageTag: 759e36a3-376b-42ce-9322-29d9c1f85f38

	measure 'Gross Profit POP % (Fiscal)' = ```
			
			SWITCH ( 
			    TRUE,
			    ISINSCOPE ( 'Date'[Fiscal Month Year] ), [Gross Profit MOM % (Fiscal)],
			    ISINSCOPE ( 'Date'[Fiscal Quarter Year] ), [Gross Profit QOQ % (Fiscal)],
			    ISINSCOPE ( 'Date'[Fiscal Year] ), [Gross Profit YOY % (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit\Period-over-period growth
		lineageTag: eae44868-9421-492a-9c88-2bc946766493

	measure 'Gross Profit PYTD (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates],
			    VAR PreviousFiscalYear = MAX ( 'Date'[Fiscal YearNumber] ) - 1
			    VAR LastDayOfFiscalYearAvailable = 
			        CALCULATE ( 
			            MAX ( 'Date'[Fiscal DayOfYearNumber] ),
			            REMOVEFILTERS (                -- Remove filters from
			                'Date'[Day Type],       -- filter-safe columns
			                'Date'[Week Day],       -- to get the last day with data
			                'Date'[WeekDayNumber] -- selected in the report
			            ),
			            'Date'[DateWithSales] = TRUE 
			        )
			    VAR Result =
			        CALCULATE (
			            [Adjusted Profit (LCY)],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearNumber] = PreviousFiscalYear,
			            'Date'[Fiscal DayOfYearNumber] <= LastDayOfFiscalYearAvailable,
			            'Date'[DateWithSales] = TRUE 
			        )
			    RETURN
			        Result
			)
			
			```
		formatString: #,0.00
		displayFolder: Profit\Gross Profit\Period-to-date growth
		lineageTag: bfb5a6f8-d57e-4fd1-b45c-2016f0adde81

	measure 'Gross Profit PQTD (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates],
			    VAR LastMonthSelected = 
			        MAX ( 'Date'[Fiscal YearMonthNumber] )
			    VAR DaysOnLastMonth = 
			        CALCULATE (
			            COUNTROWS ( 'Date' ),
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearMonthNumber] = LastMonthSelected
			        )
			    VAR DaysLastMonthSelected = 
			        CALCULATE ( 
			            COUNTROWS ( 'Date' ), 
			            'Date'[DateWithSales] = TRUE,
			            'Date'[Fiscal YearMonthNumber] = LastMonthSelected
			        )
			    VAR LastDayOfMonthWithSales =  
			        MAX ( 
			            -- End of month of any month
			            31 * (DaysOnLastMonth = DaysLastMonthSelected),  
			            -- or last day selected with data 
			            CALCULATE ( 
			                MAX ( 'Date'[Fiscal DayOfMonthNumber] ),
			                REMOVEFILTERS (                -- Remove filters from all of the
			                    'Date'[Day Type],       -- filter-safe columns
			                    'Date'[Week Day],       -- to get the last day with data
			                    'Date'[WeekDayNumber] -- selected in the report
			                ),
			                'Date'[Fiscal YearMonthNumber] = LastMonthSelected,
			                'Date'[DateWithSales] = TRUE 
			            )
			        )
			    VAR LastMonthInQuarterWithSales = 
			        CALCULATE ( 
			            MAX ( 'Date'[Fiscal MonthInQuarterNumber] ),
			            REMOVEFILTERS (                -- Remove filters from all of the
			                'Date'[Day Type],       -- filter-safe columns
			                'Date'[Week Day],       -- to get the last day with data
			                'Date'[WeekDayNumber] -- selected in the report
			            ),
			            'Date'[DateWithSales] = TRUE 
			        )
			    VAR PreviousFiscalYearQuarter = 
			        MAX ( 'Date'[Fiscal YearQuarterNumber] ) - 1
			    VAR FilterQTD = 
			        FILTER (
			            ALL ( 'Date'[Fiscal MonthInQuarterNumber], 'Date'[Fiscal DayOfMonthNumber] ),
			            ISONORAFTER ( 
			                'Date'[Fiscal MonthInQuarterNumber], LastMonthInQuarterWithSales, DESC,
			                'Date'[Fiscal DayOfMonthNumber], LastDayOfMonthWithSales, DESC
			            )
			        )
			    VAR Result =
			        CALCULATE (
			            [Adjusted Profit (LCY)],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearQuarterNumber] = PreviousFiscalYearQuarter,
			            FilterQTD
			        )
			    RETURN
			        Result
			)
			```
		formatString: #,0.00
		displayFolder: Profit\Gross Profit\Period-to-date growth
		lineageTag: b3c0bf27-626a-4a47-971a-96f50d3bb35b

	measure 'Gross Profit YOYTD (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Gross Profit YTD (Fiscal)]
			VAR ValuePreviousPeriod = [Gross Profit PYTD (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Profit\Gross Profit\Period-to-date growth
		lineageTag: dc51ffaa-bc2a-4570-a36d-6904774cf517

	measure 'Gross Profit YOYTD % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Gross Profit YOYTD (Fiscal)],
			    [Gross Profit PYTD (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit\Period-to-date growth
		lineageTag: 27fa1280-faeb-48b8-93a3-89eb57651533

	measure 'Gross Profit QOQTD (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Gross Profit QTD (Fiscal)]
			VAR ValuePreviousPeriod = [Gross Profit PQTD (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Profit\Gross Profit\Period-to-date growth
		lineageTag: 6f67c655-1212-4465-81f1-e760ad9fa8e1

	measure 'Gross Profit  QOQTD % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Gross Profit QOQTD (Fiscal)],
			    [Gross Profit PQTD (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit\Period-to-date growth
		lineageTag: 07666a84-a2f8-4dbe-be37-b3de772d29db

	measure 'Gross Profit PMTD (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates],
			    VAR LastMonthSelected = 
			        MAX ( 'Date'[Fiscal YearMonthNumber] )
			    VAR DaysOnLastMonth = 
			        CALCULATE (
			            COUNTROWS ( 'Date' ),
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearMonthNumber] = LastMonthSelected
			        )
			    VAR DaysLastMonthSelected = 
			        CALCULATE ( 
			            COUNTROWS ( 'Date' ), 
			            'Date'[DateWithSales] = TRUE,
			            'Date'[Fiscal YearMonthNumber] = LastMonthSelected
			        )
			    VAR LastDayOfMonthWithSales =  
			        MAX ( 
			            -- End of month of any month
			            31 * (DaysOnLastMonth = DaysLastMonthSelected),  
			            -- or last day selected with data 
			            CALCULATE ( 
			                MAX ( 'Date'[Fiscal DayOfMonthNumber] ),
			                REMOVEFILTERS (                -- Remove filters from all of the
			                    'Date'[Day Type],       -- filter-safe columns
			                    'Date'[Week Day],       -- to get the last day with data
			                    'Date'[WeekDayNumber] -- selected in the report
			                ),
			                'Date'[Fiscal YearMonthNumber] = LastMonthSelected,
			                'Date'[DateWithSales] = TRUE 
			            )
			        )
			    VAR PreviousYearMonth = 
			        LastMonthSelected - 1
			    VAR Result = 
			        CALCULATE (
			            [Adjusted Profit (LCY)],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearMonthNumber] = PreviousYearMonth,
			            'Date'[Fiscal DayOfMonthNumber] <= LastDayOfMonthWithSales
			        )
			    RETURN 
			        Result
			)
			```
		formatString: #,0.00
		displayFolder: Profit\Gross Profit\Period-to-date growth
		lineageTag: dc005c9a-648a-4377-b89b-78b361821cd6

	measure 'Gross Profit MOMTD % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Gross Profit MOMTD (Fiscal)],
			    [Gross Profit PMTD (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit\Period-to-date growth
		lineageTag: 32c6a5cc-027d-41b6-b48a-b42ac897105f

	measure 'Gross Profit MOMTD (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Gross Profit MTD (Fiscal)]
			VAR ValuePreviousPeriod = [Gross Profit PMTD (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Profit\Gross Profit\Period-to-date growth
		lineageTag: 10f82239-0903-4c2d-922b-13b4c4afe170

	measure 'Gross Profit MAT (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates], 
			    VAR LastDayMAT =  MAX ( 'Date'[Sequential365DayNumber] )
			    VAR FirstDayMAT = INT ( EDATE ( LastDayMAT + 1, -12 ) )
			    VAR Result = 
			        CALCULATE ( 
			            [Adjusted Profit (LCY)], 
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Sequential365DayNumber] >= FirstDayMAT 
			                && 'Date'[Sequential365DayNumber] <= LastDayMAT
			        ) 
			    RETURN
			        Result
			)
			
			```
		formatString: #,0.00
		displayFolder: Profit\Gross Profit\Moving annual total growth
		lineageTag: 29347c1a-d60c-4a93-a01f-c3c03e19ee7c

	measure 'Gross Profit PYMAT (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates], 
			    VAR LastDayAvailable = MAX ( 'Date'[Sequential365DayNumber] )
			    VAR LastDayMAT =  INT ( EDATE ( LastDayAvailable, -12 ) )
			    VAR FirstDayMAT = INT ( EDATE ( LastDayAvailable + 1, -24 ) )
			    VAR Result = 
			        CALCULATE ( 
			            [Adjusted Profit (LCY)], 
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Sequential365DayNumber] >= FirstDayMAT 
			                && 'Date'[Sequential365DayNumber] <= LastDayMAT
			        ) 
			    RETURN 
			        Result
			)
			```
		formatString: #,0.00
		displayFolder: Profit\Gross Profit\Moving annual total growth
		lineageTag: 4b39703e-9733-40a8-88a9-d215674f57bd

	measure 'Gross Profit MATG (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Gross Profit MAT (Fiscal)]
			VAR ValuePreviousPeriod = [Gross Profit PYMAT (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Profit\Gross Profit\Moving annual total growth
		lineageTag: 89819ca0-1d84-4012-bfa8-9edff5af5266

	measure 'Gross Profit MATG % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Gross Profit MATG (Fiscal)],
			    [Gross Profit PYMAT (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit\Moving annual total growth
		lineageTag: 2d2a3718-a944-4348-b5e4-2ffa0016a04f

	measure 'Gross Profit MAT (364) (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates], 
			    VAR LastDayMAT =  MAX ( 'Date'[Sequential365DayNumber] )
			    VAR FirstDayMAT = LastDayMAT - 363
			    VAR Result = 
			        CALCULATE ( 
			            [Adjusted Profit (LCY)], 
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Sequential365DayNumber] >= FirstDayMAT 
			                && 'Date'[Sequential365DayNumber] <= LastDayMAT
			        ) 
			    RETURN
			        Result
			)
			
			```
		formatString: #,0.00
		displayFolder: Profit\Gross Profit\Moving annual total growth
		lineageTag: 4929f159-2466-4ffa-a00d-6b77432a9f02

	measure 'Gross Profit PYMAT (364) (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates], 
			    VAR LastDayAvailable = MAX ( 'Date'[Sequential365DayNumber] )
			    VAR LastDayMAT = LastDayAvailable - 364
			    VAR FirstDayMAT = LastDayMAT - 363
			    VAR Result = 
			        CALCULATE ( 
			            [Adjusted Profit (LCY)], 
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Sequential365DayNumber] >= FirstDayMAT 
			                && 'Date'[Sequential365DayNumber] <= LastDayMAT
			        ) 
			    RETURN
			        Result
			)
			
			```
		formatString: #,0.00
		displayFolder: Profit\Gross Profit\Moving annual total growth
		lineageTag: 3becd4da-4ce2-4740-a06a-1fc4e1537d1e

	measure 'Gross Profit PYC (Fiscal)' = ```
			
			IF (
			    [ShowValueForDates] && HASONEVALUE ( 'Date'[Fiscal YearNumber] ),
			    VAR PreviousFiscalYear = MAX ( 'Date'[Fiscal YearNumber] ) - 1
			    VAR Result =
			        CALCULATE (
			            [Adjusted Profit (LCY)],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearNumber] = PreviousFiscalYear
			        )
			    RETURN
			        Result
			)
			
			```
		formatString: #,0.00
		displayFolder: Profit\Gross Profit\Period-to-date over full previous period
		lineageTag: f410b702-86a9-4315-be50-2dd9bb146e46

	measure 'Gross Profit YTDOPY (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Gross Profit YTD (Fiscal)]
			VAR ValuePreviousPeriod = [Gross Profit PYC (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Profit\Gross Profit\Period-to-date over full previous period
		lineageTag: 8c784385-cbef-4ca1-94f8-b21a1c400e2f

	measure 'Gross Profit YTDOPY % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Gross Profit YTDOPY (Fiscal)],
			    [Gross Profit PYC (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit\Period-to-date over full previous period
		lineageTag: 192c10d3-e6ba-4d24-ac8d-ddbab16ebd57

	measure 'Gross Profit PQC (Fiscal)' =
			
			IF (
			    [ShowValueForDates] && HASONEVALUE ( 'Date'[Fiscal YearQuarterNumber] ),
			    VAR PreviousFiscalYearQuarter = MAX ( 'Date'[Fiscal YearQuarterNumber] ) - 1
			    VAR Result =
			        CALCULATE (
			            [Adjusted Profit (LCY)],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearQuarterNumber] = PreviousFiscalYearQuarter
			        )
			    RETURN
			        Result
			)
		formatString: #,0.00
		displayFolder: Profit\Gross Profit\Period-to-date over full previous period
		lineageTag: 20cf8890-2e3c-4dce-9ee5-85e219ff6312

	measure 'Gross Profit QTDOPQ (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Gross Profit QTD (Fiscal)]
			VAR ValuePreviousPeriod = [Gross Profit PQC (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Profit\Gross Profit\Period-to-date over full previous period
		lineageTag: 5eaf91b3-ab72-455d-9a90-9aca941e6d41

	measure 'Gross Profit QTDOPQ % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Gross Profit QTDOPQ (Fiscal)],
			    [Gross Profit PQC (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit\Period-to-date over full previous period
		lineageTag: 1d51bc0e-d6a5-4afd-9c8f-f90892a57f02

	measure 'Gross Profit PMC (Fiscal)' = ```
			
			IF (
			    [ShowValueForDates] && HASONEVALUE ( 'Date'[Fiscal YearMonthNumber] ),
			    VAR PreviousFiscalYearMonth = MAX ( 'Date'[Fiscal YearMonthNumber] ) - 1
			    VAR Result =
			        CALCULATE (
			            [Adjusted Profit (LCY)],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearMonthNumber] = PreviousFiscalYearMonth
			        )
			    RETURN
			        Result
			)
			
			```
		formatString: #,0.00
		displayFolder: Profit\Gross Profit\Period-to-date over full previous period
		lineageTag: 9dbf1215-54b8-4dde-8a35-5a8ec4d23b25

	measure 'Gross Profit MTDOPM (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Gross Profit MTD (Fiscal)]
			VAR ValuePreviousPeriod = [Gross Profit PMC (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: #,0.00
		displayFolder: Profit\Gross Profit\Period-to-date over full previous period
		lineageTag: fba3d85e-8008-4895-8698-b58379e1b9cf

	measure 'Gross Profit MTDOPM % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Gross Profit MTDOPM (Fiscal)],
			    [Gross Profit PMC (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit\Period-to-date over full previous period
		lineageTag: 6d31015d-28a0-4e95-a3d1-d95633d60299

	measure 'Gross Profit AVG 30D (Fiscal)' = ```
			
			IF (
			    [ShowValueForDates],
			    VAR LastDayMAT =
			        MAX ( 'Date'[Sequential365DayNumber] )
			    VAR FirstDayMAT = LastDayMAT - 29
			    VAR Period30D =
			        CALCULATETABLE (
			            VALUES ( 'Date'[Sequential365DayNumber] ),
			            ALLEXCEPT (
			                'Date',
			                'Date'[Day Type],
			                'Date'[Week Day]
			            ),
			            'Date'[Sequential365DayNumber] >= FirstDayMAT
			                && 'Date'[Sequential365DayNumber] <= LastDayMAT,
			            'Date'[DateWithSales] = TRUE
			        )
			    VAR FirstDayWithData =
			        CALCULATE (
			            INT (
			                MINX (
			                    {
			                        MIN ( 'Sales Value Entries'[postingDate] ),
			                        MIN ( 'Sales Invoice Lines'[postingDate] ),
			                        MIN ( 'Sales Credit Lines'[postingDate] ),
			                        MIN ( 'Project Ledger Entries'[postingDate] )
			                    },
			                    [Value]
			                )
			            ),
			            REMOVEFILTERS ()
			        )
			    VAR FirstDayInPeriod =
			        MINX (
			            Period30D,
			            'Date'[Sequential365DayNumber]
			        )
			    VAR Result =
			        IF (
			            FirstDayWithData <= FirstDayInPeriod,
			            CALCULATE (
			                AVERAGEX ( Period30D, [Adjusted Profit (LCY)] ),
			                REMOVEFILTERS ( 'Date' )
			            )
			        )
			    RETURN
			        Result
			)
			
			
			```
		formatString: #,0.00
		displayFolder: Profit\Gross Profit\Moving averages
		lineageTag: 45974573-cd47-4625-a2dd-ec2504baf769

	measure 'Gross Profit AVG 3M (Fiscal)' =
			
			IF (
			    [ShowValueForDates],
			    VAR LastDayMAT =
			        MAX ( 'Date'[Sequential365DayNumber] )
			    VAR FirstDayMAT =
			        INT ( EDATE ( LastDayMAT + 1, -3 ) )
			    VAR Period3M =
			       CALCULATETABLE (
			            VALUES ( 'Date'[Sequential365DayNumber] ),
			            ALLEXCEPT (
			                'Date',
			                'Date'[Day Type],
			                'Date'[Week Day]
			            ),
			            'Date'[Sequential365DayNumber] >= FirstDayMAT
			                && 'Date'[Sequential365DayNumber] <= LastDayMAT,
			            'Date'[DateWithSales] = TRUE
			        )
			    VAR FirstDayWithData =
			        CALCULATE (
			            INT (
			                MINX (
			                    {
			                        MIN ( 'Sales Value Entries'[postingDate] ),
			                        MIN ( 'Sales Invoice Lines'[postingDate] ),
			                        MIN ( 'Sales Credit Lines'[postingDate] ),
			                        MIN ( 'Project Ledger Entries'[postingDate] )
			                    },
			                    [Value]
			                )
			            ),
			            REMOVEFILTERS ()
			        )
			    VAR FirstDayInPeriod =
			        MINX (
			            Period3M,
			            'Date'[Sequential365DayNumber]
			        )
			    VAR Result =
			        IF (
			            FirstDayWithData <= FirstDayInPeriod,
			            CALCULATE (
			                AVERAGEX ( Period3M, [Adjusted Profit (LCY)] ),
			                REMOVEFILTERS ( 'Date' )
			            )
			        )
			    RETURN
			        Result
			)
		formatString: #,0.00
		displayFolder: Profit\Gross Profit\Moving averages
		lineageTag: 00875ee9-500f-42e9-9cdb-b651c6c68914

	measure 'Gross Profit AVG 1Y (Fiscal)' =
			
			IF (
			    [ShowValueForDates],
			    VAR LastDayMAT =
			        MAX ( 'Date'[Sequential365DayNumber] )
			    VAR FirstDayMAT =
			        INT ( EDATE ( LastDayMAT + 1, -12 ) )
			    VAR Period1Y =
			        CALCULATETABLE (
			            VALUES ( 'Date'[Sequential365DayNumber] ),
			            ALLEXCEPT (
			                'Date',
			                'Date'[Day Type],
			                'Date'[Week Day]
			            ),
			            'Date'[Sequential365DayNumber] >= FirstDayMAT
			                && 'Date'[Sequential365DayNumber] <= LastDayMAT,
			            'Date'[DateWithSales] = TRUE
			        )
			    VAR FirstDayWithData =
			        CALCULATE (
			            INT (
			                MINX (
			                    {
			                        MIN ( 'Sales Value Entries'[postingDate] ),
			                        MIN ( 'Sales Invoice Lines'[postingDate] ),
			                        MIN ( 'Sales Credit Lines'[postingDate] ),
			                        MIN ( 'Project Ledger Entries'[postingDate] )
			                    },
			                    [Value]
			                )
			            ),
			            REMOVEFILTERS ()
			        )
			    VAR FirstDayInPeriod =
			        MINX (
			            Period1Y,
			            'Date'[Sequential365DayNumber]
			        )
			    VAR Result =
			        IF (
			            FirstDayWithData <= FirstDayInPeriod,
			            CALCULATE (
			                AVERAGEX ( Period1Y, [Adjusted Profit (LCY)] ),
			                REMOVEFILTERS ( 'Date' )
			            )
			        )
			    RETURN
			        Result
			)
		displayFolder: Profit\Gross Profit\Moving averages
		lineageTag: 4bd9fbc7-9c34-4fa9-bceb-8d9eca670d70

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure 'Gross Profit Margin AVG 30D (Fiscal)' = ```
			
			IF (
			    [ShowValueForDates],
			    VAR LastDayMAT =
			        MAX ( 'Date'[Sequential365DayNumber] )
			    VAR FirstDayMAT = LastDayMAT - 29
			    VAR Period30D =
			        CALCULATETABLE (
			            VALUES ( 'Date'[Sequential365DayNumber] ),
			            ALLEXCEPT (
			                'Date',
			                'Date'[Day Type],
			                'Date'[Week Day]
			            ),
			            'Date'[Sequential365DayNumber] >= FirstDayMAT
			                && 'Date'[Sequential365DayNumber] <= LastDayMAT,
			            'Date'[DateWithSales] = TRUE
			        )
			    VAR FirstDayWithData =
			            CALCULATE (
			                INT (
			                    MINX (
			                        {
			                            MIN ( 'Sales Value Entries'[postingDate] ),
			                            MIN ( 'Sales Invoice Lines'[postingDate] ),
			                            MIN ( 'Sales Credit Lines'[postingDate] ),
			                            MIN ( 'Project Ledger Entries'[postingDate] )
			                        },
			                        [Value]
			                    )
			                ),
			                REMOVEFILTERS ()
			            )
			    VAR FirstDayInPeriod =
			        MINX (
			            Period30D,
			            'Date'[Sequential365DayNumber]
			        )
			    VAR Result =
			        IF (
			            FirstDayWithData <= FirstDayInPeriod,
			            CALCULATE (
			                AVERAGEX ( Period30D, [Adjusted Profit Margin] ),
			                REMOVEFILTERS ( 'Date' )
			            )
			        )
			    RETURN
			        Result
			)
			
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Moving averages
		lineageTag: 533aff33-7274-4e61-9d1b-12b33221e38f

	measure 'Gross Profit Margin AVG 3M (Fiscal)' =
			
			IF (
			    [ShowValueForDates],
			    VAR LastDayMAT =
			        MAX ( 'Date'[Sequential365DayNumber] )
			    VAR FirstDayMAT =
			        INT ( EDATE ( LastDayMAT + 1, -3 ) )
			    VAR Period3M =
			       CALCULATETABLE (
			            VALUES ( 'Date'[Sequential365DayNumber] ),
			            ALLEXCEPT (
			                'Date',
			                'Date'[Day Type],
			                'Date'[Week Day]
			            ),
			            'Date'[Sequential365DayNumber] >= FirstDayMAT
			                && 'Date'[Sequential365DayNumber] <= LastDayMAT,
			            'Date'[DateWithSales] = TRUE
			        )
			 VAR FirstDayWithData =
			        CALCULATE (
			            INT (
			                MINX (
			                    {
			                        MIN ( 'Sales Value Entries'[postingDate] ),
			                        MIN ( 'Sales Invoice Lines'[postingDate] ),
			                        MIN ( 'Sales Credit Lines'[postingDate] ),
			                        MIN ( 'Project Ledger Entries'[postingDate] )
			                    },
			                    [Value]
			                )
			            ),
			            REMOVEFILTERS ()
			        )
			    VAR FirstDayInPeriod =
			        MINX (
			            Period3M,
			            'Date'[Sequential365DayNumber]
			        )
			    VAR Result =
			        IF (
			            FirstDayWithData <= FirstDayInPeriod,
			            CALCULATE (
			                AVERAGEX ( Period3M, [Adjusted Profit Margin] ),
			                REMOVEFILTERS ( 'Date' )
			            )
			        )
			    RETURN
			        Result
			)
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Moving averages
		lineageTag: 5c142740-9611-40bc-8c86-2332adc01663

	measure 'Gross Profit Margin AVG 1Y (Fiscal)' =
			
			IF (
			    [ShowValueForDates],
			    VAR LastDayMAT =
			        MAX ( 'Date'[Sequential365DayNumber] )
			    VAR FirstDayMAT =
			        INT ( EDATE ( LastDayMAT + 1, -12 ) )
			    VAR Period1Y =
			        CALCULATETABLE (
			            VALUES ( 'Date'[Sequential365DayNumber] ),
			            ALLEXCEPT (
			                'Date',
			                'Date'[Day Type],
			                'Date'[Week Day]
			            ),
			            'Date'[Sequential365DayNumber] >= FirstDayMAT
			                && 'Date'[Sequential365DayNumber] <= LastDayMAT,
			            'Date'[DateWithSales] = TRUE
			        )
			    VAR FirstDayWithData =
			            CALCULATE (
			                INT (
			                    MINX (
			                        {
			                            MIN ( 'Sales Value Entries'[postingDate] ),
			                            MIN ( 'Sales Invoice Lines'[postingDate] ),
			                            MIN ( 'Sales Credit Lines'[postingDate] ),
			                            MIN ( 'Project Ledger Entries'[postingDate] )
			                        },
			                        [Value]
			                    )
			                ),
			                REMOVEFILTERS ()
			            )
			    VAR FirstDayInPeriod =
			        MINX (
			            Period1Y,
			            'Date'[Sequential365DayNumber]
			        )
			    VAR Result =
			        IF (
			            FirstDayWithData <= FirstDayInPeriod,
			            CALCULATE (
			                AVERAGEX ( Period1Y, [Adjusted Profit Margin] ),
			                REMOVEFILTERS ( 'Date' )
			            )
			        )
			    RETURN
			        Result
			)
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Moving averages
		lineageTag: c8e26b37-92a9-48b9-8a6a-15513d799b2d

	measure 'Gross Profit Margin PYC (Fiscal)' = ```
			
			IF (
			    [ShowValueForDates] && HASONEVALUE ( 'Date'[Fiscal YearNumber] ),
			    VAR PreviousFiscalYear = MAX ( 'Date'[Fiscal YearNumber] ) - 1
			    VAR Result =
			        CALCULATE (
			            [Adjusted Profit Margin],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearNumber] = PreviousFiscalYear
			        )
			    RETURN
			        Result
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Period-to-date over full previous period
		lineageTag: 016d14a9-6af0-44ef-adba-bf63c56a0495

	measure 'Gross Profit Margin YTDOPY (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Gross Profit Margin YTD (Fiscal)]
			VAR ValuePreviousPeriod = [Gross Profit Margin PYC (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Period-to-date over full previous period
		lineageTag: 3c7c9e69-b836-42e0-a2c8-18ca1213c879

	measure 'Gross Profit Margin YTDOPY % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Gross Profit Margin YTDOPY (Fiscal)],
			    [Gross Profit Margin PYC (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Period-to-date over full previous period
		lineageTag: 2824884b-bdc0-432b-aa2e-3e8f8ee15abe

	measure 'Gross Profit Margin PQC (Fiscal)' =
			
			IF (
			    [ShowValueForDates] && HASONEVALUE ( 'Date'[Fiscal YearQuarterNumber] ),
			    VAR PreviousFiscalYearQuarter = MAX ( 'Date'[Fiscal YearQuarterNumber] ) - 1
			    VAR Result =
			        CALCULATE (
			            [Adjusted Profit Margin],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearQuarterNumber] = PreviousFiscalYearQuarter
			        )
			    RETURN
			        Result
			)
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Period-to-date over full previous period
		lineageTag: 9ddf5a62-13fd-4265-963b-67e01e68fee4

	measure 'Gross Profit Margin QTDOPQ (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Gross Profit Margin QTD (Fiscal)]
			VAR ValuePreviousPeriod = [Gross Profit Margin PQC (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Period-to-date over full previous period
		lineageTag: 9dfc5094-9e54-4f82-b65c-82a2014e43e7

	measure 'Gross Profit Margin QTDOPQ % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Gross Profit Margin QTDOPQ (Fiscal)],
			    [Gross Profit Margin PQC (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Period-to-date over full previous period
		lineageTag: 75d71a2c-b63f-43d1-a54b-bc3751fabb2e

	measure 'Gross Profit Margin PMC (Fiscal)' = ```
			
			IF (
			    [ShowValueForDates] && HASONEVALUE ( 'Date'[Fiscal YearMonthNumber] ),
			    VAR PreviousFiscalYearMonth = MAX ( 'Date'[Fiscal YearMonthNumber] ) - 1
			    VAR Result =
			        CALCULATE (
			            [Adjusted Profit Margin],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearMonthNumber] = PreviousFiscalYearMonth
			        )
			    RETURN
			        Result
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Period-to-date over full previous period
		lineageTag: 8503ea42-cdd0-4197-b544-ca879caa241b

	measure 'Gross Profit Margin MTDOPM (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Gross Profit Margin MTD (Fiscal)]
			VAR ValuePreviousPeriod = [Gross Profit Margin PMC (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Period-to-date over full previous period
		lineageTag: a3846c3e-cef6-4b74-ad71-dd3014714957

	measure 'Gross Profit Margin MTDOPM % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Gross Profit Margin MTDOPM (Fiscal)],
			    [Gross Profit Margin PMC (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Period-to-date over full previous period
		lineageTag: e8eceb08-e52c-4f00-ae39-24b37f27c7fd

	measure 'Gross Profit Margin MAT (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates], 
			    VAR LastDayMAT =  MAX ( 'Date'[Sequential365DayNumber] )
			    VAR FirstDayMAT = INT ( EDATE ( LastDayMAT + 1, -12 ) )
			    VAR Result = 
			        CALCULATE ( 
			            [Adjusted Profit Margin], 
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Sequential365DayNumber] >= FirstDayMAT 
			                && 'Date'[Sequential365DayNumber] <= LastDayMAT
			        ) 
			    RETURN
			        Result
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Moving annual total growth
		lineageTag: 86af7dd7-ce8a-44d9-84e2-cd7f98a30076

	measure 'Gross Profit Margin PYMAT (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates], 
			    VAR LastDayAvailable = MAX ( 'Date'[Sequential365DayNumber] )
			    VAR LastDayMAT =  INT ( EDATE ( LastDayAvailable, -12 ) )
			    VAR FirstDayMAT = INT ( EDATE ( LastDayAvailable + 1, -24 ) )
			    VAR Result = 
			        CALCULATE ( 
			            [Adjusted Profit Margin], 
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Sequential365DayNumber] >= FirstDayMAT 
			                && 'Date'[Sequential365DayNumber] <= LastDayMAT
			        ) 
			    RETURN 
			        Result
			)
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Moving annual total growth
		lineageTag: a213c5c0-1a74-4fc7-845c-7eba54ff653b

	measure 'Gross Profit Margin MATG (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Gross Profit Margin MAT (Fiscal)]
			VAR ValuePreviousPeriod = [Gross Profit Margin PYMAT (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Moving annual total growth
		lineageTag: ea4e8ed7-4346-4ce5-a024-a83b3e0df39b

	measure 'Gross Profit Margin MATG % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Gross Profit Margin MATG (Fiscal)],
			    [Gross Profit Margin PYMAT (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Moving annual total growth
		lineageTag: ebffcdbd-8e21-4abb-b52a-d64b86b1b2ca

	measure 'Gross Profit Margin MAT (364) (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates], 
			    VAR LastDayMAT =  MAX ( 'Date'[Sequential365DayNumber] )
			    VAR FirstDayMAT = LastDayMAT - 363
			    VAR Result = 
			        CALCULATE ( 
			            [Adjusted Profit Margin], 
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Sequential365DayNumber] >= FirstDayMAT 
			                && 'Date'[Sequential365DayNumber] <= LastDayMAT
			        ) 
			    RETURN
			        Result
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Moving annual total growth
		lineageTag: 17f47ffb-e375-4077-9638-8075de1ea370

	measure 'Gross Profit Margin PYMAT (364) (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates], 
			    VAR LastDayAvailable = MAX ( 'Date'[Sequential365DayNumber] )
			    VAR LastDayMAT = LastDayAvailable - 364
			    VAR FirstDayMAT = LastDayMAT - 363
			    VAR Result = 
			        CALCULATE ( 
			            [Adjusted Profit Margin], 
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Sequential365DayNumber] >= FirstDayMAT 
			                && 'Date'[Sequential365DayNumber] <= LastDayMAT
			        ) 
			    RETURN
			        Result
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Moving annual total growth
		lineageTag: 013e8b36-3792-411f-ba5e-f49321545338

	measure 'Gross Profit Margin PYTD (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates],
			    VAR PreviousFiscalYear = MAX ( 'Date'[Fiscal YearNumber] ) - 1
			    VAR LastDayOfFiscalYearAvailable = 
			        CALCULATE ( 
			            MAX ( 'Date'[Fiscal DayOfYearNumber] ),
			            REMOVEFILTERS (                -- Remove filters from
			                'Date'[Day Type],       -- filter-safe columns
			                'Date'[Week Day],       -- to get the last day with data
			                'Date'[WeekDayNumber] -- selected in the report
			            ),
			            'Date'[DateWithSales] = TRUE 
			        )
			    VAR Result =
			        CALCULATE (
			            [Adjusted Profit Margin],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearNumber] = PreviousFiscalYear,
			            'Date'[Fiscal DayOfYearNumber] <= LastDayOfFiscalYearAvailable,
			            'Date'[DateWithSales] = TRUE 
			        )
			    RETURN
			        Result
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Period-to-date growth
		lineageTag: 827d9316-a5af-4d9e-874c-f667ac8b0cbf

	measure 'Gross Profit Margin PQTD (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates],
			    VAR LastMonthSelected = 
			        MAX ( 'Date'[Fiscal YearMonthNumber] )
			    VAR DaysOnLastMonth = 
			        CALCULATE (
			            COUNTROWS ( 'Date' ),
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearMonthNumber] = LastMonthSelected
			        )
			    VAR DaysLastMonthSelected = 
			        CALCULATE ( 
			            COUNTROWS ( 'Date' ), 
			            'Date'[DateWithSales] = TRUE,
			            'Date'[Fiscal YearMonthNumber] = LastMonthSelected
			        )
			    VAR LastDayOfMonthWithSales =  
			        MAX ( 
			            -- End of month of any month
			            31 * (DaysOnLastMonth = DaysLastMonthSelected),  
			            -- or last day selected with data 
			            CALCULATE ( 
			                MAX ( 'Date'[Fiscal DayOfMonthNumber] ),
			                REMOVEFILTERS (                -- Remove filters from all of the
			                    'Date'[Day Type],       -- filter-safe columns
			                    'Date'[Week Day],       -- to get the last day with data
			                    'Date'[WeekDayNumber] -- selected in the report
			                ),
			                'Date'[Fiscal YearMonthNumber] = LastMonthSelected,
			                'Date'[DateWithSales] = TRUE 
			            )
			        )
			    VAR LastMonthInQuarterWithSales = 
			        CALCULATE ( 
			            MAX ( 'Date'[Fiscal MonthInQuarterNumber] ),
			            REMOVEFILTERS (                -- Remove filters from all of the
			                'Date'[Day Type],       -- filter-safe columns
			                'Date'[Week Day],       -- to get the last day with data
			                'Date'[WeekDayNumber] -- selected in the report
			            ),
			            'Date'[DateWithSales] = TRUE 
			        )
			    VAR PreviousFiscalYearQuarter = 
			        MAX ( 'Date'[Fiscal YearQuarterNumber] ) - 1
			    VAR FilterQTD = 
			        FILTER (
			            ALL ( 'Date'[Fiscal MonthInQuarterNumber], 'Date'[Fiscal DayOfMonthNumber] ),
			            ISONORAFTER ( 
			                'Date'[Fiscal MonthInQuarterNumber], LastMonthInQuarterWithSales, DESC,
			                'Date'[Fiscal DayOfMonthNumber], LastDayOfMonthWithSales, DESC
			            )
			        )
			    VAR Result =
			        CALCULATE (
			            [Adjusted Profit Margin],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearQuarterNumber] = PreviousFiscalYearQuarter,
			            FilterQTD
			        )
			    RETURN
			        Result
			)
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Period-to-date growth
		lineageTag: 58f25a1e-e9bc-40f6-b8dc-e3a114549477

	measure 'Gross Profit Margin YOYTD (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Gross Profit Margin YTD (Fiscal)]
			VAR ValuePreviousPeriod = [Gross Profit Margin PYTD (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Period-to-date growth
		lineageTag: 5426bb09-9a3f-4241-b231-e8f8a62a744e

	measure 'Gross Profit Margin YOYTD % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Gross Profit Margin YOYTD (Fiscal)],
			    [Gross Profit Margin PYTD (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Period-to-date growth
		lineageTag: 82ab7081-4b33-4ba4-ac83-22d4653cbbbb

	measure 'Gross Profit Margin QOQTD (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Gross Profit Margin QTD (Fiscal)]
			VAR ValuePreviousPeriod = [Gross Profit Margin PQTD (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Period-to-date growth
		lineageTag: af7a8f3d-5c7e-407d-85f8-d6b19501fa64

	measure 'Gross Profit Margin QOQTD % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Gross Profit Margin QOQTD (Fiscal)],
			    [Gross Profit Margin PQTD (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Period-to-date growth
		lineageTag: 138da530-3fa9-4701-aa9c-500690ba82ef

	measure 'Gross Profit Margin PMTD (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates],
			    VAR LastMonthSelected = 
			        MAX ( 'Date'[Fiscal YearMonthNumber] )
			    VAR DaysOnLastMonth = 
			        CALCULATE (
			            COUNTROWS ( 'Date' ),
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearMonthNumber] = LastMonthSelected
			        )
			    VAR DaysLastMonthSelected = 
			        CALCULATE ( 
			            COUNTROWS ( 'Date' ), 
			            'Date'[DateWithSales] = TRUE,
			            'Date'[Fiscal YearMonthNumber] = LastMonthSelected
			        )
			    VAR LastDayOfMonthWithSales =  
			        MAX ( 
			            -- End of month of any month
			            31 * (DaysOnLastMonth = DaysLastMonthSelected),  
			            -- or last day selected with data 
			            CALCULATE ( 
			                MAX ( 'Date'[Fiscal DayOfMonthNumber] ),
			                REMOVEFILTERS (                -- Remove filters from all of the
			                    'Date'[Day Type],       -- filter-safe columns
			                    'Date'[Week Day],       -- to get the last day with data
			                    'Date'[WeekDayNumber] -- selected in the report
			                ),
			                'Date'[Fiscal YearMonthNumber] = LastMonthSelected,
			                'Date'[DateWithSales] = TRUE 
			            )
			        )
			    VAR PreviousYearMonth = 
			        LastMonthSelected - 1
			    VAR Result = 
			        CALCULATE (
			            [Adjusted Profit Margin],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal YearMonthNumber] = PreviousYearMonth,
			            'Date'[Fiscal DayOfMonthNumber] <= LastDayOfMonthWithSales
			        )
			    RETURN 
			        Result
			)
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Period-to-date growth
		lineageTag: 686e4fdb-3223-4b28-8b89-e0d11dafa10e

	measure 'Gross Profit Margin MOMTD % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Gross Profit Margin MOMTD (Fiscal)],
			    [Gross Profit Margin PMTD (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Period-to-date growth
		lineageTag: e7601d8c-fd7e-4463-84cc-04e0acc2ebbf

	measure 'Gross Profit Margin MOMTD (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Gross Profit Margin MTD (Fiscal)]
			VAR ValuePreviousPeriod = [Gross Profit Margin PMTD (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Period-to-date growth
		lineageTag: b1a597ab-aef4-4461-9d0e-93ae25234dca

	measure 'Gross Profit Margin PY (Fiscal)' = ```
			
			VAR MonthsOffset = 12
			RETURN IF (
			    [ShowValueForDates],
			    SUMX (
			        SUMMARIZE ( 'Date', 'Date'[Fiscal YearMonthNumber] ),
			        VAR CurrentYearMonthNumber = 'Date'[Fiscal YearMonthNumber]
			        VAR PreviousYearMonthNumber = CurrentYearMonthNumber - MonthsOffset
			        VAR DaysOnMonth = 
			            CALCULATE (
			                COUNTROWS ( 'Date' ),
			                ALLEXCEPT ( 
			                    'Date', 
			                    'Date'[Fiscal YearMonthNumber],  -- Year Month granularity
			                    'Date'[Day Type],        -- Filter-safe Date column
			                    'Date'[WeekDayNumber]         -- Filter-safe Date column
			                )
			            )
			        VAR DaysSelected = 
			            CALCULATE ( 
			                COUNTROWS ( 'Date' ), 
			                'Date'[DateWithSales] = TRUE 
			            )
			        RETURN IF (
			            DaysOnMonth = DaysSelected,
			
			            -- Selection of all days in the month
			            CALCULATE (
			                [Adjusted Profit Margin],
			                ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[WeekDayNumber] ),
			                'Date'[Fiscal YearMonthNumber] = PreviousYearMonthNumber
			            ),
			            
			            -- Partial selection of days in a month
			            CALCULATE (
			                [Adjusted Profit Margin],
			                ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[WeekDayNumber] ),
			                'Date'[Fiscal YearMonthNumber] = PreviousYearMonthNumber,
			                CALCULATETABLE ( 
			                    VALUES ( 'Date'[Fiscal DayOfMonthNumber] ),
			                    ALLEXCEPT ( 'Date', 'Date'[Fiscal DayOfMonthNumber], 'Date'[Date] ),
			                    'Date'[Fiscal YearMonthNumber] = CurrentYearMonthNumber,
			                    'Date'[DateWithSales] = TRUE 
			                )
			            )
			        )
			    )
			)
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Period-over-period growth
		lineageTag: f42482c7-0dfc-45a9-aacc-95c232a60da1

	measure 'Gross Profit Margin YOY % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Gross Profit Margin YOY (Fiscal)],
			    [Gross Profit Margin PY (Fiscal)]
			)
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Period-over-period growth
		lineageTag: d6294714-3eff-400f-9e4c-4848faef167d

	measure 'Gross Profit Margin YOY (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Adjusted Profit Margin]
			VAR ValuePreviousPeriod = [Gross Profit Margin PY (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Period-over-period growth
		lineageTag: d212fc00-1497-4df4-a34e-5deae829c5fc

	measure 'Gross Profit Margin PQ (Fiscal)' = ```
			
			VAR MonthsOffset = 3
			RETURN IF (
			    [ShowValueForDates],
			    SUMX (
			        SUMMARIZE ( 'Date', 'Date'[Fiscal YearMonthNumber] ),
			        VAR CurrentYearMonthNumber = 'Date'[Fiscal YearMonthNumber]
			        VAR PreviousYearMonthNumber = CurrentYearMonthNumber - MonthsOffset
			        VAR DaysOnMonth = 
			            CALCULATE (
			                COUNTROWS ( 'Date' ),
			                ALLEXCEPT ( 'Date', 'Date'[Fiscal YearMonthNumber], 'Date'[Day Type], 'Date'[Week Day] )
			            )
			        VAR DaysSelected = 
			            CALCULATE ( 
			                COUNTROWS ( 'Date' ), 
			                'Date'[DateWithSales] = TRUE 
			            )
			        RETURN IF (
			            DaysOnMonth = DaysSelected,
			
			            -- Selection of all days in the month
			            CALCULATE (
			                [Adjusted Profit Margin],
			                ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			                'Date'[Fiscal YearMonthNumber] = PreviousYearMonthNumber
			            ),
			            
			            -- Partial selection of days in a month
			            CALCULATE (
			                [Adjusted Profit Margin],
			                ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			                'Date'[Fiscal YearMonthNumber] = PreviousYearMonthNumber,
			                CALCULATETABLE ( 
			                    VALUES ( 'Date'[Fiscal DayOfMonthNumber] ),
			                    ALLEXCEPT ( 'Date', 'Date'[Fiscal DayOfMonthNumber], 'Date'[Date] ),
			                    'Date'[Fiscal YearMonthNumber] = CurrentYearMonthNumber,
			                    'Date'[DateWithSales] = TRUE 
			                )
			            )
			        )
			    )
			)
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Period-over-period growth
		lineageTag: c3ac5203-3e9d-4d45-b330-12f14f7df6bb

	measure 'Gross Profit Margin QOQ (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Adjusted Profit Margin]
			VAR ValuePreviousPeriod = [Gross Profit Margin PQ (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Period-over-period growth
		lineageTag: 01fcc0c8-5ff5-411e-a06b-73ce8fd8b917

	measure 'Gross Profit Margin QOQ % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Gross Profit Margin QOQ (Fiscal)],
			    [Gross Profit Margin PQ (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Period-over-period growth
		lineageTag: 15e8887f-f9ef-44ac-b7b1-2d60196632b9

	measure 'Gross Profit Margin PM (Fiscal)' = ```
			
			VAR MonthsOffset = 1
			RETURN IF (
			    [ShowValueForDates],
			    SUMX (
			        SUMMARIZE ( 'Date', 'Date'[Fiscal YearMonthNumber] ),
			        VAR CurrentYearMonthNumber = 'Date'[Fiscal YearMonthNumber]
			        VAR PreviousYearMonthNumber = CurrentYearMonthNumber - MonthsOffset
			        VAR DaysOnMonth = 
			            CALCULATE (
			                COUNTROWS ( 'Date' ),
			                ALLEXCEPT ( 'Date', 'Date'[Fiscal YearMonthNumber], 'Date'[Day Type], 'Date'[Week Day] )
			            )
			        VAR DaysSelected = 
			            CALCULATE ( 
			                COUNTROWS ( 'Date' ), 
			                'Date'[DateWithSales] = TRUE 
			            )
			        RETURN IF (
			            DaysOnMonth = DaysSelected,
			
			            -- Selection of all days in the month
			            CALCULATE (
			                [Adjusted Profit Margin],
			                ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			                'Date'[Fiscal YearMonthNumber] = PreviousYearMonthNumber
			            ),
			            
			            -- Partial selection of days in a month
			            CALCULATE (
			                [Adjusted Profit Margin],
			                ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			                'Date'[Fiscal YearMonthNumber] = PreviousYearMonthNumber,
			                CALCULATETABLE ( 
			                    VALUES ( 'Date'[Fiscal DayOfMonthNumber] ),
			                    ALLEXCEPT ( 'Date', 'Date'[Fiscal DayOfMonthNumber], 'Date'[Date] ),
			                    'Date'[Fiscal YearMonthNumber] = CurrentYearMonthNumber,
			                    'Date'[DateWithSales] = TRUE 
			                )
			            )
			        )
			    )
			)
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Period-over-period growth
		lineageTag: 654d9835-8f74-45ab-b85a-4f4393ea4f6b

	measure 'Gross Profit Margin MOM (Fiscal)' = ```
			
			VAR ValueCurrentPeriod = [Adjusted Profit Margin]
			VAR ValuePreviousPeriod = [Gross Profit Margin PM (Fiscal)]
			VAR Result =
			    IF (
			        NOT ISBLANK ( ValueCurrentPeriod ) 
			            && NOT ISBLANK ( ValuePreviousPeriod ),
			        ValueCurrentPeriod - ValuePreviousPeriod
			    )
			RETURN
			    Result
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Period-over-period growth
		lineageTag: 6d213830-79ca-4357-9ee1-10dd4d74b679

	measure 'Gross Profit Margin MOM % (Fiscal)' = ```
			
			DIVIDE ( 
			    [Gross Profit Margin MOM (Fiscal)],
			    [Gross Profit Margin PM (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Period-over-period growth
		lineageTag: 0475b220-b0c7-4914-9649-a6c74e6c0e99

	measure 'Gross Profit Margin PP (Fiscal)' = ```
			
			SWITCH ( 
			    TRUE,
			    ISINSCOPE ( 'Date'[Fiscal Month Year] ), [Gross Profit Margin PM (Fiscal)],
			    ISINSCOPE ( 'Date'[Fiscal Quarter Year] ), [Gross Profit Margin PQ (Fiscal)],
			    ISINSCOPE ( 'Date'[Fiscal Year] ), [Gross Profit Margin PY (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Period-over-period growth
		lineageTag: da236b1c-c1f5-4576-b0c7-f07b6fc273fc

	measure 'Gross Profit Margin POP (Fiscal)' = ```
			
			SWITCH ( 
			    TRUE,
			    ISINSCOPE ( 'Date'[Fiscal Month Year] ), [Gross Profit Margin MOM (Fiscal)],
			    ISINSCOPE ( 'Date'[Fiscal Quarter Year] ), [Gross Profit Margin QOQ (Fiscal)],
			    ISINSCOPE ( 'Date'[Fiscal Year] ), [Gross Profit Margin YOY (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Period-over-period growth
		lineageTag: 4457086c-a099-422a-9e43-9a50e64f3f6e

	measure 'Gross Profit Margin POP % (Fiscal)' = ```
			
			SWITCH ( 
			    TRUE,
			    ISINSCOPE ( 'Date'[Fiscal Month Year] ), [Gross Profit Margin MOM % (Fiscal)],
			    ISINSCOPE ( 'Date'[Fiscal Quarter Year] ), [Gross Profit Margin QOQ % (Fiscal)],
			    ISINSCOPE ( 'Date'[Fiscal Year] ), [Gross Profit Margin YOY % (Fiscal)]
			)
			
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Period-over-period growth
		lineageTag: 6ce67f18-bb82-4f62-8015-60309e33ab31

	measure 'Gross Profit Margin YTD (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates],
			    VAR LastDayAvailable = MAX ( 'Date'[Fiscal DayOfYearNumber] )
			    VAR LastFiscalYearAvailable = MAX ( 'Date'[Fiscal YearNumber] )
			    VAR Result =
			        CALCULATE (
			            [Adjusted Profit Margin],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[WeekDayNumber] ),
			            'Date'[Fiscal DayOfYearNumber] <= LastDayAvailable,
			            'Date'[Fiscal YearNumber] = LastFiscalYearAvailable
			        )
			    RETURN
			        Result
			)
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Period-to-date total
		lineageTag: 885947ef-3484-4081-9e54-be327d94cee7

		changedProperty = FormatString

	measure 'Gross Profit Margin QTD (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates],
			    VAR LastDayAvailable =  MAX ( 'Date'[Fiscal DayOfYearNumber] )
			    VAR LastFiscalYearQuarterAvailable = MAX ( 'Date'[Fiscal YearQuarterNumber] )
			    VAR Result =
			        CALCULATE (
			            [Adjusted Profit Margin],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal DayOfYearNumber] <= LastDayAvailable,
			            'Date'[Fiscal YearQuarterNumber] = LastFiscalYearQuarterAvailable
			        )
			    RETURN
			        Result
			)
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Period-to-date total
		lineageTag: 0f252da1-056e-4e94-b06b-364288a90c04

		changedProperty = FormatString

	measure 'Gross Profit Margin MTD (Fiscal)' = ```
			
			IF ( 
			    [ShowValueForDates],
			    VAR LastDayAvailable =  MAX ( 'Date'[Fiscal DayOfMonthNumber] )
			    VAR LastFiscalYearMonthAvailable = MAX ( 'Date'[Fiscal YearMonthNumber] )
			    VAR Result =
			        CALCULATE (
			            [Adjusted Profit Margin],
			            ALLEXCEPT ( 'Date', 'Date'[Day Type], 'Date'[Week Day] ),
			            'Date'[Fiscal DayOfMonthNumber] <= LastDayAvailable,
			            'Date'[Fiscal YearMonthNumber] = LastFiscalYearMonthAvailable
			        )
			    RETURN
			        Result
			)
			```
		formatString: 0.00%;-0.00%;0.00%
		displayFolder: Profit\Gross Profit Margin\Period-to-date total
		lineageTag: 19c04f1c-b3e0-4010-90b7-6b0a67a8d3a5

		changedProperty = FormatString

	column Column1
		dataType: string
		isHidden
		lineageTag: b5c6f04b-6994-41b5-9fc8-3622c78dfbb3
		summarizeBy: none
		sourceColumn: Column1

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	partition 'Fiscal Calendar Time Intelligence-f5db355a-84a9-4fa4-9c2c-ca7016eb92f4' = m
		mode: import
		queryGroup: 'Parameters and Functions'
		source =
				let
				    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("i44FAA==", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Column1 = _t]),
				    #"Changed Type" = Table.TransformColumnTypes(Source,{{"Column1", type text}})
				in
				    #"Changed Type"

	annotation PBI_ResultType = Table

