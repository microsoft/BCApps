table 'Calc. Group - Time Intelligence for Calenday (Weekly)'
	lineageTag: 001419f5-5059-4c68-8bb7-2dd997224dd6

	calculationGroup
		precedence: 4

		calculationItem WTD = ```
				IF ( 
				    [ShowValueForDates],
				    VAR LastDayOfWeekAvailable =  MAX ( 'Date'[WeekDayNumber] )
				    VAR LastFiscalYearWeekAvailable = MAX ( 'Date'[FW YearWeekNumber] )
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[WeekDayNumber] <= LastDayOfWeekAvailable,
				            'Date'[FW YearWeekNumber] = LastFiscalYearWeekAvailable
				        )
				    RETURN
				        Result
				)
				```

		calculationItem PP = ```
				VAR _PW = IF (
				    [ShowValueForDates],
				    SUMX ( 
				        VALUES ( 'Date'[FW YearWeekNumber] ),
				        VAR CurrentFiscalYearWeekNumber = 'Date'[FW YearWeekNumber] 
				        VAR DaysSelected = 
				            CALCULATETABLE (
				                VALUES ( 'Date'[WeekDayNumber] ),
				                REMOVEFILTERS (
				                    'Date'[IsWorkingDay],
				                    'Date'[Week Day],
				                    'Date'[WeekDayNumber]
				                ),
				                'Date'[DatesWithTransactions] = TRUE
				            )
				        RETURN 
				            CALCULATE (
				                SELECTEDMEASURE(),
				                'Date'[FW YearWeekNumber] = CurrentFiscalYearWeekNumber - 1,
				                KEEPFILTERS ( DaysSelected ),
				                ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] )
				            )
				    )
				)
				
				VAR _PQ = IF (
				    [ShowValueForDates],
				    SUMX ( 
				        VALUES ( 'Date'[FW YearQuarterNumber] ),
				        VAR CurrentFiscalYearQuarterNumber = 'Date'[FW YearQuarterNumber]
				        VAR DaysSelected = 
				            CALCULATETABLE (
				                VALUES ( 'Date'[FW DayOfQuarterNumber] ),
				                REMOVEFILTERS (
				                    'Date'[IsWorkingDay],
				                    'Date'[Week Day],
				                    'Date'[WeekDayNumber]
				                ),
				                'Date'[DatesWithTransactions] = TRUE
				            )
				        RETURN 
				            CALCULATE (
				                SELECTEDMEASURE(),
				                'Date'[FW YearQuarterNumber] = CurrentFiscalYearQuarterNumber - 1,
				                DaysSelected,
				                ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] )
				            )
				    )
				)
				
				VAR _PY = IF (
				    [ShowValueForDates],
				    SUMX (
				        VALUES ( 'Date'[FW YearNumber] ),
				        VAR CurrentFiscalYearNumber = 'Date'[FW YearNumber]
				        VAR DaysSelected =
				            CALCULATETABLE (
				                VALUES ( 'Date'[FW DayOfYearNumber] ),
				                REMOVEFILTERS (
				                    'Date'[IsWorkingDay],
				                    'Date'[Week Day],
				                    'Date'[WeekDayNumber]
				                ),
				                'Date'[DatesWithTransactions] = TRUE
				            )
				        RETURN
				            CALCULATE (
				                SELECTEDMEASURE(),
				                'Date'[FW YearNumber] = CurrentFiscalYearNumber - 1,
				                DaysSelected,
				                ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] )
				            )
				    )
				)
				RETURN SWITCH ( 
				    TRUE,
				    ISINSCOPE ( 'Date'[FW Week Year] ), _PW,
				    -- The month level should not be managed in a 445 calendar
				    ISINSCOPE ( 'Date'[FW Quarter Year] ), _PQ,
				    ISINSCOPE ( 'Date'[FW Year] ), _PY
				)
				```

		calculationItem POP = ```
				VAR ValueCurrentPeriod = SELECTEDMEASURE()
				VAR WOWValuePreviousPeriod = IF (
				    [ShowValueForDates],
				    SUMX ( 
				        VALUES ( 'Date'[FW YearWeekNumber] ),
				        VAR CurrentFiscalYearWeekNumber = 'Date'[FW YearWeekNumber] 
				        VAR DaysSelected = 
				            CALCULATETABLE (
				                VALUES ( 'Date'[WeekDayNumber] ),
				                REMOVEFILTERS (
				                    'Date'[IsWorkingDay],
				                    'Date'[Week Day],
				                    'Date'[WeekDayNumber]
				                ),
				                'Date'[DatesWithTransactions] = TRUE
				            )
				        RETURN 
				            CALCULATE (
				                SELECTEDMEASURE(),
				                'Date'[FW YearWeekNumber] = CurrentFiscalYearWeekNumber - 1,
				                KEEPFILTERS ( DaysSelected ),
				                ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] )
				            )
				    )
				)
				VAR _WOW = IF (
				        NOT ISBLANK ( ValueCurrentPeriod ) 
				            && NOT ISBLANK ( WOWValuePreviousPeriod ),
				        ValueCurrentPeriod - WOWValuePreviousPeriod
				    )
				// ------------ QOQ
				VAR QOQValuePreviousPeriod = IF (
				    [ShowValueForDates],
				    SUMX ( 
				        VALUES ( 'Date'[FW YearQuarterNumber] ),
				        VAR CurrentFiscalYearQuarterNumber = 'Date'[FW YearQuarterNumber]
				        VAR DaysSelected = 
				            CALCULATETABLE (
				                VALUES ( 'Date'[FW DayOfQuarterNumber] ),
				                REMOVEFILTERS (
				                    'Date'[IsWorkingDay],
				                    'Date'[Week Day],
				                    'Date'[WeekDayNumber]
				                ),
				                'Date'[DatesWithTransactions] = TRUE
				            )
				        RETURN 
				            CALCULATE (
				                SELECTEDMEASURE(),
				                'Date'[FW YearQuarterNumber] = CurrentFiscalYearQuarterNumber - 1,
				                DaysSelected,
				                ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] )
				            )
				    )
				)
				VAR _QOQ = IF (
				        NOT ISBLANK ( ValueCurrentPeriod ) 
				            && NOT ISBLANK ( QOQValuePreviousPeriod ),
				        ValueCurrentPeriod - QOQValuePreviousPeriod
				    )
				//------------ YOY
				VAR YOYValuePreviousPeriod = IF (
				    [ShowValueForDates],
				    SUMX (
				        VALUES ( 'Date'[FW YearNumber] ),
				        VAR CurrentFiscalYearNumber = 'Date'[FW YearNumber]
				        VAR DaysSelected =
				            CALCULATETABLE (
				                VALUES ( 'Date'[FW DayOfYearNumber] ),
				                REMOVEFILTERS (
				                    'Date'[IsWorkingDay],
				                    'Date'[Week Day],
				                    'Date'[WeekDayNumber]
				                ),
				                'Date'[DatesWithTransactions] = TRUE
				            )
				        RETURN
				            CALCULATE (
				                SELECTEDMEASURE(),
				                'Date'[FW YearNumber] = CurrentFiscalYearNumber - 1,
				                DaysSelected,
				                ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] )
				            )
				    )
				)
				VAR _YOY = IF (
				        NOT ISBLANK ( ValueCurrentPeriod ) 
				            && NOT ISBLANK ( YOYValuePreviousPeriod ),
				        ValueCurrentPeriod - YOYValuePreviousPeriod
				    )
				
				RETURN SWITCH ( 
				    TRUE,
				    ISINSCOPE ( 'Date'[FW Week Year] ), _WOW,
				    -- The month level should not be managed in a 445 calendar
				    ISINSCOPE ( 'Date'[FW Quarter Year] ), _QOQ,
				    ISINSCOPE ( 'Date'[FW Year] ), _YOY
				)
				```

		calculationItem 'POP %' = ```
				VAR ValueCurrentPeriod = SELECTEDMEASURE()
				//------------ WOW%
				VAR WOWValuePreviousPeriod = IF (
				    [ShowValueForDates],
				    SUMX ( 
				        VALUES ( 'Date'[FW YearWeekNumber] ),
				        VAR CurrentFiscalYearWeekNumber = 'Date'[FW YearWeekNumber] 
				        VAR DaysSelected = 
				            CALCULATETABLE (
				                VALUES ( 'Date'[WeekDayNumber] ),
				                REMOVEFILTERS (
				                    'Date'[IsWorkingDay],
				                    'Date'[Week Day],
				                    'Date'[WeekDayNumber]
				                ),
				                'Date'[DatesWithTransactions] = TRUE
				            )
				        RETURN 
				            CALCULATE (
				                SELECTEDMEASURE(),
				                'Date'[FW YearWeekNumber] = CurrentFiscalYearWeekNumber - 1,
				                KEEPFILTERS ( DaysSelected ),
				                ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] )
				            )
				    )
				)
				VAR _WOW = IF (
				        NOT ISBLANK ( ValueCurrentPeriod ) 
				            && NOT ISBLANK ( WOWValuePreviousPeriod ),
				        ValueCurrentPeriod - WOWValuePreviousPeriod
				    )
				VAR _PW = IF (
				    [ShowValueForDates],
				    SUMX ( 
				        VALUES ( 'Date'[FW YearWeekNumber] ),
				        VAR CurrentFiscalYearWeekNumber = 'Date'[FW YearWeekNumber] 
				        VAR DaysSelected = 
				            CALCULATETABLE (
				                VALUES ( 'Date'[WeekDayNumber] ),
				                REMOVEFILTERS (
				                    'Date'[IsWorkingDay],
				                    'Date'[Week Day],
				                    'Date'[WeekDayNumber]
				                ),
				                'Date'[DatesWithTransactions] = TRUE
				            )
				        RETURN 
				            CALCULATE (
				                SELECTEDMEASURE(),
				                'Date'[FW YearWeekNumber] = CurrentFiscalYearWeekNumber - 1,
				                KEEPFILTERS ( DaysSelected ),
				                ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] )
				            )
				    )
				)
				VAR _WOW_Percent = DIVIDE ( 
				    _WOW,
				    _PW
				)
				//------------ QOQ%
				VAR _PQ = IF (
				    [ShowValueForDates],
				    SUMX ( 
				        VALUES ( 'Date'[FW YearQuarterNumber] ),
				        VAR CurrentFiscalYearQuarterNumber = 'Date'[FW YearQuarterNumber]
				        VAR DaysSelected = 
				            CALCULATETABLE (
				                VALUES ( 'Date'[FW DayOfQuarterNumber] ),
				                REMOVEFILTERS (
				                    'Date'[IsWorkingDay],
				                    'Date'[Week Day],
				                    'Date'[WeekDayNumber]
				                ),
				                'Date'[DatesWithTransactions] = TRUE
				            )
				        RETURN 
				            CALCULATE (
				                SELECTEDMEASURE(),
				                'Date'[FW YearQuarterNumber] = CurrentFiscalYearQuarterNumber - 1,
				                DaysSelected,
				                ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] )
				            )
				    )
				)
				VAR QOQValuePreviousPeriod = IF (
				    [ShowValueForDates],
				    SUMX ( 
				        VALUES ( 'Date'[FW YearQuarterNumber] ),
				        VAR CurrentFiscalYearQuarterNumber = 'Date'[FW YearQuarterNumber]
				        VAR DaysSelected = 
				            CALCULATETABLE (
				                VALUES ( 'Date'[FW DayOfQuarterNumber] ),
				                REMOVEFILTERS (
				                    'Date'[IsWorkingDay],
				                    'Date'[Week Day],
				                    'Date'[WeekDayNumber]
				                ),
				                'Date'[DatesWithTransactions] = TRUE
				            )
				        RETURN 
				            CALCULATE (
				                SELECTEDMEASURE(),
				                'Date'[FW YearQuarterNumber] = CurrentFiscalYearQuarterNumber - 1,
				                DaysSelected,
				                ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] )
				            )
				    )
				)
				VAR _QOQ = IF (
				        NOT ISBLANK ( ValueCurrentPeriod ) 
				            && NOT ISBLANK ( QOQValuePreviousPeriod ),
				        ValueCurrentPeriod - QOQValuePreviousPeriod
				    )
				
				VAR _QOQ_Percent = DIVIDE ( 
				    _QOQ,
				    _PQ
				)
				//------------ YOY%
				VAR _PY = IF (
				    [ShowValueForDates],
				    SUMX (
				        VALUES ( 'Date'[FW YearNumber] ),
				        VAR CurrentFiscalYearNumber = 'Date'[FW YearNumber]
				        VAR DaysSelected =
				            CALCULATETABLE (
				                VALUES ( 'Date'[FW DayOfYearNumber] ),
				                REMOVEFILTERS (
				                    'Date'[IsWorkingDay],
				                    'Date'[Week Day],
				                    'Date'[WeekDayNumber]
				                ),
				                'Date'[DatesWithTransactions] = TRUE
				            )
				        RETURN
				            CALCULATE (
				                SELECTEDMEASURE(),
				                'Date'[FW YearNumber] = CurrentFiscalYearNumber - 1,
				                DaysSelected,
				                ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] )
				            )
				    )
				)
				VAR YOYValuePreviousPeriod = IF (
				    [ShowValueForDates],
				    SUMX (
				        VALUES ( 'Date'[FW YearNumber] ),
				        VAR CurrentFiscalYearNumber = 'Date'[FW YearNumber]
				        VAR DaysSelected =
				            CALCULATETABLE (
				                VALUES ( 'Date'[FW DayOfYearNumber] ),
				                REMOVEFILTERS (
				                    'Date'[IsWorkingDay],
				                    'Date'[Week Day],
				                    'Date'[WeekDayNumber]
				                ),
				                'Date'[DatesWithTransactions] = TRUE
				            )
				        RETURN
				            CALCULATE (
				                SELECTEDMEASURE(),
				                'Date'[FW YearNumber] = CurrentFiscalYearNumber - 1,
				                DaysSelected,
				                ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] )
				            )
				    )
				)
				VAR _YOY = IF (
				        NOT ISBLANK ( ValueCurrentPeriod ) 
				            && NOT ISBLANK ( YOYValuePreviousPeriod ),
				        ValueCurrentPeriod - YOYValuePreviousPeriod
				    )
				VAR _YOY_Percent = DIVIDE ( 
				    _YOY,
				    _PY
				)
				//------------ RETURN
				RETURN SWITCH ( 
				    TRUE,
				    ISINSCOPE ( 'Date'[FW Week Year] ), _WOW_Percent,
				    -- The month level should not be managed in a 445 calendar
				    ISINSCOPE ( 'Date'[FW Quarter Year] ), _QOQ_Percent,
				    ISINSCOPE ( 'Date'[FW Year] ), _YOY_Percent
				)
				```

		calculationItem 'AVG 1Q' = ```
				IF (
				    [ShowValueForDates],
				    VAR LastDayMAT =
				        MAX ( 'Date'[Sequential365DayNumber] )
				    VAR FirstDayMAT = LastDayMAT - 13 * 7 + 1
				    VAR Period1Q =
				        CALCULATETABLE (
				            VALUES ( 'Date'[Sequential365DayNumber] ),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[Sequential365DayNumber] >= FirstDayMAT 
				                && 'Date'[Sequential365DayNumber] <= LastDayMAT,
				            'Date'[DatesWithTransactions] = TRUE
				        )
				    VAR FirstDayWithData =
				        CALCULATE (
				            MIN ( 'G/L Entries'[Posting Date] ),
				            REMOVEFILTERS ()
				        )
				    VAR FirstDayInPeriod =
				        MINX (
				            Period1Q,
				            'Date'[Sequential365DayNumber]
				        )
				    VAR Result =
				        IF (
				            FirstDayWithData <= FirstDayInPeriod,
				            CALCULATE (
				                AVERAGEX ( Period1Q, SELECTEDMEASURE() ),
				                REMOVEFILTERS ( 'Date' )
				            )
				        )
				    RETURN
				        Result
				)
				```

		calculationItem 'AVG 1Y' =
				IF (
				    [ShowValueForDates],
				    VAR LastDayMAT =
				        MAX ( 'Date'[Sequential365DayNumber] )
				    VAR FirstDayMAT = LastDayMAT - 363
				    VAR Period1Y =
				        CALCULATETABLE (
				            VALUES ( 'Date'[Sequential365DayNumber] ),
				            ALLEXCEPT (
				                'Date',
				                'Date'[IsWorkingDay],
				                'Date'[Week Day]
				            ),
				            'Date'[Sequential365DayNumber] >= FirstDayMAT
				                && 'Date'[Sequential365DayNumber] <= LastDayMAT,
				            'Date'[DatesWithTransactions] = TRUE
				        )
				    VAR FirstDayWithData =
				        CALCULATE (
				            MIN ( 'G/L Entries'[Posting Date] ),
				            REMOVEFILTERS ()
				        )
				    VAR FirstDayInPeriod =
				        MINX (
				            Period1Y,
				            'Date'[Sequential365DayNumber]
				        )
				    VAR Result =
				        IF (
				            FirstDayWithData <= FirstDayInPeriod,
				            CALCULATE (
				                AVERAGEX ( Period1Y, SELECTEDMEASURE() ),
				                REMOVEFILTERS ( 'Date' )
				            )
				        )
				    RETURN
				        Result
				)

		calculationItem 'AVG 4W' = ```
				IF (
				    [ShowValueForDates],
				    VAR LastDayMAT =
				        MAX ( 'Date'[Sequential365DayNumber] )
				    VAR FirstDayMAT = LastDayMAT - 27
				    VAR Period4W =
				        CALCULATETABLE (
				            VALUES ( 'Date'[Sequential365DayNumber] ),
				            ALLEXCEPT (
				                'Date',
				                'Date'[IsWorkingDay],
				                'Date'[Week Day]
				            ),
				            'Date'[Sequential365DayNumber] >= FirstDayMAT 
				                && 'Date'[Sequential365DayNumber] <= LastDayMAT,
				            'Date'[DatesWithTransactions] = TRUE
				        )
				    VAR FirstDayWithData =
				        CALCULATE (
				            MIN ( 'G/L Entries'[Posting Date] ),
				            REMOVEFILTERS ()
				        )
				    VAR FirstDayInPeriod =
				        MINX (
				            Period4W,
				            'Date'[Sequential365DayNumber]
				        )
				    VAR Result =
				        IF (
				            FirstDayWithData <= FirstDayInPeriod,
				            CALCULATE (
				                AVERAGEX ( Period4W, SELECTEDMEASURE() ),
				                REMOVEFILTERS ( 'Date' )
				            )
				        )
				    RETURN
				        Result
				)
				```

		calculationItem MAT = ```
				IF ( 
				    [ShowValueForDates], 
				    VAR LastDayMAT =  MAX ( 'Date'[Sequential365DayNumber] )
				    VAR FirstDayMAT = LastDayMAT - 363
				    VAR Result = 
				        CALCULATE ( 
				            SELECTEDMEASURE(), 
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[Sequential365DayNumber] >= FirstDayMAT 
				                && 'Date'[Sequential365DayNumber] <= LastDayMAT
				        ) 
				    RETURN
				        Result
				)
				```

		calculationItem PYMAT = ```
				IF ( 
				    [ShowValueForDates], 
				    VAR LastDayAvailable = MAX ( 'Date'[Sequential365DayNumber] )
				    VAR LastDayMAT = LastDayAvailable - 364 -- go back 52 weeks
				    VAR FirstDayMAT = LastDayMAT - 363
				    VAR Result = 
				        CALCULATE ( 
				            SELECTEDMEASURE(), 
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[Sequential365DayNumber] >= FirstDayMAT 
				                && 'Date'[Sequential365DayNumber] <= LastDayMAT
				        ) 
				    RETURN
				        Result
				)
				```

		calculationItem MATG = ```
				VAR ValueCurrentPeriod = IF ( 
				    [ShowValueForDates], 
				    VAR LastDayMAT =  MAX ( 'Date'[Sequential365DayNumber] )
				    VAR FirstDayMAT = LastDayMAT - 363
				    VAR Result = 
				        CALCULATE ( 
				            SELECTEDMEASURE(), 
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[Sequential365DayNumber] >= FirstDayMAT 
				                && 'Date'[Sequential365DayNumber] <= LastDayMAT
				        ) 
				    RETURN
				        Result
				)
				VAR ValuePreviousPeriod = IF ( 
				    [ShowValueForDates], 
				    VAR LastDayAvailable = MAX ( 'Date'[Sequential365DayNumber] )
				    VAR LastDayMAT = LastDayAvailable - 364 -- go back 52 weeks
				    VAR FirstDayMAT = LastDayMAT - 363
				    VAR Result = 
				        CALCULATE ( 
				            SELECTEDMEASURE(), 
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[Sequential365DayNumber] >= FirstDayMAT 
				                && 'Date'[Sequential365DayNumber] <= LastDayMAT
				        ) 
				    RETURN
				        Result
				)
				RETURN IF (
				        NOT ISBLANK ( ValueCurrentPeriod ) 
				            && NOT ISBLANK ( ValuePreviousPeriod ),
				        ValueCurrentPeriod - ValuePreviousPeriod
				    )
				```

		calculationItem 'MATG %' = ```
				VAR ValueCurrentPeriod = IF ( 
				    [ShowValueForDates], 
				    VAR LastDayMAT =  MAX ( 'Date'[Sequential365DayNumber] )
				    VAR FirstDayMAT = LastDayMAT - 363
				    VAR Result = 
				        CALCULATE ( 
				            SELECTEDMEASURE(), 
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[Sequential365DayNumber] >= FirstDayMAT 
				                && 'Date'[Sequential365DayNumber] <= LastDayMAT
				        ) 
				    RETURN
				        Result
				)
				VAR ValuePreviousPeriod = IF ( 
				    [ShowValueForDates], 
				    VAR LastDayAvailable = MAX ( 'Date'[Sequential365DayNumber] )
				    VAR LastDayMAT = LastDayAvailable - 364 -- go back 52 weeks
				    VAR FirstDayMAT = LastDayMAT - 363
				    VAR Result = 
				        CALCULATE ( 
				            SELECTEDMEASURE(), 
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[Sequential365DayNumber] >= FirstDayMAT 
				                && 'Date'[Sequential365DayNumber] <= LastDayMAT
				        ) 
				    RETURN
				        Result
				)
				VAR MATG = IF (
				        NOT ISBLANK ( ValueCurrentPeriod ) 
				            && NOT ISBLANK ( ValuePreviousPeriod ),
				        ValueCurrentPeriod - ValuePreviousPeriod
				    )
				
				VAR PYMAT = IF ( 
				    [ShowValueForDates], 
				    VAR LastDayAvailable = MAX ( 'Date'[Sequential365DayNumber] )
				    VAR LastDayMAT = LastDayAvailable - 364 -- go back 52 weeks
				    VAR FirstDayMAT = LastDayMAT - 363
				    VAR Result = 
				        CALCULATE ( 
				            SELECTEDMEASURE(), 
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[Sequential365DayNumber] >= FirstDayMAT 
				                && 'Date'[Sequential365DayNumber] <= LastDayMAT
				        ) 
				    RETURN
				        Result
				)
				
				RETURN DIVIDE ( 
				    MATG,
				    PYMAT
				)
				```

		calculationItem PYC = ```
				IF (
				    [ShowValueForDates] && HASONEVALUE ( 'Date'[FW YearNumber] ),
				    VAR PreviousFiscalYear = MAX ( 'Date'[FW YearNumber] ) - 1
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[FW YearNumber] = PreviousFiscalYear
				        )
				    RETURN
				        Result
				)
				
				```

		calculationItem YTDOPY = ```
				VAR ValueCurrentPeriod = IF ( 
				    [ShowValueForDates],
				    VAR LastDayAvailable = MAX ( 'Date'[FW DayOfYearNumber] )
				    VAR LastFiscalYearAvailable = MAX ( 'Date'[FW YearNumber] )
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[FW DayOfYearNumber] <= LastDayAvailable,
				            'Date'[FW YearNumber] = LastFiscalYearAvailable
				        )
				    RETURN
				        Result
				)
				VAR ValuePreviousPeriod = IF (
				    [ShowValueForDates] && HASONEVALUE ( 'Date'[FW YearNumber] ),
				    VAR PreviousFiscalYear = MAX ( 'Date'[FW YearNumber] ) - 1
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[FW YearNumber] = PreviousFiscalYear
				        )
				    RETURN
				        Result
				)
				RETURN IF (
				        NOT ISBLANK ( ValueCurrentPeriod ) 
				            && NOT ISBLANK ( ValuePreviousPeriod ),
				        ValueCurrentPeriod - ValuePreviousPeriod
				    )
				
				```

		calculationItem 'YTDOPY %' = ```
				VAR PYC = IF (
				    [ShowValueForDates] && HASONEVALUE ( 'Date'[FW YearNumber] ),
				    VAR PreviousFiscalYear = MAX ( 'Date'[FW YearNumber] ) - 1
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[FW YearNumber] = PreviousFiscalYear
				        )
				    RETURN
				        Result
				)
				
				VAR ValueCurrentPeriod = IF ( 
				    [ShowValueForDates],
				    VAR LastDayAvailable = MAX ( 'Date'[FW DayOfYearNumber] )
				    VAR LastFiscalYearAvailable = MAX ( 'Date'[FW YearNumber] )
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[FW DayOfYearNumber] <= LastDayAvailable,
				            'Date'[FW YearNumber] = LastFiscalYearAvailable
				        )
				    RETURN
				        Result
				)
				VAR ValuePreviousPeriod = IF (
				    [ShowValueForDates] && HASONEVALUE ( 'Date'[FW YearNumber] ),
				    VAR PreviousFiscalYear = MAX ( 'Date'[FW YearNumber] ) - 1
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[FW YearNumber] = PreviousFiscalYear
				        )
				    RETURN
				        Result
				)
				VAR YTDOPY =IF (
				        NOT ISBLANK ( ValueCurrentPeriod ) 
				            && NOT ISBLANK ( ValuePreviousPeriod ),
				        ValueCurrentPeriod - ValuePreviousPeriod
				    )
				
				RETURN DIVIDE ( 
				    YTDOPY,
				    PYC
				)
				```

		calculationItem PQC =
				IF (
				    [ShowValueForDates] && HASONEVALUE ( 'Date'[FW YearQuarterNumber] ),
				    VAR PreviousFiscalYearQuarter = MAX ( 'Date'[FW YearQuarterNumber] ) - 1
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[FW YearQuarterNumber] = PreviousFiscalYearQuarter
				        )
				    RETURN
				        Result
				)

		calculationItem QTDOPQ = ```
				VAR ValueCurrentPeriod = IF ( 
				    [ShowValueForDates],
				    VAR LastDayAvailable =  MAX ( 'Date'[FW DayOfQuarterNumber] )
				    VAR LastFiscalYearQuarterAvailable = MAX ( 'Date'[FW YearQuarterNumber] )
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[FW DayOfQuarterNumber] <= LastDayAvailable,
				            'Date'[FW YearQuarterNumber] = LastFiscalYearQuarterAvailable
				        )
				    RETURN
				        Result
				)
				VAR ValuePreviousPeriod = IF (
				    [ShowValueForDates] && HASONEVALUE ( 'Date'[FW YearQuarterNumber] ),
				    VAR PreviousFiscalYearQuarter = MAX ( 'Date'[FW YearQuarterNumber] ) - 1
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[FW YearQuarterNumber] = PreviousFiscalYearQuarter
				        )
				    RETURN
				        Result
				)
				RETURN IF (
				        NOT ISBLANK ( ValueCurrentPeriod ) 
				            && NOT ISBLANK ( ValuePreviousPeriod ),
				        ValueCurrentPeriod - ValuePreviousPeriod
				    )
				```

		calculationItem 'QTDOPQ %' = ```
				VAR PQC = IF (
				    [ShowValueForDates] && HASONEVALUE ( 'Date'[FW YearQuarterNumber] ),
				    VAR PreviousFiscalYearQuarter = MAX ( 'Date'[FW YearQuarterNumber] ) - 1
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[FW YearQuarterNumber] = PreviousFiscalYearQuarter
				        )
				    RETURN
				        Result
				)
				
				VAR ValueCurrentPeriod = IF ( 
				    [ShowValueForDates],
				    VAR LastDayAvailable =  MAX ( 'Date'[FW DayOfQuarterNumber] )
				    VAR LastFiscalYearQuarterAvailable = MAX ( 'Date'[FW YearQuarterNumber] )
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[FW DayOfQuarterNumber] <= LastDayAvailable,
				            'Date'[FW YearQuarterNumber] = LastFiscalYearQuarterAvailable
				        )
				    RETURN
				        Result
				)
				VAR ValuePreviousPeriod = IF (
				    [ShowValueForDates] && HASONEVALUE ( 'Date'[FW YearQuarterNumber] ),
				    VAR PreviousFiscalYearQuarter = MAX ( 'Date'[FW YearQuarterNumber] ) - 1
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[FW YearQuarterNumber] = PreviousFiscalYearQuarter
				        )
				    RETURN
				        Result
				)
				VAR QTDOPQ = IF (
				        NOT ISBLANK ( ValueCurrentPeriod ) 
				            && NOT ISBLANK ( ValuePreviousPeriod ),
				        ValueCurrentPeriod - ValuePreviousPeriod
				    )
				
				RETURN DIVIDE ( 
				    QTDOPQ,
				    PQC
				)
				```

		calculationItem PWC =
				IF (
				    [ShowValueForDates] && HASONEVALUE ( 'Date'[FW YearWeekNumber] ),
				    VAR PreviousFiscalYearWeek = MAX ( 'Date'[FW YearWeekNumber] ) - 1
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[FW YearWeekNumber] = PreviousFiscalYearWeek
				        )
				    RETURN
				        Result
				)

		calculationItem 'QOQ %' = ```
				VAR _PQ = IF (
				    [ShowValueForDates],
				    SUMX ( 
				        VALUES ( 'Date'[FW YearQuarterNumber] ),
				        VAR CurrentFiscalYearQuarterNumber = 'Date'[FW YearQuarterNumber]
				        VAR DaysSelected = 
				            CALCULATETABLE (
				                VALUES ( 'Date'[FW DayOfQuarterNumber] ),
				                REMOVEFILTERS (
				                    'Date'[IsWorkingDay],
				                    'Date'[Week Day],
				                    'Date'[WeekDayNumber]
				                ),
				                'Date'[DatesWithTransactions] = TRUE
				            )
				        RETURN 
				            CALCULATE (
				                SELECTEDMEASURE(),
				                'Date'[FW YearQuarterNumber] = CurrentFiscalYearQuarterNumber - 1,
				                DaysSelected,
				                ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] )
				            )
				    )
				)
				
				VAR ValueCurrentPeriod = SELECTEDMEASURE()
				VAR ValuePreviousPeriod = IF (
				    [ShowValueForDates],
				    SUMX ( 
				        VALUES ( 'Date'[FW YearQuarterNumber] ),
				        VAR CurrentFiscalYearQuarterNumber = 'Date'[FW YearQuarterNumber]
				        VAR DaysSelected = 
				            CALCULATETABLE (
				                VALUES ( 'Date'[FW DayOfQuarterNumber] ),
				                REMOVEFILTERS (
				                    'Date'[IsWorkingDay],
				                    'Date'[Week Day],
				                    'Date'[WeekDayNumber]
				                ),
				                'Date'[DatesWithTransactions] = TRUE
				            )
				        RETURN 
				            CALCULATE (
				                SELECTEDMEASURE(),
				                'Date'[FW YearQuarterNumber] = CurrentFiscalYearQuarterNumber - 1,
				                DaysSelected,
				                ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] )
				            )
				    )
				)
				VAR _QOQ = IF (
				        NOT ISBLANK ( ValueCurrentPeriod ) 
				            && NOT ISBLANK ( ValuePreviousPeriod ),
				        ValueCurrentPeriod - ValuePreviousPeriod
				    )
				
				RETURN DIVIDE ( 
				    _QOQ,
				    _PQ
				)
				```

		calculationItem WTDOPW = ```
				VAR ValueCurrentPeriod = IF ( 
				    [ShowValueForDates],
				    VAR LastDayOfWeekAvailable =  MAX ( 'Date'[WeekDayNumber] )
				    VAR LastFiscalYearWeekAvailable = MAX ( 'Date'[FW YearWeekNumber] )
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[WeekDayNumber] <= LastDayOfWeekAvailable,
				            'Date'[FW YearWeekNumber] = LastFiscalYearWeekAvailable
				        )
				    RETURN
				        Result
				)
				VAR ValuePreviousPeriod = IF (
				    [ShowValueForDates] && HASONEVALUE ( 'Date'[FW YearWeekNumber] ),
				    VAR PreviousFiscalYearWeek = MAX ( 'Date'[FW YearWeekNumber] ) - 1
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[FW YearWeekNumber] = PreviousFiscalYearWeek
				        )
				    RETURN
				        Result
				)
				RETURN IF (
				        NOT ISBLANK ( ValueCurrentPeriod ) 
				            && NOT ISBLANK ( ValuePreviousPeriod ),
				        ValueCurrentPeriod - ValuePreviousPeriod
				    )
				```

		calculationItem QOQ = ```
				VAR ValueCurrentPeriod = SELECTEDMEASURE()
				VAR ValuePreviousPeriod = IF (
				    [ShowValueForDates],
				    SUMX ( 
				        VALUES ( 'Date'[FW YearQuarterNumber] ),
				        VAR CurrentFiscalYearQuarterNumber = 'Date'[FW YearQuarterNumber]
				        VAR DaysSelected = 
				            CALCULATETABLE (
				                VALUES ( 'Date'[FW DayOfQuarterNumber] ),
				                REMOVEFILTERS (
				                    'Date'[IsWorkingDay],
				                    'Date'[Week Day],
				                    'Date'[WeekDayNumber]
				                ),
				                'Date'[DatesWithTransactions] = TRUE
				            )
				        RETURN 
				            CALCULATE (
				                SELECTEDMEASURE(),
				                'Date'[FW YearQuarterNumber] = CurrentFiscalYearQuarterNumber - 1,
				                DaysSelected,
				                ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] )
				            )
				    )
				)
				RETURN IF (
				        NOT ISBLANK ( ValueCurrentPeriod ) 
				            && NOT ISBLANK ( ValuePreviousPeriod ),
				        ValueCurrentPeriod - ValuePreviousPeriod
				    )
				```

		calculationItem 'WOW %' = ```
				VAR ValueCurrentPeriod = SELECTEDMEASURE()
				VAR ValuePreviousPeriod = IF (
				    [ShowValueForDates],
				    SUMX ( 
				        VALUES ( 'Date'[FW YearWeekNumber] ),
				        VAR CurrentFiscalYearWeekNumber = 'Date'[FW YearWeekNumber] 
				        VAR DaysSelected = 
				            CALCULATETABLE (
				                VALUES ( 'Date'[WeekDayNumber] ),
				                REMOVEFILTERS (
				                    'Date'[IsWorkingDay],
				                    'Date'[Week Day],
				                    'Date'[WeekDayNumber]
				                ),
				                'Date'[DatesWithTransactions] = TRUE
				            )
				        RETURN 
				            CALCULATE (
				                SELECTEDMEASURE(),
				                'Date'[FW YearWeekNumber] = CurrentFiscalYearWeekNumber - 1,
				                KEEPFILTERS ( DaysSelected ),
				                ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] )
				            )
				    )
				)
				VAR _WOW = IF (
				        NOT ISBLANK ( ValueCurrentPeriod ) 
				            && NOT ISBLANK ( ValuePreviousPeriod ),
				        ValueCurrentPeriod - ValuePreviousPeriod
				    )
				VAR _PW = IF (
				    [ShowValueForDates],
				    SUMX ( 
				        VALUES ( 'Date'[FW YearWeekNumber] ),
				        VAR CurrentFiscalYearWeekNumber = 'Date'[FW YearWeekNumber] 
				        VAR DaysSelected = 
				            CALCULATETABLE (
				                VALUES ( 'Date'[WeekDayNumber] ),
				                REMOVEFILTERS (
				                    'Date'[IsWorkingDay],
				                    'Date'[Week Day],
				                    'Date'[WeekDayNumber]
				                ),
				                'Date'[DatesWithTransactions] = TRUE
				            )
				        RETURN 
				            CALCULATE (
				                SELECTEDMEASURE(),
				                'Date'[FW YearWeekNumber] = CurrentFiscalYearWeekNumber - 1,
				                KEEPFILTERS ( DaysSelected ),
				                ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] )
				            )
				    )
				)
				
				RETURN DIVIDE ( 
				    _WOW,
				    _PW
				)
				```

		calculationItem MTD = ```
				IF ( 
				    [ShowValueForDates],
				    VAR LastDayAvailable =  MAX ( 'Date'[FW DayOfMonthNumber] )
				    VAR LastFiscalYearMonthAvailable = MAX ( 'Date'[FW YearMonthNumber] )
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[FW DayOfMonthNumber] <= LastDayAvailable,
				            'Date'[FW YearMonthNumber] = LastFiscalYearMonthAvailable
				        )
				    RETURN
				        Result
				)
				```

		calculationItem QTD = ```
				IF ( 
				    [ShowValueForDates],
				    VAR LastDayAvailable =  MAX ( 'Date'[FW DayOfQuarterNumber] )
				    VAR LastFiscalYearQuarterAvailable = MAX ( 'Date'[FW YearQuarterNumber] )
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[FW DayOfQuarterNumber] <= LastDayAvailable,
				            'Date'[FW YearQuarterNumber] = LastFiscalYearQuarterAvailable
				        )
				    RETURN
				        Result
				)
				```

		calculationItem YTD = ```
				IF ( 
				    [ShowValueForDates],
				    VAR LastDayAvailable = MAX ( 'Date'[FW DayOfYearNumber] )
				    VAR LastFiscalYearAvailable = MAX ( 'Date'[FW YearNumber] )
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[FW DayOfYearNumber] <= LastDayAvailable,
				            'Date'[FW YearNumber] = LastFiscalYearAvailable
				        )
				    RETURN
				        Result
				)
				```

		calculationItem PYTD = ```
				IF ( 
				    [ShowValueForDates],
				    VAR PreviousFiscalYear = MAX ( 'Date'[FW YearNumber] ) - 1
				    VAR LastDayOfFiscalYearAvailable = 
				        CALCULATE ( 
				            MAX ( 'Date'[FW DayOfYearNumber] ),
				            REMOVEFILTERS (                -- Remove filters from
				                'Date'[IsWorkingDay],       -- filter-safe columns
				                'Date'[Week Day],       -- to get the last day with data
				                'Date'[WeekDayNumber] -- selected in the report
				            ),
				            'Date'[DatesWithTransactions] = TRUE 
				        )
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[FW YearNumber] = PreviousFiscalYear,
				            'Date'[FW DayOfYearNumber] <= LastDayOfFiscalYearAvailable,
				            'Date'[DatesWithTransactions] = TRUE 
				        )
				    RETURN
				        Result
				)
				```

		calculationItem YOYTD = ```
				VAR ValueCurrentPeriod = IF ( 
				    [ShowValueForDates],
				    VAR LastDayAvailable = MAX ( 'Date'[FW DayOfYearNumber] )
				    VAR LastFiscalYearAvailable = MAX ( 'Date'[FW YearNumber] )
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[FW DayOfYearNumber] <= LastDayAvailable,
				            'Date'[FW YearNumber] = LastFiscalYearAvailable
				        )
				    RETURN
				        Result
				)
				VAR ValuePreviousPeriod = IF ( 
				    [ShowValueForDates],
				    VAR PreviousFiscalYear = MAX ( 'Date'[FW YearNumber] ) - 1
				    VAR LastDayOfFiscalYearAvailable = 
				        CALCULATE ( 
				            MAX ( 'Date'[FW DayOfYearNumber] ),
				            REMOVEFILTERS (                -- Remove filters from
				                'Date'[IsWorkingDay],       -- filter-safe columns
				                'Date'[Week Day],       -- to get the last day with data
				                'Date'[WeekDayNumber] -- selected in the report
				            ),
				            'Date'[DatesWithTransactions] = TRUE 
				        )
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[FW YearNumber] = PreviousFiscalYear,
				            'Date'[FW DayOfYearNumber] <= LastDayOfFiscalYearAvailable,
				            'Date'[DatesWithTransactions] = TRUE 
				        )
				    RETURN
				        Result
				)
				RETURN IF (
				        NOT ISBLANK ( ValueCurrentPeriod ) 
				            && NOT ISBLANK ( ValuePreviousPeriod ),
				        ValueCurrentPeriod - ValuePreviousPeriod
				    )
				```

		calculationItem 'YOYTD %' = ```
				VAR _PYTD = IF ( 
				    [ShowValueForDates],
				    VAR PreviousFiscalYear = MAX ( 'Date'[FW YearNumber] ) - 1
				    VAR LastDayOfFiscalYearAvailable = 
				        CALCULATE ( 
				            MAX ( 'Date'[FW DayOfYearNumber] ),
				            REMOVEFILTERS (                -- Remove filters from
				                'Date'[IsWorkingDay],       -- filter-safe columns
				                'Date'[Week Day],       -- to get the last day with data
				                'Date'[WeekDayNumber] -- selected in the report
				            ),
				            'Date'[DatesWithTransactions] = TRUE 
				        )
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[FW YearNumber] = PreviousFiscalYear,
				            'Date'[FW DayOfYearNumber] <= LastDayOfFiscalYearAvailable,
				            'Date'[DatesWithTransactions] = TRUE 
				        )
				    RETURN
				        Result
				)
				//------- YOYTD
				VAR ValueCurrentPeriod = IF ( 
				    [ShowValueForDates],
				    VAR LastDayAvailable = MAX ( 'Date'[FW DayOfYearNumber] )
				    VAR LastFiscalYearAvailable = MAX ( 'Date'[FW YearNumber] )
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[FW DayOfYearNumber] <= LastDayAvailable,
				            'Date'[FW YearNumber] = LastFiscalYearAvailable
				        )
				    RETURN
				        Result
				)
				VAR ValuePreviousPeriod = IF ( 
				    [ShowValueForDates],
				    VAR PreviousFiscalYear = MAX ( 'Date'[FW YearNumber] ) - 1
				    VAR LastDayOfFiscalYearAvailable = 
				        CALCULATE ( 
				            MAX ( 'Date'[FW DayOfYearNumber] ),
				            REMOVEFILTERS (                -- Remove filters from
				                'Date'[IsWorkingDay],       -- filter-safe columns
				                'Date'[Week Day],       -- to get the last day with data
				                'Date'[WeekDayNumber] -- selected in the report
				            ),
				            'Date'[DatesWithTransactions] = TRUE 
				        )
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[FW YearNumber] = PreviousFiscalYear,
				            'Date'[FW DayOfYearNumber] <= LastDayOfFiscalYearAvailable,
				            'Date'[DatesWithTransactions] = TRUE 
				        )
				    RETURN
				        Result
				)
				VAR _YOYTD = IF (
				        NOT ISBLANK ( ValueCurrentPeriod ) 
				            && NOT ISBLANK ( ValuePreviousPeriod ),
				        ValueCurrentPeriod - ValuePreviousPeriod
				    )
				
				//------- YOYTD%
				RETURN DIVIDE ( 
				    _YOYTD,
				    _PYTD
				)
				```

		calculationItem PWTD = ```
				IF ( 
				    [ShowValueForDates],
				    VAR PreviousFiscalYearWeek = MAX ( 'Date'[FW YearWeekNumber] ) - 1
				    VAR LastDayOfWeekAvailable = 
				        CALCULATE ( 
				            MAX ( 'Date'[WeekDayNumber] ),
				            REMOVEFILTERS (                -- Remove filters from
				                'Date'[IsWorkingDay],       -- filter-safe columns
				                'Date'[Week Day],       -- to get the last day with data
				                'Date'[WeekDayNumber] -- selected in the report
				            ),
				            'Date'[DatesWithTransactions] = TRUE 
				        )
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[FW YearWeekNumber] = PreviousFiscalYearWeek,
				            'Date'[WeekDayNumber] <= LastDayOfWeekAvailable,
				            'Date'[DatesWithTransactions] = TRUE 
				        )
				    RETURN
				        Result
				)
				```

		calculationItem WOWTD = ```
				VAR ValueCurrentPeriod = IF ( 
				    [ShowValueForDates],
				    VAR LastDayOfWeekAvailable =  MAX ( 'Date'[WeekDayNumber] )
				    VAR LastFiscalYearWeekAvailable = MAX ( 'Date'[FW YearWeekNumber] )
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[WeekDayNumber] <= LastDayOfWeekAvailable,
				            'Date'[FW YearWeekNumber] = LastFiscalYearWeekAvailable
				        )
				    RETURN
				        Result
				)
				VAR ValuePreviousPeriod = IF ( 
				    [ShowValueForDates],
				    VAR PreviousFiscalYearWeek = MAX ( 'Date'[FW YearWeekNumber] ) - 1
				    VAR LastDayOfWeekAvailable = 
				        CALCULATE ( 
				            MAX ( 'Date'[WeekDayNumber] ),
				            REMOVEFILTERS (                -- Remove filters from
				                'Date'[IsWorkingDay],       -- filter-safe columns
				                'Date'[Week Day],       -- to get the last day with data
				                'Date'[WeekDayNumber] -- selected in the report
				            ),
				            'Date'[DatesWithTransactions] = TRUE 
				        )
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[FW YearWeekNumber] = PreviousFiscalYearWeek,
				            'Date'[WeekDayNumber] <= LastDayOfWeekAvailable,
				            'Date'[DatesWithTransactions] = TRUE 
				        )
				    RETURN
				        Result
				)
				RETURN IF (
				        NOT ISBLANK ( ValueCurrentPeriod ) 
				            && NOT ISBLANK ( ValuePreviousPeriod ),
				        ValueCurrentPeriod - ValuePreviousPeriod
				    )
				```

		calculationItem 'WOWTD %' = ```
				VAR _WTD = IF ( 
				    [ShowValueForDates],
				    VAR LastDayOfWeekAvailable =  MAX ( 'Date'[WeekDayNumber] )
				    VAR LastFiscalYearWeekAvailable = MAX ( 'Date'[FW YearWeekNumber] )
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[WeekDayNumber] <= LastDayOfWeekAvailable,
				            'Date'[FW YearWeekNumber] = LastFiscalYearWeekAvailable
				        )
				    RETURN
				        Result
				)
				VAR _PWTD = IF ( 
				    [ShowValueForDates],
				    VAR PreviousFiscalYearWeek = MAX ( 'Date'[FW YearWeekNumber] ) - 1
				    VAR LastDayOfWeekAvailable = 
				        CALCULATE ( 
				            MAX ( 'Date'[WeekDayNumber] ),
				            REMOVEFILTERS (                -- Remove filters from
				                'Date'[IsWorkingDay],       -- filter-safe columns
				                'Date'[Week Day],       -- to get the last day with data
				                'Date'[WeekDayNumber] -- selected in the report
				            ),
				            'Date'[DatesWithTransactions] = TRUE 
				        )
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[FW YearWeekNumber] = PreviousFiscalYearWeek,
				            'Date'[WeekDayNumber] <= LastDayOfWeekAvailable,
				            'Date'[DatesWithTransactions] = TRUE 
				        )
				    RETURN
				        Result
				)
				
				RETURN DIVIDE ( 
				    _WTD,
				    _PWTD
				)
				```

		calculationItem PQTD = ```
				IF ( 
				    [ShowValueForDates],
				    VAR PreviousFiscalYearQuarter = MAX ( 'Date'[FW YearQuarterNumber] ) - 1
				    VAR LastDayOfFiscalYearQuarterAvailable = 
				        CALCULATE ( 
				            MAX ( 'Date'[FW DayOfQuarterNumber] ),
				            REMOVEFILTERS (                -- Remove filters from
				                'Date'[IsWorkingDay],       -- filter-safe columns
				                'Date'[Week Day],       -- to get the last day with data
				                'Date'[WeekDayNumber] -- selected in the report
				            ),
				            'Date'[DatesWithTransactions] = TRUE 
				        )
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[FW YearQuarterNumber] = PreviousFiscalYearQuarter,
				            'Date'[FW DayOfQuarterNumber] <= LastDayOfFiscalYearQuarterAvailable,
				            'Date'[DatesWithTransactions] = TRUE 
				        )
				    RETURN
				        Result
				)
				```

		calculationItem QOQTD = ```
				VAR ValueCurrentPeriod = IF ( 
				    [ShowValueForDates],
				    VAR LastDayAvailable =  MAX ( 'Date'[FW DayOfQuarterNumber] )
				    VAR LastFiscalYearQuarterAvailable = MAX ( 'Date'[FW YearQuarterNumber] )
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[FW DayOfQuarterNumber] <= LastDayAvailable,
				            'Date'[FW YearQuarterNumber] = LastFiscalYearQuarterAvailable
				        )
				    RETURN
				        Result
				)
				VAR ValuePreviousPeriod = IF ( 
				    [ShowValueForDates],
				    VAR PreviousFiscalYearQuarter = MAX ( 'Date'[FW YearQuarterNumber] ) - 1
				    VAR LastDayOfFiscalYearQuarterAvailable = 
				        CALCULATE ( 
				            MAX ( 'Date'[FW DayOfQuarterNumber] ),
				            REMOVEFILTERS (                -- Remove filters from
				                'Date'[IsWorkingDay],       -- filter-safe columns
				                'Date'[Week Day],       -- to get the last day with data
				                'Date'[WeekDayNumber] -- selected in the report
				            ),
				            'Date'[DatesWithTransactions] = TRUE 
				        )
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[FW YearQuarterNumber] = PreviousFiscalYearQuarter,
				            'Date'[FW DayOfQuarterNumber] <= LastDayOfFiscalYearQuarterAvailable,
				            'Date'[DatesWithTransactions] = TRUE 
				        )
				    RETURN
				        Result
				)
				RETURN IF (
				        NOT ISBLANK ( ValueCurrentPeriod ) 
				            && NOT ISBLANK ( ValuePreviousPeriod ),
				        ValueCurrentPeriod - ValuePreviousPeriod
				    )
				```

		calculationItem 'QOQTD %' = ```
				VAR ValueCurrentPeriod = IF ( 
				    [ShowValueForDates],
				    VAR LastDayAvailable =  MAX ( 'Date'[FW DayOfQuarterNumber] )
				    VAR LastFiscalYearQuarterAvailable = MAX ( 'Date'[FW YearQuarterNumber] )
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[FW DayOfQuarterNumber] <= LastDayAvailable,
				            'Date'[FW YearQuarterNumber] = LastFiscalYearQuarterAvailable
				        )
				    RETURN
				        Result
				)
				VAR ValuePreviousPeriod = IF ( 
				    [ShowValueForDates],
				    VAR PreviousFiscalYearQuarter = MAX ( 'Date'[FW YearQuarterNumber] ) - 1
				    VAR LastDayOfFiscalYearQuarterAvailable = 
				        CALCULATE ( 
				            MAX ( 'Date'[FW DayOfQuarterNumber] ),
				            REMOVEFILTERS (                -- Remove filters from
				                'Date'[IsWorkingDay],       -- filter-safe columns
				                'Date'[Week Day],       -- to get the last day with data
				                'Date'[WeekDayNumber] -- selected in the report
				            ),
				            'Date'[DatesWithTransactions] = TRUE 
				        )
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[FW YearQuarterNumber] = PreviousFiscalYearQuarter,
				            'Date'[FW DayOfQuarterNumber] <= LastDayOfFiscalYearQuarterAvailable,
				            'Date'[DatesWithTransactions] = TRUE 
				        )
				    RETURN
				        Result
				)
				VAR _QOQTD = IF (
				        NOT ISBLANK ( ValueCurrentPeriod ) 
				            && NOT ISBLANK ( ValuePreviousPeriod ),
				        ValueCurrentPeriod - ValuePreviousPeriod
				    )
				VAR _PQTD = IF ( 
				    [ShowValueForDates],
				    VAR PreviousFiscalYearQuarter = MAX ( 'Date'[FW YearQuarterNumber] ) - 1
				    VAR LastDayOfFiscalYearQuarterAvailable = 
				        CALCULATE ( 
				            MAX ( 'Date'[FW DayOfQuarterNumber] ),
				            REMOVEFILTERS (                -- Remove filters from
				                'Date'[IsWorkingDay],       -- filter-safe columns
				                'Date'[Week Day],       -- to get the last day with data
				                'Date'[WeekDayNumber] -- selected in the report
				            ),
				            'Date'[DatesWithTransactions] = TRUE 
				        )
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[FW YearQuarterNumber] = PreviousFiscalYearQuarter,
				            'Date'[FW DayOfQuarterNumber] <= LastDayOfFiscalYearQuarterAvailable,
				            'Date'[DatesWithTransactions] = TRUE 
				        )
				    RETURN
				        Result
				)
				
				RETURN DIVIDE ( 
				    _QOQTD,
				    _PQTD
				)
				```

		calculationItem PY =
				IF (
				    [ShowValueForDates],
				    SUMX (
				        VALUES ( 'Date'[FW YearNumber] ),
				        VAR CurrentFiscalYearNumber = 'Date'[FW YearNumber]
				        VAR DaysSelected =
				            CALCULATETABLE (
				                VALUES ( 'Date'[FW DayOfYearNumber] ),
				                REMOVEFILTERS (
				                    'Date'[IsWorkingDay],
				                    'Date'[Week Day],
				                    'Date'[WeekDayNumber]
				                ),
				                'Date'[DatesWithTransactions] = TRUE
				            )
				        RETURN
				            CALCULATE (
				                SELECTEDMEASURE(),
				                'Date'[FW YearNumber] = CurrentFiscalYearNumber - 1,
				                DaysSelected,
				                ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] )
				            )
				    )
				)

		calculationItem YOY = ```
				VAR ValueCurrentPeriod = SELECTEDMEASURE()
				VAR ValuePreviousPeriod = IF (
				    [ShowValueForDates],
				    SUMX (
				        VALUES ( 'Date'[FW YearNumber] ),
				        VAR CurrentFiscalYearNumber = 'Date'[FW YearNumber]
				        VAR DaysSelected =
				            CALCULATETABLE (
				                VALUES ( 'Date'[FW DayOfYearNumber] ),
				                REMOVEFILTERS (
				                    'Date'[IsWorkingDay],
				                    'Date'[Week Day],
				                    'Date'[WeekDayNumber]
				                ),
				                'Date'[DatesWithTransactions] = TRUE
				            )
				        RETURN
				            CALCULATE (
				                SELECTEDMEASURE(),
				                'Date'[FW YearNumber] = CurrentFiscalYearNumber - 1,
				                DaysSelected,
				                ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] )
				            )
				    )
				)
				RETURN IF (
				        NOT ISBLANK ( ValueCurrentPeriod ) 
				            && NOT ISBLANK ( ValuePreviousPeriod ),
				        ValueCurrentPeriod - ValuePreviousPeriod
				    )
				```

		calculationItem 'YOY %' = ```
				VAR _PY = IF (
				    [ShowValueForDates],
				    SUMX (
				        VALUES ( 'Date'[FW YearNumber] ),
				        VAR CurrentFiscalYearNumber = 'Date'[FW YearNumber]
				        VAR DaysSelected =
				            CALCULATETABLE (
				                VALUES ( 'Date'[FW DayOfYearNumber] ),
				                REMOVEFILTERS (
				                    'Date'[IsWorkingDay],
				                    'Date'[Week Day],
				                    'Date'[WeekDayNumber]
				                ),
				                'Date'[DatesWithTransactions] = TRUE
				            )
				        RETURN
				            CALCULATE (
				                SELECTEDMEASURE(),
				                'Date'[FW YearNumber] = CurrentFiscalYearNumber - 1,
				                DaysSelected,
				                ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] )
				            )
				    )
				)
				VAR ValueCurrentPeriod = SELECTEDMEASURE()
				VAR ValuePreviousPeriod = IF (
				    [ShowValueForDates],
				    SUMX (
				        VALUES ( 'Date'[FW YearNumber] ),
				        VAR CurrentFiscalYearNumber = 'Date'[FW YearNumber]
				        VAR DaysSelected =
				            CALCULATETABLE (
				                VALUES ( 'Date'[FW DayOfYearNumber] ),
				                REMOVEFILTERS (
				                    'Date'[IsWorkingDay],
				                    'Date'[Week Day],
				                    'Date'[WeekDayNumber]
				                ),
				                'Date'[DatesWithTransactions] = TRUE
				            )
				        RETURN
				            CALCULATE (
				                SELECTEDMEASURE(),
				                'Date'[FW YearNumber] = CurrentFiscalYearNumber - 1,
				                DaysSelected,
				                ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] )
				            )
				    )
				)
				VAR _YOY = IF (
				        NOT ISBLANK ( ValueCurrentPeriod ) 
				            && NOT ISBLANK ( ValuePreviousPeriod ),
				        ValueCurrentPeriod - ValuePreviousPeriod
				    )
				RETURN DIVIDE ( 
				    _YOY,
				    _PY
				)
				```

		calculationItem PW = ```
				IF (
				    [ShowValueForDates],
				    SUMX ( 
				        VALUES ( 'Date'[FW YearWeekNumber] ),
				        VAR CurrentFiscalYearWeekNumber = 'Date'[FW YearWeekNumber] 
				        VAR DaysSelected = 
				            CALCULATETABLE (
				                VALUES ( 'Date'[WeekDayNumber] ),
				                REMOVEFILTERS (
				                    'Date'[IsWorkingDay],
				                    'Date'[Week Day],
				                    'Date'[WeekDayNumber]
				                ),
				                'Date'[DatesWithTransactions] = TRUE
				            )
				        RETURN 
				            CALCULATE (
				                SELECTEDMEASURE(),
				                'Date'[FW YearWeekNumber] = CurrentFiscalYearWeekNumber - 1,
				                KEEPFILTERS ( DaysSelected ),
				                ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] )
				            )
				    )
				)
				```

		calculationItem WOW = ```
				VAR ValueCurrentPeriod = SELECTEDMEASURE()
				VAR ValuePreviousPeriod = IF (
				    [ShowValueForDates],
				    SUMX ( 
				        VALUES ( 'Date'[FW YearWeekNumber] ),
				        VAR CurrentFiscalYearWeekNumber = 'Date'[FW YearWeekNumber] 
				        VAR DaysSelected = 
				            CALCULATETABLE (
				                VALUES ( 'Date'[WeekDayNumber] ),
				                REMOVEFILTERS (
				                    'Date'[IsWorkingDay],
				                    'Date'[Week Day],
				                    'Date'[WeekDayNumber]
				                ),
				                'Date'[DatesWithTransactions] = TRUE
				            )
				        RETURN 
				            CALCULATE (
				                SELECTEDMEASURE(),
				                'Date'[FW YearWeekNumber] = CurrentFiscalYearWeekNumber - 1,
				                KEEPFILTERS ( DaysSelected ),
				                ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] )
				            )
				    )
				)
				RETURN IF (
				        NOT ISBLANK ( ValueCurrentPeriod ) 
				            && NOT ISBLANK ( ValuePreviousPeriod ),
				        ValueCurrentPeriod - ValuePreviousPeriod
				    )
				```

		calculationItem PQ = ```
				IF (
				    [ShowValueForDates],
				    SUMX ( 
				        VALUES ( 'Date'[FW YearQuarterNumber] ),
				        VAR CurrentFiscalYearQuarterNumber = 'Date'[FW YearQuarterNumber]
				        VAR DaysSelected = 
				            CALCULATETABLE (
				                VALUES ( 'Date'[FW DayOfQuarterNumber] ),
				                REMOVEFILTERS (
				                    'Date'[IsWorkingDay],
				                    'Date'[Week Day],
				                    'Date'[WeekDayNumber]
				                ),
				                'Date'[DatesWithTransactions] = TRUE
				            )
				        RETURN 
				            CALCULATE (
				                SELECTEDMEASURE(),
				                'Date'[FW YearQuarterNumber] = CurrentFiscalYearQuarterNumber - 1,
				                DaysSelected,
				                ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] )
				            )
				    )
				)
				```

		calculationItem 'WTDOPW %' = ```
				VAR PWC = IF (
				    [ShowValueForDates] && HASONEVALUE ( 'Date'[FW YearWeekNumber] ),
				    VAR PreviousFiscalYearWeek = MAX ( 'Date'[FW YearWeekNumber] ) - 1
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[FW YearWeekNumber] = PreviousFiscalYearWeek
				        )
				    RETURN
				        Result
				)
				VAR ValueCurrentPeriod = IF ( 
				    [ShowValueForDates],
				    VAR LastDayOfWeekAvailable =  MAX ( 'Date'[WeekDayNumber] )
				    VAR LastFiscalYearWeekAvailable = MAX ( 'Date'[FW YearWeekNumber] )
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[WeekDayNumber] <= LastDayOfWeekAvailable,
				            'Date'[FW YearWeekNumber] = LastFiscalYearWeekAvailable
				        )
				    RETURN
				        Result
				)
				VAR ValuePreviousPeriod = IF (
				    [ShowValueForDates] && HASONEVALUE ( 'Date'[FW YearWeekNumber] ),
				    VAR PreviousFiscalYearWeek = MAX ( 'Date'[FW YearWeekNumber] ) - 1
				    VAR Result =
				        CALCULATE (
				            SELECTEDMEASURE(),
				            ALLEXCEPT ( 'Date', 'Date'[IsWorkingDay], 'Date'[Week Day] ),
				            'Date'[FW YearWeekNumber] = PreviousFiscalYearWeek
				        )
				    RETURN
				        Result
				)
				VAR WTDOPW = IF (
				        NOT ISBLANK ( ValueCurrentPeriod ) 
				            && NOT ISBLANK ( ValuePreviousPeriod ),
				        ValueCurrentPeriod - ValuePreviousPeriod
				    )
				RETURN DIVIDE ( 
				    WTDOPW,
				    PWC
				)
				```

	column 'Selected Measure'
		dataType: string
		lineageTag: 36404077-6e32-4fee-bcaf-72366eb42af4
		summarizeBy: none
		sourceColumn: Name
		sortByColumn: Ordinal

		annotation SummarizationSetBy = Automatic

	column Ordinal
		dataType: int64
		isHidden
		lineageTag: cf957303-06b6-4ea1-9695-6f11a75c8f34
		summarizeBy: sum
		sourceColumn: Ordinal

		annotation SummarizationSetBy = Automatic

	column Type = ```
			
			SWITCH(
			    [Selected Measure],
			    // ----- Period-Over-Period Growth
			    "PP","Period-Over-Period Growth",
			    "POP","Period-Over-Period Growth",
			    "POP %","Period-Over-Period Growth",  
			
			    "PM","Period-Over-Period Growth",
			    "MOM","Period-Over-Period Growth",
			    "MOM %","Period-Over-Period Growth",       
			
			    "PQ","Period-Over-Period Growth",
			    "QOQ","Period-Over-Period Growth",
			    "QOQ %","Period-Over-Period Growth",    
			    
			    "PY","Period-Over-Period Growth",
			    "YOY","Period-Over-Period Growth",
			    "YOY %","Period-Over-Period Growth",
			
			    "PW","Period-Over-Period Growth",
			    "WOW","Period-Over-Period Growth",
			    "WOW %","Period-Over-Period Growth",
			
			    // ----- Period-To-Date Totals
			    "WTD","Period-To-Date Totals",
			    "MTD","Period-To-Date Totals",
			    "QTD","Period-To-Date Totals",
			    "YTD","Period-To-Date Totals",
			
			    // ----- Period-To-Date Growth
			    "WOWTD","Period-To-Date Growth",
			    "PWTD","Period-To-Date Growth",
			    "WOWTD %","Period-To-Date Growth",
			
			    "MOMTD","Period-To-Date Growth",
			    "PMTD","Period-To-Date Growth",
			    "MOMTD %","Period-To-Date Growth",
			
			    "QOQTD","Period-To-Date Growth",
			    "PQTD","Period-To-Date Growth",
			    "QOQTD %","Period-To-Date Growth",
			
			    "YOYTD","Period-To-Date Growth",
			    "PYTD","Period-To-Date Growth",
			    "YOYTD %","Period-To-Date Growth",
			
			    // ---- Period-To-Date with Previous Full Period
			    "PYC","Period-To-Date with Previous Full Period",
			    "YTDOPY","Period-To-Date with Previous Full Period",
			    "YTDOPY %","Period-To-Date with Previous Full Period",
			
			    "PQC","Period-To-Date with Previous Full Period",
			    "QTDOPQ","Period-To-Date with Previous Full Period",
			    "QTDOPQ %","Period-To-Date with Previous Full Period",
			
			    "PMC","Period-To-Date with Previous Full Period",
			    "MTDOPM","Period-To-Date with Previous Full Period",
			    "MTDOPM %","Period-To-Date with Previous Full Period",
			
			    "PWC","Period-To-Date with Previous Full Period",
			    "WTDOPW","Period-To-Date with Previous Full Period",
			    "WTDOPW %","Period-To-Date with Previous Full Period",
			
			    // ----  Moving Averages
			    "AVG 1Y","Moving Averages",
			    "AVG 30D","Moving Averages",
			    "AVG 3M","Moving Averages",
			    "AVG 1Q","Moving Averages",
			    "AVG 4W","Moving Averages",
			
			    // ---- Moving Annual Total Growth
			    "MATG","Moving Annual Total Growth",
			    "MATG %","Moving Annual Total Growth",
			    "PYMAT","Moving Annual Total Growth",
			    "MAT","Moving Annual Total Growth"
			)
			```
		lineageTag: 3b180c77-b5f9-4730-bc08-594865044f5d
		summarizeBy: none

		annotation SummarizationSetBy = Automatic

	column 'Sub Type' = ```
			
			SWITCH(
			    [Type],
			    "Period-To-Date Totals",
			        SWITCH( [Selected Measure],
			        "WTD","Period-To-Date Totals",
			        "MTD","Period-To-Date Totals",
			        "QTD","Period-To-Date Totals",
			        "YTD","Period-To-Date Totals"
			        ),
			    "Period-Over-Period Growth",
			        SWITCH( [Selected Measure],
			        "PY","Year-Over-Year Growth",
			        "YOY","Year-Over-Year Growth",
			        "YOY %","Year-Over-Year Growth",
			
			        "PQ","Quarter-Over-Quarter Growth",
			        "QOQ","Quarter-Over-Quarter Growth",
			        "QOQ %","Quarter-Over-Quarter Growth",
			        
			        "PM", "Month-Over-Month Growth",
			        "MOM", "Month-Over-Month Growth",
			        "MOM %", "Month-Over-Month Growth",
			        
			        "PP", "Period-Over-Period Growth",
			        "POP", "Period-Over-Period Growth",
			        "POP %", "Period-Over-Period Growth",
			
			        "PW","Week-Over-Week Growth",
			        "WOW","Week-Over-Week Growth",
			        "WOW %","Week-Over-Week Growth"
			        ),
			    "Period-To-Date Growth",
			        SWITCH( [Selected Measure],
			        "PYTD","Year-Over-Year-To-Date Growth",
			        "YOYTD","Year-Over-Year-To-Date Growth",
			        "YOYTD %","Year-Over-Year-To-Date Growth",
			
			        "PQTD","Quarter-Over-Quarter-To-Date Growth",
			        "QOQTD","Quarter-Over-Quarter-To-Date Growth",
			        "QOQTD %","Quarter-Over-Quarter-To-Date Growth",
			        
			        "PMTD", "Month-Over-Month-To Date Growth",
			        "MOMTD", "Month-Over-Month-To Date Growth",
			        "MOMTD %", "Month-Over-Month-To Date Growth",
			
			        "WOWTD","Week-Over-Week-To Date Growth",
			        "PWTD","Week-Over-Week-To Date Growth",
			        "WOWTD %","Week-Over-Week-To Date Growth"
			        ),
			    "Period-To-Date with Previous Full Period",
			        SWITCH( [Selected Measure],
			        "PYC","Year-To-Date-Over Full Previous Year",
			        "YTDOPY","Year-To-Date-Over Full Previous Year",
			        "YTDOPY %","Year-To-Date-Over Full Previous Year",
			
			        "PQC","Quarter-To-Date-Over Full Previous Quarter",
			        "QTDOPQ","Quarter-To-Date-Over Full Previous Quarter",
			        "QTDOPQ %","Quarter-To-Date-Over Full Previous Quarter",
			
			        "PMC","Month-To-Date-Over Full Previous Month",
			        "MTDOPM","Month-To-Date-Over Full Previous Month",
			        "MTDOPM %","Month-To-Date-Over Full Previous Month",
			
			        "PWC","Week-To-Date with Previous Full Week",
			        "WTDOPW","Week-To-Date with Previous Full Week",
			        "WTDOPW %","Week-To-Date with Previous Full Week"
			        ),
			    "Moving Averages",
			        SWITCH( [Selected Measure],
			        "AVG 1Y","Moving Averages",
			        "AVG 30D","Moving Averages",
			        "AVG 3M","Moving Averages",
			        "AVG 1Q","Moving Averages",
			        "AVG 4W","Moving Averages"
			        ),
			    "Moving Annual Totals",
			        SWITCH( [Selected Measure],
			        "MAT","Moving Annual Totals"
			        ),
			    "Moving Annual Total Growth",
			        SWITCH( [Selected Measure],
			        "MATG","Moving Annual Total Growth",
			        "MATG %","Moving Annual Total Growth",
			        "PYMAT","Moving Annual Total Growth"
			        )
			)
			```
		lineageTag: 82f14efd-a8a2-4a4f-b131-06202332f656
		summarizeBy: none

		annotation SummarizationSetBy = Automatic

	hierarchy 'Calc. Group Hierarchy (Weekly)'
		lineageTag: 78a35f4a-6e2d-4bb6-9d1e-74fc12940b19

		level Type
			lineageTag: b869f7d5-eb6d-4718-a944-2848e5d38a48
			column: Type

		level 'Sub Type'
			lineageTag: 52abb79b-dfef-4280-8996-4e7d22842523
			column: 'Sub Type'

		level 'Selected Measure'
			lineageTag: e895a3a5-0d94-4760-925e-a9bd9ae36149
			column: 'Selected Measure'

